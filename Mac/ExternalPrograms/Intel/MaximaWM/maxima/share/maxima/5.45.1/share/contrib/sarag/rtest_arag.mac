/* This is a test for the examples from   */
/* the interactive electronic version of  */
/* "Algorithms in Real Algebraic Geometry */
/* by S. Basu, R. Pollack, M.-F. Roy      */
/* coded by F. Caruso     modified by Alexandre Le Meur     and Marie-Fran√ßoise Roy            */

(kill(all), load(sarag),0);
0$

/* -------------------------------------- */
/* Chapter                              2 */


trimZeros([3,0,-2,0,0,-1,-2]);[3,-2,-1,-2];

signChanges([3,0,-2,0,0,-1,-2]);1;

/* -------------------------------------- */
/* Chapter                              8 */
  
list2poly(getCoeffFromNewton([3,0,2,0]),x);
x^3-x;


saragHorner(x^3-x,x,2);
6;

/* Newton Sums */

polyFromNewton([3,0,2,0],x);
x^3-x;

newtonFromPoly(x^3-x,x,4);
[3,0,2,0,2];

newtonFromPoly(x^3+x,x,5);
[3,0,-2,0,2,0];




/* matrixProd */
/* the example should be changed */
matrixProd([[0,1],[0,1]],[[0,1],[0,1]]);
[[0,1],[0,1]];

gaussDet([[1,2,3],[2,3,4],[3,4,6]]);
-1;

bareissDet([[1,2,3],[2,3,4],[3,4,6]]);
-1;

babyGiantCharPol(
[
[1,2,3,4],
[2,3,4,5],
[3,4,5,6],
[4,5,6,7]],x);
x^4-16*x^3-20*x^2;

/* Descartes' Signature */

descartesSignature([[3,0,-2],[0,-2,0],[-2,0,2]]);
1;

descartesSignature([[3,0,2],[0,2,0],[2,0,2]]);
3;

/* sRem */
/*
string(ratsimp(sRem(x^4+a*x^2+b*x+c,diff(x^4+a*x^2+b*x+c,x),x)));
"[x^4+a*x^2+b*x+c,4*x^3+2*a*x+b,-(2*a*x^2+3*b*x+4*c)/4,((8*a*c-9*b^2-2*a^\
3)*x-12*b*c-a^2*b)/a^2,(256*a^2*c^3-128*a^4*c^2+(144*a^3*b^2+16*a^6)*c-27*a^2*\
b^4-4*a^5*b^2)/(256*a^2*c^2+((-576*a*b^2)-128*a^4)*c+324*b^4+144*a^3*b^2+16*a^6)]";
*/
ratsimp(
ratsimp(sRem(x^4+a*x^2+b*x+c,diff(x^4+a*x^2+b*x+c,x),x))-
ratsimp([x^4+a*x^2+b*x+c,4*x^3+2*a*x+b,-(2*a*x^2+3*b*x+4*c)/4,((8*a*c-9*b^2-2*a^\
3)*x-12*b*c-a^2*b)/a^2,(256*a^2*c^3-128*a^4*c^2+(144*a^3*b^2+16*a^6)*c-27*a^2*\
b^4-4*a^5*b^2)/(256*a^2*c^2+((-576*a*b^2)-128*a^4)*c+324*b^4+144*a^3*b^2+16*a^6)]));
[0, 0, 0, 0, 0];


ratsimp(ratsimp(sRem(x^11-x^10+1,11*x^10-10*x^9,x))-
ratsimp([x^11-x^10+1,
11*x^10-10*x^9,
(10*x^9-121)/121,
-((1331*x-1210)/10),
275311670611/285311670611]));
[0, 0, 0, 0, 0];



string(ratsimp(sRemExt(x^3+2*x^2+3*x+4,3*x^2+4*x+3,x)));
"[[x^3+2*x^2+3*x+4,3*x^2+4*x+3,-(10*x+30)/9,-18],[1,0,-1,(27*x-45)/10\
,(3*x^2+4*x+3)/18],[0,1,(3*x+2)/9,-(9*x^2-9*x)/10,-(x^3+2*x^2+3*x+4)/18]]";


sSubResPol(x^4+a*x^2+b*x+c,
diff(x^4+a*x^2+b*x+c,x),x);

 [x**4+a*x**2+b*x+c,4*x**3+2*a*x+b,
  -8*a*x**2-12*b*x-16*c,
  32*a*c*x-36*b**2*x-8*a**3*x-48*b*c-4*a**2*b,
  256*c**3-128*a**2*c**2+144*a*b**2*c+16*a**4*c-27*b**4-4*a**3*b**2];


sSubResPol(x^4+b*x+c,4*x^3+b,x);
[x^4+b*x+c,
4*x^3+b,
-12*b*x-16*c,
-36*b^2*x-48*b*c,
256*c^3-27*b^4]
;

sSubResPol(x^11-x^10+1,diff(x^11-x^10+1,x),x);

 [x**11-x**10+1,
  11*x**10-10*x**9,
  10*x**9-121,100-110*x,
  0,0,0,0,0,0,
  2143588810*x-1948717100,
  -275311670611];

/* Sylvester Resultant */

sylvesterResultant(a*x^2+b*x+c,2*a*x+b,x);
4*a^2*c-a*b^2;

sylvesterResultant(a*x+b,c*x+d,x);
a*d-b*c;

/* sSubResExt */
sSubResExt(x^4+b*x+c,4*x^3+b,x);
[ 
 [x**4+b*x+c,
  4*x**3+b,
  -12*b*x-16*c,
  -36*b**2*x-48*b*c,
  256*c**3-27*b**4],
 [1,0,-16,-48*b,
  144*b**2*x**2-192*b*c*x+256*c**2,
  -1024*c**3*x**3+108*b**4*x**3-256*b*c**3+27*b**5
 ],
 [0,1,4*x,
  12*b*x,
  -36*b**2*x**3+48*b*c*x**2-64*c**2*x-27*b**3,
  256*c**3*x**4-27*b**4*x**4+256*b*c**3*x-27*b**5*x+256*c**4-27*b**4*c
 ]
];

/* Discriminant */

subDiscrCoeff(a*x^2+b*x+c,x);
[1,2,b^2-4*a*c];

discriminant(a*x^2+b*x+c,x);
b^2-4*a*c;

subDiscrCoeff(x^3+a*x+b,x);
[1,3,-6*a,-27*b^2-4*a^3];

discriminant(x^3+a*x+b,x);
-27*b^2-4*a^3;

subDiscrCoeff(x^4+a*x^2+b*x+c,x)[5];
256*c^3-128*a^2*c^2+144*a*b^2*c+16*a^4*c-27*b^4-4*a^3*b^2;

discriminant(x^4+a*x^2+b*x+c,x);
256*c^3-128*a^2*c^2+144*a*b^2*c+16*a^4*c-27*b^4-4*a^3*b^2;


/* -------------------------------------- */
/* Chapter                              9 */

signChanges([3,0,-2,0,0,-1,-2]);
1;

modifiedSignChanges([3,0,-2,0,0,-1,-2]);
3;

genPermMVar([3,0,-2,0,0,-1,-2]);
0;

sRemCauchyIndex(
(x-5)*(x-4)*(x-2)*(x+1)*(x+2)*(x+4),
(x-3)^2*(x-1)*(x+3),x);
0;

sRemCauchyIndexBetween(diff((x-3)^2*(x-1)*(x+3),x),(x-3)^2*(x-1)*(x+3),x,0,1);
1;

sRemCauchyIndex(diff((x-3)^2*(x-1)*(x+3),x),(x-3)^2*(x-1)*(x+3),x);
3;

sRemCauchyIndexBetween(diff((x-3)^2*(x-1)*(x+3),x),(x-3)^2*(x-1)*(x+3),x,-inf,+inf);
3;

sRemNumberOfRoots(x^11-x^10+1,x);
1;

sRemTarskiQuery(1,x^11-x^10+1,x);
1;

sRemTarskiQuery(x,x^11-x^10+1,x);
-1;

sRemNumberOfRootsBetween(x^11-x^10+1,x,-1,0);
1;

sRemTarskiQueryBetween(x,x^11-x^10+1,x,-1,0);
-1;

sRemTarskiQueryBetween(x,x^11-x^10+1,x,0,+inf);
0;

sRemTarskiQueryBetween(x,x^11-x^10+1,x,-inf,0);
-1;

sSubResCauchyIndex(
(x-5)*(x-4)*(x-2)*(x+1)*(x+2)*(x+4),
(x-3)^2*(x-1)*(x+3),x);
0;

sSubResCauchyIndex(diff((x-3)^2*(x-1)*(x+3),x),(x-3)^2*(x-1)*(x+3),x);
3;

sSubResTarskiQuery(
1,
9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+
49*x^4+93*x^3-42*x^2-18*x+9,x);
6;

sSubResTarskiQuery(
x,
9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+
49*x^4+93*x^3-42*x^2-18*x+9,x);
2;

sSubResTarskiQuery(1,x^11-x^10+1,x);
1;

sSubResTarskiQuery(x,x^11-x^10+1,x);
-1;

sSubResNumberOfRoots(x^11-x^10+1,x);
1;

sSubResTarskiQueryBetween(x,x^11-x^10+1,x,-1,0);
-1;

sSubResNumberOfRootsBetween(x^11-x^10+1,x,-1,0);
1;

sSubResNumberOfRootsBetween(x^11-x^10+1,x,0,2);
0;

sSubResNumberOfRootsBetween(x^11-x^10+1,x,-2,0);
1;


/* modified Sign Changes */

modifiedSignChanges([3,0,-2,0,0,-1,-2]);
3;

/* Hankel Matrices */

hankelMatrix(newtonFromPoly(x^3+a*x+b,x,4));
[[3,0,-2*a],[0,-2*a,-3*b],[-2*a,-3*b,2*a^2]];

hankelSignature(newtonFromPoly(x^3-x,x,4));
3;

hankelSignature(newtonFromPoly(x^3+x,x,4));
1;

hankelMatrix(newtonFromPoly(x^3+x,x,4));
[[3,0,-2],[0,-2,0],[-2,0,2]];

hankelMatrix(newtonFromPoly(x^3-x,x,4));
[[3,0,2],[0,2,0],[2,0,2]];

descartesSignature([[3,0,2],[0,2,0],[2,0,2]]);
3;



posNegDiff((x^2-1)*(x^3-1),x);
-1;


/* -------------------------------------- */
/* Chapter                             10 */

cauchyRootUpperBound(x^2-100,x);
101;

cauchyRootLowerBound(x^2-100,x);
100/101;

/* GCD Free Part */

gcdFreePartWithZ((x^2-1)*(x+2),(x+1)*x,x);
[x+1,x^2+x-2];

gcdFreePartWithZ((x^2-1)^2*(x+2),(x+1)*x^2,x);
[x+1,x^4+x^3-3*x^2-x+2];

gcdFreePart((x^2-1)*(x+2),(x+1)*x,x);
[2*x+2,2*x^2+2*x-4]; 

gcdFreePartWithZ((x+1)^3*x^4,(x^2-1)^2*(x+2),x);
[x^2+2*x+1,x^5+x^4];

gcdFreePart(a*x^2+b*x+c,2*a*x+b,x);
[a*b^2-4*a^2*c,-4*a^3*c*x^2+a^2*b^2*x^2-4*a^2*b*c*x+a*b^3*x-4*a^2*c^2+a*b^2*c];

gcdFreePart((x^2-1)^2*(x+2),(x+1)*x^2,x);
[4*x+4,4*x^4+4*x^3-12*x^2-4*x+8];

gcdFreePart(9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,diff(9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x),x);
[-165117711302736225120*x^5+385274659706384525280*x^2-165117711302736225120,-1486059401724626026080*x^8
+2972118803449252052160*x^6 +1981412535632834701440*x^5-8421003276439547481120*x^3+3467471937357460727520*x^2
+2972118803449252052160*x-1486059401724626026080];

gcdFreePartWithZ(9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,diff(9*x^13-18*x^11-33*x^10+102*x^8+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x),x);
[9*x^5-21*x^2+9,9*x^8-18*x^6-12*x^5+51*x^3-21*x^2-18*x+9];



/* Berstein Coefficients */

convert2Bernstein(x^2,2,x,0,1);
[0,0,1];

convert2Bernstein(x^2,3,x,0,1);
[0,0,1/3,1];

convert2Bernstein(-33*x^3+69*x^2-30*x+4,3,x,0,1);
[4,-6,7,10];

convert2Bernstein(-33*x^3+69*x^2-30*x+4,2,x,0,1);
false;

specialBernsteinSplit([4,-6,7,10],0,1);
[
[32,-8,-2,17],
[17,36,68,80]];

specialBernsteinSplit([32,-8,-2,17],0,1/2);
[
[256,96,28,19],
[19,10,60,136]
];

/* Isolation of Roots & deCasteljau*/

deCasteljauIsolateRoots(-33*x^3+69*x^2-30*x+4,x);
[[1,2]];

deCasteljauIsolateRoots(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x);
[[-2,-1],[-1,0],[1/2,5/8],[5/8,3/4],[1],[1,2]];

deCasteljauIsolateRoots(10*x^3+21*(1-x)*x^2-
18*(1-x)^2*x+4*(1-x)^3,x);
[[1,2]];

deCasteljauIsolateRootsBetween(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x,0,1);
[[1/2,5/8],[5/8,3/4]];

deCasteljauNumberOfRoots(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x);
6;

deCasteljauNumberOfRootsBetween(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x,0,1);
2;

deCasteljauFindRoots(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x,1/8);
[[-13/8,-25/16],[-5/8,-9/16],[9/16,5/8],[11/16,3/4],[1],[9/8,19/16]];

deCasteljauFindRoots(9*x^13-18*x^11-33*x^10+102*x^8
+7*x^7-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2-18*x+9,x,1);
[[-2,-3/2],[-1,-1/2],[1/2,5/8],[5/8,3/4],[1],[1,3/2]];

/* Sign Determination */

deCasteljauSignsAtRoots(
  deCasteljauIsolateRoots((x-2)*(x^2-1),x),
  (x-2)*(x^2-1),
  x^2-4,
  x);
[[[-2,0],-1],[[0,2],-1],[[2],0]];

evaluateSignsAtRoots(
 x^2-4,
 (x^3-2*x^2-x+3)*(x-2),
 x);
[
 [[2]],
 [[[-2],1]],
 [[[-2,0],-1]]
];

naiveSignDetermination(
 [x,x+1,x-2],
 x^5-9*x^3-x^2+9,
 sSubResTarskiQuery,x);
[[-1,-1,-1],[1,1,-1],[1,1,1]];

smartSignDetermination(
 [x,x+1,x-2],
 x^5-9*x^3-x^2+9,
 sSubResTarskiQuery,x);
[[1,1,1],[1,1,-1],[-1,-1,-1]];

smartSignDetermination(
 [x-2,x+1,x],
 x^5-9*x^3-x^2+9,
 sSubResTarskiQuery,x);
[[1,1,1],[-1,1,1],[-1,-1,-1]];

/* Thom Encoding */

thomEncoding(x^2-2,x);
[[-1,1],[1,1]];

thomEncoding(
9*x^13-18*x^11-33*x^10+102*x^8+7*x^7
-36*x^6-122*x^5+49*x^4+93*x^3-42*x^2
-18*x+9,x);
[
 [1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],
 [0,1,-1,1,-1,1,1,-1,1,-1,1,-1,1],
 [-1,1,-1,1,1,-1,-1,-1,1,1,1,1,1],
 [0,-1,-1,1,1,-1,-1,1,1,1,1,1,1], 
 [1,1,-1,-1,1,1,1,1,1,1,1,1,1],
 [0,1,1,1,1,1,1,1,1,1,1,1,1]
];
 

thomCompare(
 x^2-4,
 expand((x-2)*(x^3-1)),x);
[[1, [- 1, 1]], [2, [- 1, 0, 1, 1]], 
[0, [1, 1], [1, 1, 1, 1]]];



/* -------------------------------------- */
/* Chapter                             11 */

/* not yet in the book */
topology(x^2+y^2-1,x,y);
[0,[0,[1,1],2,[1,1],0]];


/* Certificate of positivity */
certificate(5*x^2-4*x+1,x);
[1,
[
[[- 1, 0], 1, [10, 3, 1]],
[[0, 1/2], 4, [4, 0, 1]],
[[1/2, 1], 4, [1, 2, 8]]
]
];


certificate(x^4+(8*x-1)^2,x);
[1,
[
[[- 1, 0], 3, [246, 135, 59, 15, 3]],
[[0, 1/8], 12288, [12288, 6144, 2048, 0, 3]],
[[1/8, 1], 12288, [3, 24, 100544, 302592, 614400]]
]
];


certificate(x^4 + (2*x-1)^2,x);
[1,
[
[[- 1, 0], 3, [30, 18, 11, 6, 3]],
[[0, 1/2], 48, [48, 24, 8, 0, 3]],
[[1/2, 1], 48, [3, 6, 20, 48, 96]]
]
];


/* Multi certificate of positivity */

simplex2bar([[0,0],[1,0],[0,1]],[x,y]);
[-y-x+1,x,y];

monom2bern(9*y^2-24*x*y+12*y+16*x^2-16*x+5,[[0,0],[1,0],[0,1]],[x,y],2);
[5,-3,11,5,-9,26];

monom2bern(9*y^2-24*x*y+12*y+16*x^2-16*x+5,[[0,0],[1,0],[0,1]],[x,y],10);
[5,17/5,31/5,97/45,13/3,38/5,19/15,127/45,82/15,46/5,11/15,5/3,166/45,34/5,11,5/9,13/15,34/15,214/45,25/3,13,11/15,19/45,6/5,46/15,271/45,151/15,76/5,19/15,1/3,22/45,26/15,61/15,337/45,12,88/5,97/45,3/5,2/15,34/45,37/15,79/15,412/45,212/15,101/5,17/5,11/9,2/15,2/15,11/9,17/5,20/3,496/45,247/15,23,5,11/5,22/45,-2/15,1/3,17/9,68/15,124/15,589/45,19,26];


pos([5,17/5,31/5,97/45,13/3,38/5,19/15,127/45,82/15,46/5,11/15,5/3,166/45,34/5,11,5/9,13/15,34/15,214/45,25/3,13,11/15,19/45,6/5,46/15,271/45,151/15,76/5,19/15,1/3,22/45,26/15,61/15,337/45,12,88/5,97/45,3/5,2/15,34/45,37/15,79/15,412/45,212/15,101/5,17/5,11/9,2/15,2/15,11/9,17/5,20/3,496/45,247/15,23,5,11/5,22/45,-2/15,1/3,17/9,68/15,124/15,589/45,19,26],10,2);
false;

monom2bern(9*y^2-24*x*y+12*y+16*x^2-16*x+5,[[0,0],[1,0],[0,1]],[x,y],11);
[5,39/11,67/11,131/55,243/55,404/55,83/55,167/55,60/11,482/55,51/55,107/55,212/55,366/55,569/55,7/11,63/55,28/11,266/55,441/55,133/11,7/11,7/11,84/55,182/55,329/55,105/11,14,51/55,23/55,4/5,114/55,233/55,401/55,618/55,884/55,83/55,27/55,4/11,62/55,153/55,293/55,482/55,144/11,1007/55,131/55,47/55,12/55,26/55,89/55,201/55,362/55,52/5,831/55,1139/55,39/11,83/55,4/11,6/55,41/55,25/11,258/55,8,61/5,951/55,256/11,5,27/11,4/5,2/55,9/55,13/11,34/11,324/55,527/55,779/55,216/11,26];

pos([5,39/11,67/11,131/55,243/55,404/55,83/55,167/55,60/11,482/55,51/55,107/55,212/55,366/55,569/55,7/11,63/55,28/11,266/55,441/55,133/11,7/11,7/11,84/55,182/55,329/55,105/11,14,51/55,23/55,4/5,114/55,233/55,401/55,618/55,884/55,83/55,27/55,4/11,62/55,153/55,293/55,482/55,144/11,1007/55,131/55,47/55,12/55,26/55,89/55,201/55,362/55,52/5,831/55,1139/55,39/11,83/55,4/11,6/55,41/55,25/11,258/55,8,61/5,951/55,256/11,5,27/11,4/5,2/55,9/55,13/11,34/11,324/55,527/55,779/55,216/11,26],11,2);
true;

multiCertificate(9*y^2-24*x*y+12*y+16*x^2-16*x+5,[[0,0],[1,0],[0,1]],[x,y],2,bisection,pos);
[[[[0,0],[1/2,1/2],[0,1]],[5,4,11,13/4,17/2,26]],[[[0,0],[1/2,0],[1/2,1/2]],[5,1,4,1,1,13/4]],[[[1/2,0],[3/4,1/4],[1/2,1/2]],[1,1,1,17/16,5/8,13/4]],[[[1/2,0],[1,0],[3/4,1/4]],[1,1,1,5,3/2,17/16]]];

/*
drawMultiCertificate(Cf,500);
*/

deCasteljau([[0,0],[1,0],[0,1]],[5,-3,11,5,-9,26],2,[1/2,1/2]);
[[[[1/2,1/2],[1,0],[0,1]],[13/4,-2,17/2,5,-9,26]],[[[0,0],[1/2,1/2],[0,1]],[5,4,11,13/4,17/2,26]],[[[0,0],[1,0],[1/2,1/2]],[5,-3,4,5,-2,13/4]]];


/*
drawMultiCertificate(Cg,500);
*/

standard_mid(2,3);
[matrix([0,0,0],[0,0,0],[0,1,2]),matrix([0,0,0],[0,0,1],[1,2,2]),matrix([0,0,1],[1,1,1],[1,2,2]),matrix([0,0,0],[0,1,1],[1,1,2]),matrix([0,0,0],[0,1,2],[2,2,2]),matrix([0,0,1],[1,2,2],[2,2,2]),matrix([0,1,1],[1,1,1],[1,1,2]),matrix([0,1,1],[1,1,2],[2,2,2]),matrix([0,1,2],[2,2,2],[2,2,2])];



