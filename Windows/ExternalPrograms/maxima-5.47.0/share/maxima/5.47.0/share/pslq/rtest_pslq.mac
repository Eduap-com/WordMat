(kill (all),
 reset (),
 0);
0;

/* expect that these are unchanged */

guess_exact_value ([123, foo/bar, sin(%e)/2]);
[123, foo/bar, sin(%e)/2];

/* verify that this is the small number we expect it to be */
float (10^(2 - fpprec));
1.0E-14;

/* floats */

(root: float (sin (%pi/12)),
 L: makelist (root^i, i, 0, 4),
 m: pslq_integer_relation(%%));
[- 1, 0, 16, 0, - 16];

is (abs (m . L) < 10^(2 - fpprec));
true;

guess_exact_value (0.0);
0;

guess_exact_value (1.0);
1;

guess_exact_value (float (%pi));
%pi;

guess_exact_value (float (sin (%pi/12)));
sqrt(2 - sqrt(3))/2;

guess_exact_value (float (1/(1 + f(%e))));
1/(1 + f(%e));

guess_exact_value (float ([1/sqrt(7), 11/sqrt(7), 19/sqrt(17)]));
[1/sqrt(7), 11/sqrt(7), 19/sqrt(17)];

guess_exact_value ([1.5, 2.75, 8.875, -1.5, -2.75, -8.875]);
[3/2, 11/4, 71/8, -3/2, -11/4, -71/8];

map (guess_exact_value, makelist (float (k/10), k, 1, 9));
[1/10, 1/5, 3/10, 2/5, 1/2, 3/5, 7/10, 4/5, 9/10];

/* example from: https://arminstraub.com/downloads/math/pslq.pdf */
guess_exact_value (3.6502815398728847452);
sqrt(2*sqrt(10) + 7);

/* bug reported to mailing list: guess_exact_value(0.1) triggers division by zero */
guess_exact_value(0.1);
1/10;

/* additional cases related to guess_exact_value(0.1) */

pslq_integer_relation ([1.0, 0.1, 0.010000000000000002, 0.0010000000000000002, 1.0000000000000002E-4]);
[1, - 10, 0, 0, 0];

pslq_integer_relation (float (makelist (1/10^k, k, 0, 4)));
[1, - 10, 0, 0, 0];

pslq_integer_relation (makelist (0.1^k, k, 0, 4));
[1, - 10, 0, 0, 0];

map (guess_exact_value, [0.125, 0.2, 0.25, float(1/15), float(1/17)]);
[1/8, 1/5, 1/4, 1/15, 1/17];

foolist: apply ('append, makelist (makelist (p/q, p, 1, 20 - q), q, 1, 19));
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1/2,1,3/2,2,5/2,3,7/2,4,9/2,
 5,11/2,6,13/2,7,15/2,8,17/2,9,1/3,2/3,1,4/3,5/3,2,7/3,8/3,3,10/3,11/3,4,13/3,
 14/3,5,16/3,17/3,1/4,1/2,3/4,1,5/4,3/2,7/4,2,9/4,5/2,11/4,3,13/4,7/2,15/4,4,
 1/5,2/5,3/5,4/5,1,6/5,7/5,8/5,9/5,2,11/5,12/5,13/5,14/5,3,1/6,1/3,1/2,2/3,
 5/6,1,7/6,4/3,3/2,5/3,11/6,2,13/6,7/3,1/7,2/7,3/7,4/7,5/7,6/7,1,8/7,9/7,10/7,
 11/7,12/7,13/7,1/8,1/4,3/8,1/2,5/8,3/4,7/8,1,9/8,5/4,11/8,3/2,1/9,2/9,1/3,
 4/9,5/9,2/3,7/9,8/9,1,10/9,11/9,1/10,1/5,3/10,2/5,1/2,3/5,7/10,4/5,9/10,1,
 1/11,2/11,3/11,4/11,5/11,6/11,7/11,8/11,9/11,1/12,1/6,1/4,1/3,5/12,1/2,7/12,
 2/3,1/13,2/13,3/13,4/13,5/13,6/13,7/13,1/14,1/7,3/14,2/7,5/14,3/7,1/15,2/15,
 1/5,4/15,1/3,1/16,1/8,3/16,1/4,1/17,2/17,3/17,1/18,1/9,1/19]$

map (guess_exact_value, float (foolist));
''foolist;

/* still more examples */

guess_exact_value (float (%phi));
(sqrt(5) + 1)/2;

guess_exact_value (float (1/%phi));
(sqrt(5) - 1)/2;

guess_exact_value (float (zeta (2)));
(%pi^2)/6;

guess_exact_value (float (zeta (4)));
(%pi^4)/90;

/* bigfloats */

(reset (fpprec), 0);
0;

(root: bfloat (sin (%pi/12)),
 L: makelist (root^i, i, 0, 4),
 m: pslq_integer_relation(%%));
[- 1, 0, 16, 0, - 16];

is (abs (m . L) < 10^(2 - fpprec));
true;

guess_exact_value (0.0b0);
0;

guess_exact_value (1.0b0);
1;

guess_exact_value (bfloat (%pi));
%pi;

guess_exact_value (bfloat (sin (%pi/12)));
sqrt(2 - sqrt(3))/2;

guess_exact_value (bfloat (1/(1 + f(%e))));
1/(1 + f(%e));

guess_exact_value (bfloat ([1/sqrt(7), 11/sqrt(7), 19/sqrt(17)]));
[1/sqrt(7), 11/sqrt(7), 19/sqrt(17)];

guess_exact_value ([1.5b0, 2.75b0, 8.875b0, -1.5b0, -2.75b0, -8.875b0]);
[3/2, 11/4, 71/8, -3/2, -11/4, -71/8];

map (guess_exact_value, makelist (bfloat (k/10), k, 1, 9));
[1/10, 1/5, 3/10, 2/5, 1/2, 3/5, 7/10, 4/5, 9/10];

/* example from: https://arminstraub.com/downloads/math/pslq.pdf */
guess_exact_value (3.6502815398728847452b0);
sqrt(2*sqrt(10) + 7);

/* bug reported to mailing list: guess_exact_value(0.1) triggers division by zero */
guess_exact_value(0.1b0);
1/10;

/* additional cases related to guess_exact_value(0.1) */

pslq_integer_relation ([1.0b0, 0.1b0, 0.010000000000000002b0, 0.0010000000000000002b0, 1.0000000000000002b-4]);
[1, - 10, 0, 0, 0];

pslq_integer_relation (bfloat (makelist (1/10^k, k, 0, 4)));
[1, - 10, 0, 0, 0];

pslq_integer_relation (makelist (0.1b0^k, k, 0, 4));
[1, - 10, 0, 0, 0];

map (guess_exact_value, [0.125b0, 0.2b0, 0.25b0, bfloat(1/15), bfloat(1/17)]);
[1/8, 1/5, 1/4, 1/15, 1/17];

foolist: apply ('append, makelist (makelist (p/q, p, 1, 20 - q), q, 1, 19));
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1/2,1,3/2,2,5/2,3,7/2,4,9/2,
 5,11/2,6,13/2,7,15/2,8,17/2,9,1/3,2/3,1,4/3,5/3,2,7/3,8/3,3,10/3,11/3,4,13/3,
 14/3,5,16/3,17/3,1/4,1/2,3/4,1,5/4,3/2,7/4,2,9/4,5/2,11/4,3,13/4,7/2,15/4,4,
 1/5,2/5,3/5,4/5,1,6/5,7/5,8/5,9/5,2,11/5,12/5,13/5,14/5,3,1/6,1/3,1/2,2/3,
 5/6,1,7/6,4/3,3/2,5/3,11/6,2,13/6,7/3,1/7,2/7,3/7,4/7,5/7,6/7,1,8/7,9/7,10/7,
 11/7,12/7,13/7,1/8,1/4,3/8,1/2,5/8,3/4,7/8,1,9/8,5/4,11/8,3/2,1/9,2/9,1/3,
 4/9,5/9,2/3,7/9,8/9,1,10/9,11/9,1/10,1/5,3/10,2/5,1/2,3/5,7/10,4/5,9/10,1,
 1/11,2/11,3/11,4/11,5/11,6/11,7/11,8/11,9/11,1/12,1/6,1/4,1/3,5/12,1/2,7/12,
 2/3,1/13,2/13,3/13,4/13,5/13,6/13,7/13,1/14,1/7,3/14,2/7,5/14,3/7,1/15,2/15,
 1/5,4/15,1/3,1/16,1/8,3/16,1/4,1/17,2/17,3/17,1/18,1/9,1/19]$

map (guess_exact_value, bfloat (foolist));
''foolist;

/* still more examples */

guess_exact_value (bfloat (%phi));
(sqrt(5) + 1)/2;

guess_exact_value (bfloat (1/%phi));
(sqrt(5) - 1)/2;

guess_exact_value (bfloat (zeta (2)));
(%pi^2)/6;

guess_exact_value (bfloat (zeta (4)));
(%pi^4)/90;
