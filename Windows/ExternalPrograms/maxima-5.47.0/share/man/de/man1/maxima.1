.TH "MAXIMA" "1" "2022-07-18"
.SH "NAME" 
Maxima \- Eine Common Lisp Version von MACSYMA, einem Programm f\(:ur symbolische Mathematik, ver\(:offentlicht unter der GNU Public License.
.LP
Rmaxima \- Eine Version von Maxima, die Befehls-Autovervollst\(:andigung beherrscht.
.LP
Xmaxima \- Eine Version von Maxima mit einem einfachen graphischen Benutzerinterface.

.SH "SYNTAX" 
.B maxima
[\fIOptionen\fR]
.LP
.B rmaxima
[\fIOptionen\fR]
.LP
.B xmaxima 
[\fIOptionen\fR]

.SH "BESCHREIBUNG" 
Maxima ist eine Version des am MIT entwickelten MACSYMA Systems, das unter Common Lisp l\(:auft.
Es ist ein interaktives Expertensystem und eine Programmierumgebung f\(:ur symbolische und numerische
Mathematik.
Es erm\(:oglicht Differentiation, Integration, die L\(:osung von linearen oder
polynomiellen Gleichungen, Faktorisierung von Polynomen, Taylorreihen- oder Laurentreihen-Entwicklung
von Funktionen, Berechnung von Poissionreihen, Matrizen- und Tensorberechnungen und
2D und 3D Graphiken.
Prozeduren k\(:onnen in einer ALGOL-\(:ahnlichen Syntax geschrieben werden und sowohl Lisp-\(:ahnliche Funktionen
als auch Pattern-Matching kann verwendet werden.
Maxima-Code kann in Dateien geschrieben und aus Dateien gelesen werden.
Maxima-Befehle in Dateien k\(:onnen gelesen und ausgef\(:uhrt werden, was Batch-Prozessing erm\(:oglicht.


.SH "OPTIONEN"
.TP
\fB\-b\fR \fIfile\fR, \fB\-\-batch=\fR\fIfile\fR
F\(:uhre Maxima-Datei \fIfile\fR nicht-interaktiv aus.
.TP
\fB\-\-batch-lisp=\fR\fIfile\fR
F\(:uhre Lisp-Datei \fIfile\fR nicht-interaktiv aus.
.TP
\fB\-\-batch-string=\fR\fIstring\fR
F\(:uhre die Befehle im String \fIstring\fR nicht-interaktiv aus.
.TP
\fB\-d\fR, \fB\-\-directories\fR
Gibt Informationen \(:uber die Maxima Verzeichnisstruktur aus.
.TP
\fB\-\-disable\-readline\fR
Deaktiviert die Readline-Unterst\(:utzung.
.TP
\fB\-g\fR, \fB\-\-enable\-lisp\-debugger\fR
Aktiviert den Lisp Debugger.
.TP
\fB\-h\fR, \fB\-\-help\fR
Gibt eine kurze Nutzungs\(:ubersicht aus.
.TP
\fB\-\-init=\fR\fIstring\fR
L\(:adt die Maxima- und Lisp-Initialisierungsdateien \fR\fIstring\fR.mac und \fR\fIstring\fR.lisp beim Programmstart.
.TP
\fB\-\-init-mac=\fR\fIfile\fR
L\(:adt die Maxima-Initialisierungsdatei \fR\fIfile\fR beim Programmstart.
.TP
\fB\-\-init-lisp=\fR\fIfile\fR
L\(:adt die Lisp-Initialisierungsdatei \fR\fIfile\fR beim Programmstart.
.TP
\fB\-l\fR \fIlisp\fR, \fB\-\-lisp=\fR\fIlisp\fR 
Verwendet die Lisp-Implementierung \fIlisp\fR f\(:ur Maxima. Die Option \fB\-\-list-avail\fR zeigt die m\(:oglichen Werte an.
.TP
.TP
\fB\-\-list-avail\fR
Listet die verf\(:ugbaren Lisp- und Maxima-Versionen auf.
.TP
\fB\-p\fR \fIlisp_file\fR, \fB\-\-preload-lisp=\fR\fIlisp_file\fR
L\(:adt die Lisp-Datei \fIlisp_file\fR vorab.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Unterdr\(:uckt die Ausgaben beim Programmstart.
.TP
\fB\-r\fR \fIstring\fR, \fB\-\-run-string=\fR\fIstring\fR
Verarbeitet die Befehle im String \fIstring\fR in einem interaktiven Modus.
.TP
\fB\-s\fR \fIport\fR, \fB\-\-server=\fR\fIport\fR
Verbindet Maxima zum Server an Port \fIport\fR.
Anmerkung: Das erzeugt keinen Maxima-Server, Maxima ist das Clientprogramm.
.TP
\fB\-u\fR \fIversion\fR, \fB\-\-use-version=\fR\fIversion\fR 
Startet Maxima Version \fIversion\fR. Die Option \fB\-\-list-avail\fR zeigt die 
m\(:oglichen Werte an.
.TP
\fB\-\-userdir=\fR\fIdirectory\fR 
Verwendet \fIdirectory\fR als das Homedirectory (standardm\(:assig %USERPROFILE%/maxima auf Windows, $HOME/.maxima bei anderen Betriebsystemen)
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Gibt zus\(:atzliche Informationen des Maxima Startskripts aus.
.TP
\fB\-\-version\fR
Gibt die (default) installierte Version aus.
.TP
\fB\-\-very\-quiet\fR
Unterdr\(:uckt Ausdrucksmarken und Startmeldungen.
.TP
\fB\-X\fR \fILisp-Optionen\fR, \fB\-\-lisp-options=\fR\fILisp-Optionen\fR
Optionen, die an das verwendete Lisp weitergereicht werden.
.TP
\fB\-\-no\-init\fR, \fB\-\-norc\fR
Initialisierungsdateien beim Start nicht laden.

.SH EINF\(:UHRENDE ANMERKUNGEN
Nach dem Start von
.I maxima
gibt Maxima eine Startmeldung aus, anschlie\(ssend einen Kommandozeilenprompt:
.LP
.B (%i1)
.LP
Alle Maxima Befehle m\(:ussen abgeschlossen werden mit:
.TP
1)
einem Strichpunkt (in diesem Fall, wird das Ergebnis ausgegeben, ein 
.B %o
mit einer laufenden Nummer wird vorher ausgegeben) oder mit
.TP
2)
einem Dollarzeichen (was die Ausgabe des Ergebnisses unterdr\(:uckt).
.LP
.SH BEISPIEL
.LP
(%i1) diff(sin(x),x);
.LP
(%o1)                         cos(x)
.LP
(%i2) integrate(%o1,x);
.LP
(%o2)                         sin(x)
.LP
Eingaben, die gemacht werden, erzeugen
.I "Maxima Objekte"
(wie z.B. Funktionen und Variablen) und modifizieren diese Objekte.
.LP
Unter UNIX ist es vielleicht besser, Maxima unter Gnu Emacs or XEmacs zu betreiben.
Das kann gemacht werden, indem in
.IR Emacs
der Shell-Modus aufgerufen wird und anschlie\(ssend
.IR maxima
eingegeben wird. Oder - besser - 
.I maxima.el
von der Maxima-Distribution installiert wird und das Kommando
.IP
.B M-x maxima
.LP
eingegeben wird.
.LP
Der Hauptvorteil, wenn Maxima innerhalb von
.I Emacs
verwendet wird ist, da\(ss eine vollst\(:andige Historie der Eingaben und Ausgaben zur Verf\(:ugung steht.
Wenn der Befehl
.IP
.B display2d: false
.LP
eingegeben wird, ist es m\(:oglich, die Ausgaben mit Cut&Paste weiterzuverwenden.
.LP
Lisp ist in Maxima eingebaut.
Die Funktion 
.B to_lisp()
schaltet in den Lisp-Modus, wo Lisp Befehle eingegeben und ausgewertet werden.
Die Lisp Funktion
.B (run)
kehrt zu Maxima zur\(:uck. Alternativ k\(:onnen in einer Zeile Lisp-Befehle eingegeben werden,
indem am Anfang der Zeile
\fB:lisp\fR
eingegeben wird.

.SH EINGEBAUTE HILFE
Das Benutzerhandbuch von Maxima kann am Inputprompt abgerufen werden.
Die Beschreibung eines Befehls oder einer Funktion wird durch
.LP
\fBdescribe(command);\fR
.LP
ausgegeben, oder einfacher:
.LP
\fB ? command\fR
.LP
Der Befehl 
.LP
\fB ?? command\fR
.LP
durchsucht die Liste der Funktionen nach dem String \fIcommand\fR und gibt die Treffer aus.
Es gibt einige Demo-Dateien, die vollst\(:andige Probleme, die mit Maxima gel\(:ost werden, zeigen. Sie k\(:onnen mit folgendem Befehl gezeigt werden:
\fBdemo(command);\fR
.LP
Zus\(:atzliche - von Benutzern beigesteuerte Programmdateien - f\(:ur verschiedene Probleme sind vorhanden, die 
.IR "Share Bibliothek"

.SH WEITERE DOKUMENTATION
Das Handbuch von Maxima existiert in vielen Formaten, z.B. als HTML oder PDF Dokument.

.SH KOMMANDOS F\(:UR ANF\(:ANGER
.LP
Diese Liste inkludiert Befehle, die ein Anf\(:anger n\(:utzlich finden k\(:onnte, bevor das gesamte
Benutzerhandbuch und weitere Dokumentation konsultiert wird.
.TP
.B batch("myfile");
F\(:uhrt den Inhalt der Datei
.IR myfile ,
aus, die Datei sollte Maxima-Kommandos beinhalten.
.TP
.B closefile("myfile");
Schlie\(sst die Sitzung, die durch das writefile Kommando (siehe unten) begonnen wurde.
.TP
.B demo("myfile");
F\(:uhrt den Inhalt der Datei
.IR myfile ,
Schritt f\(:ur Schritt aus (die Datei sollte Maxima-Kommandos) beinhalten.
\" Command ev() currently not included...
.TP
.B functions;
Gibt die Liste der derzeit definierten Funktionen aus.
.TP
.B infolists;
Gibt die Liste der verf√ºgbaren Informationslisten aus.
.TP
.B kill(objectlist);
L\(:oscht die Objekte, die als Argument angegeben werden.
.I kill(all);
L\(:oscht alle Objekte, die durch den Benutzer erzeugt wurden, Maxima wird in den Startzustand versetzt.
.TP
.B quit();
Beendet Maxima.
.TP
.B reset();
Setzt alle Maxima Kontrollparameter auf den Standardwert.
.TP
.B values;
Gibt die Liste der derzeit zugewiesenen Variablennamen aus.
.TP
.B writefile("myfile");
Schreibt eine Sitzung der folgenden Kommandos in die Datei
.IR myfile ;
(nur eine Datei kann gleichzeitig ge\(:offnet sein) und das
.I closefile
Kommando mu\(ss ausgef\(:uhrt werden, bevor Maxima beendet wird, um die Datei
ordnungsgem\(:a\(ss zu schlie\(ssen.

.SH PLOTTING BEFEHLE
Maxima kann 2D und 3-dimensionale Plots erzeugen. Hier ein einfaches Beispiel f\(:ur einen 2D-Plot:
.LP
.B plot2d (sin(x), [x, -2*%pi, 2*%pi]);
.LP
und ein einfaches dreidimensionales Beispiel:
.LP
.B plot3d (2^(-u^2 + v^2), [u, -5, 5], [v, -7, 7]);
.LP
Standardm\(:assig werden Plots mit Hilfe von
.I
gnuplot
erzeugt. Es gibt weitere M\(:oglichkeiten f\(:ur Plots, siehe "? plot_options".
F\(:ur weitere Informationen zu Plotting Funktionen siehe "? plot".

.SH DATEIEN
.TP 1.0i
.I C:/maxima-5.47.0/lib/maxima/5.47.0/binary-\fIlisp\fR
Compilierte Dateien der Lisp-Implementation \fIlisp\fR
.TP 1.0i
.I C:/maxima-5.47.0/info
Haupt-Dokumentations-Directory, beinhaltet info-Dateien, die
f\(:ur den 'describe'-Befehl verwendet werden oder auch zur Anzeige in
Emacs oder einem anderen Info-Anzeigeprogramm.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/doc/html
HTML Version der info-Dokumentation.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/demo
Maxima Demonstrations-Dateien.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/emacs
Elisp Dateien f\(:ur Verwendung unter Emacs oder XEmacs.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/share
Externe Pakete.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/doc/share
Documentation f\(:ur externe Pakete.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/src
Vollst\(:andiger Maxima-Quellcode.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/tests
Dateien der Testprogramme.
.TP 1.0i
.I C:/maxima-5.47.0/share/maxima/5.47.0/xmaxima
Dateien f\(:ur Xmaxima.
.TP 1.0i
.I C:/maxima-5.47.0/libexec/maxima/5.47.0/
Maxima Hilfs-Skripte.

.SH UMGEBUNGSVARIABLEN
.TP
\fBMAXIMA_USERDIR\fR
Directory f\(:ur benutzerspezifische Einstellungsdateien.
Der standardm\(:assige Suchpfad von Maxima beinhaltet \fBMAXIMA_USERDIR\fR.
Standardwert: \fB$HOME/.maxima\fR.
.TP
\fBMAXIMA_PREFIX\fR
Maxima sucht seine Eingabedateien im Verzeichnis, das zum Zeitpunkt der Compilierung konfiguriert wurde: C:/maxima-5.47.0.
Maxima kann in ein anderes Verzeichnis verschoben werden, solange das 
.I maxima
Startskript die selbe relative Position wie die restlichen Maxima Dateien beibeh\(:alt.
Falls das
.I maxima
Skript unabh\(:angig davon verschoben werden soll, mu\(ss \fBMAXIMA_PREFIX\fR zum
Pfad der Maxima-Dateien zeigen.
.TP
\fBMAXIMA_DIRECTORY\fR
\fBMAXIMA_DIRECTORY\fR ist \(:aquivalent zu \fBMAXIMA_PREFIX\fR. 
Es ist nur aus Kompatiblit\(:atsgr\(:unden zu alten Maxima-Versionen vorhanden.
.LP
Maxima verwendet diverse andere Umgebungsvariablen f\(:ur die Kommunikation zwischen dem 
.I maxima
Skript und dem Lisp-Abbild. Alle diese Variablen starten mit 
\fIMAXIMA_\fR. Eine √Ñnderung durch den Benutzer sollte nicht notwendig sein.

.SH EINSTELLUNGSDATEIEN
.TP
\fBmaximarc\fR
\fBmaximarc\fR wird vom
.I maxima
Skript beim Start eingelesen. Es sollte im Verzeichnis, auf das die Variable
\fB$MAXIMA_USERDIR\fR zeigt (siehe oben) vorhanden sein. \fBmaximarc\fR kann verwendet werden,
 um beispielsweise die standardm\(:assige Lisp-Implementation zu \(:andern, z.B. durch die Zeile "MAXIMA_LISP=cmucl"
 (um CMUCL Lisp auszuw\(:ahlen).
.TP
\fBmaxima-init.lisp\fR
Beim Programmstart wird die Lisp-Datei \fBmaxima-init.lisp\fR eingelesen, falls sie
im Suchpfad gefuden wird. F\(:ur userspezifische Einstellungen sollte
\fBmaxima-init.lisp\fR im Verzeichnis  \fB$MAXIMA_USERDIR\fR vorhanden sein (siehe oben).
Maxima hat \(:ublicherweise eine systemweite 
\fBmaxima-init.lisp\fR Datei im Maxima 'share' Verzeichnis, man kann diese Datei in das
\fB$MAXIMA_USERDIR\fR  kopieren, um dort eigene \(:Anderungen zu machen.
Alternativ kann man eine Lisp-Initialisierungs-Datei mit den Kommandozeilenoptionen
\fB\-\-init-lisp\fR oder \fB\-\-init\fR
laden.
.TP
\fBmaxima-init.mac\fR
Beim Programmstart wird die Maxima-Datei \fBmaxima-init.mac\fR eingelesen, falls sie
im Suchpfad gefuden wird. F\(:ur userspezifische Einstellungen sollte
\fBmaxima-init.mac\fR im Verzeichnis  \fB$MAXIMA_USERDIR\fR vorhanden sein (siehe oben).
Maxima hat \(:ublicherweise eine systemweite 
\fBmaxima-init.mac\fR Datei im Maxima 'share' Verzeichnis, man kann diese Datei in das
\fB$MAXIMA_USERDIR\fR  kopieren, um dort eigene \(:Anderungen zu machen.
Alternativ kann man eine Maxima-Initialisierungs-Datei mit den Kommandozeilenoptionen
\fB\-\-init-mac\fR oder \fB\-\-init\fR
laden.
.TP
\fB~/.xmaximarc\fR
Xmaxima speichert hier userspezifische Einstellungen.
.TP
\fB~/.xmaxima_history\fR
Xmaxima speichert hier die Kommando-Historie.


.SH REFERENZEN
Alte Refererenz:  
.I "MACSYMA Reference Manual"
(volumes 1 and 2).
The Mathlab Group,
Laboratory for Computer Science, MIT.
Version 10.
January 1983.
.LP
Neuere Referenzen: 
.UR https://maxima.sourceforge.io/de/
.UE

.SH FEHLER
Maxima ist ein komplexes System. Es beinhaltet sowohl bekannte als auch unbekannte Fehler.
Verwenden Sie es auf eigenes Risiko. Die Maxima-Fehlerdatenbank ist verf\(:ugbar unter:
.UR https://sourceforge.net/p/maxima/bugs/
.UE

Neue Fehlermeldungen (und -korrekturen) sind gern gesehen. Bitte inkludieren Sie die Ausgabe der Maxima-Funktion "build_info()" in die Meldung.
Und sehen Sie zuvor nach, ob der Fehler nicht schon gemeldet wurde.

.SH AUTOREN

MACSYMA (Project MAC's SYmbolic MAnipulation System) wurde entwickelt von der 
Mathlab group am MIT Laboratory for Computer Science
(urspr\(:unglich bekannt als Project MAC), w\(:ahrend der Jahre  1969-1972.  Die Arbeit
wurde unterst\(:utzt durch die Zusch\(:usse NSG 1323 der National Aeronautics and
Space Administration, N00014-77-C-0641 des B\(:uros f\(:ur Naval
Research, ET-78-C-02-4687 des U.S. Department of Energy, und
F49620-79-C-020 der U.S. Air Force.  MACSYMA wurde weiterentwickelt, um 
auf UNIX Betriebssystemen verwendet zu werden (zur Verwendung auf DEC VAX Computern
und Sun Workstations), durch Richard Fateman und Kollegen auf der
University of California in Berkeley; diese Version von MACSYMA ist bekannt als
VAXIMA.  Die derzeitige Version hat ihre Urspr\(:unge in den Weiterentwicklungen der 
Public Domain Version MIT MACSYMA for GNU Common Lisp, die von William Schelter, University
of Texas in Austin bis 2001 betreut wurde.
Es beinhaltet viele Erweiterungen und Verbesserungen zum Original.
Die urspr\(:ungliche Version dieser Manualseite wurde von R. P. C. Rodgers (UCSF School of Pharmacy, San Francisco, CA 94143
(rodgers@maxwell.mmwb.ucsf.edu) 1989 verfasst. Sie wurde erweitert von
James Amundson in 2002. Die deutsche \(:Ubersetzung stammt von Wolfgang Dautermann.

Maxima wird nun entwickelt und betreut vom 
.UR https://maxima.sourceforge.io/de/
Maxima Projekt auf Sourceforge.
.UE

.SH "SIEHE AUCH"
.BR wxmaxima(1)
