2019-12-01  Release 5.2.8
2019-05-29  Release 5.2.7

	For changes since 2019-04-25 please see git log.

2019-04-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c: Revise space allocated for ylabel
	Version 5.2 attempted to use estimated character length of the ylabel
	to decide the amount of space reserved to the left of the plot.
	This caused multiple problems, exacerbated by the lack of options to
	change the text justification.  The worst case was a non-rotated label
	with TeX markup that was misinterpreted as printable text (Bug #2165).
	These problems also applied to space on the right allocated for y2label.
	Fixes:
	 - use a fixed estimate of 3 character widths for nonrotated ylabel.
	   The user can adjust the for longer labels using a combination of
	   'set lmargin' and 'set ylabel offset delta_x'
	 - parse and apply test justification left/right/center for ylabel
	   The default remains center.
	This returns the overall behavior to close to that of gnuplot 5.0
	except that honoring left/right justification of ylabel text is new.
	Bug #2165

2019-04-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c: reset base_linetype only once per plot
	Bug #2153

2019-03-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c src/graph3d.c:
	The command 'splot FOO with labels' is potentially ambiguous.
	It could be a request for auto-generated contour labels or it could
	be a request to take individual labels from a file.  But it cannot be
	both at the same time.  Now we insure that the correct choice is made.
	Bug #2154

2019-02-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c (event_reset):
	When a plot window is closed the main program may receive a GE_reset
	event.  Under some conditions this causes one character to be dropped
	from the command input stream.  I do not understand exactly what these
	conditions are.  Bug #2134 shows that driving gnuplot through a pipe	
	from tclsh is one such case.  The effect of a dropped character can be
	mitigated by having the event handler invoke ungetc('\n',stdin), at the
	risk of an extra blank line of output.  We were doing this already in
	the specific case of "pause mouse".  Now we extend this to call
	ungetc() whenever gnuplot thinks it is not being run from a direct
	terminal session (!isatty(fileno(stdin))).
	Bug #2134

2019-02-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c: Under some circumstances the data input loop for
	matrix data could issue an extra read at the end of the data stream.
	For input from a file this was harmless, as once the end of file is hit
	EOF is returned for all subseqent operations.  However for input from a
	datablock this extra read caused an illegal access to memory
	immediately following the last datablock line.
	Add check for previously having hit end-of-file (last datablock record).
	Bug #2129

2019-02-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tabulate.c: Do not output field separator after last field of
	lines from "plot with table".  I.e. each line of a tab-separated table
	containing two values will be "<value1> <tab> <value2> " with no
	trailing <tab>.

2019-02-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c: handle NaN values in input stream to "stats FOO matrix"
	Bug #2129

2019-02-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (enhanced_recursion): Font names passed to enhanced text
	processing may be in quotes.
    
	This allows one to specify fonts whose name contains space characters
	when constructing a text string with enhanced text markup.
	E.g.  set title "{/'Times New Roman'=15:Italic A_i}"
	Bug #2121

2019-02-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/unset.c: "unset title" or "reset" resets _all_ title properties
	Bug #2120

2019-02-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c src/util.c:  preserve LC_NUMERIC locale inside 'using'
	
	To read input data in the user's preferred locale, the plot, splot, and
	stats commands set the numeric locale prior to data input and reset it
	afterwards.  Similarly in order to produce output in the preferred
	locale, the sprintf and gprintf functions set/reset the numeric locale
	on entry/exit.  Unfortunately these two policies collide head-on if
	sprintf or gprintf appears in a 'using' spec.  The set done by sprintf
	on entry is redundant and the subsequent reset on exit cancels the
	numeric locale currently in effect for data input.  As a consequence
	the next data input operation uses the wrong numeric locale.
	
	To resolve this we now wrap the set/reset_numeric_locale in sprintf and
	gprintf with " if (!evaluate_inside_using) ".
	Bug #2125

2019-02-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/hidden3d.c src/hidden3d.h src/util3d.c:

	Repair and complete implementation of arrowstyle settings "backhead"
	and "heads" in hidden3d mode.

2019-02-05  Ethan A Merritt  <merritt@u.washington.edu>

	* term/luz.trm term/lua/gnuplot-tikz.lua:

	Make the default tikz arrow routine interpret arrowstyle head angle = 0
	as "nohead", head angle = 90 as LaTeX arrowhead style '|'.
	This allows correct handling of hidden3d arrows with style "nohead".
	tikz options "gparrow" and "tikzarrow" are not affected.
	Bug #2124.

2019-02-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tabulate.c:  'plot with table' assumed that the maximum size of an
	output column is the maximum width produced by format "%g", but that limit
	is irrelevant for string output.  Change it to dynamically allocate space
	for whatever string is returned by strcol(i).

2019-01-01  Release 5.2.6

2018-12-24  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/titlepag.tex src/version.c configure.ac RELEASE_NOTES:
	Bump version to 2.6

2018-11-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/time.c (ggmtime): Allow for round-off error in date conversion
	
	The reported case was converting time = -1.75145e-13 seconds
	Round-off error put this initially in 1969, but counting out seconds
	per hour/day/month/ put it back at 1970 time 0 described as 1969
	month 13.  It looks to me that the same error could in principle
	trigger at any year boundary, so test explicitly for month wrap-around.
	Bug #2087
	
	reported by: Tim Blazytko, Cornelius Aschermann, Sergej Schumilo, Nils Bars

2018-11-20  Ethan A Merritt  <merritt@u.washington.edu>

	* various overflow cases found by fuzzing
	Credits:
	    Tim Blazytko
	    Cornelius Aschermann
	    Sergej Schumilo
	    Nils Bars
	
	Bug 2088: term.c(strlen_tex)
	Bug 2089: cairo.trm metapost.trm tgif.trm (arbitrarily long font name)
	Bug 2092: cgm.trm overwrites trailing '\0' in default font name
	      also context.trm emf.trm
	Bug 2094: also post.trm
	Bug 2093: datafile.c expand df_line on input as necessary to hold string data
	Bug 2095: eepic.trm (EEPIC_put_text) ignore request to print empty string
	Bug 2096: buffer underrun if input line begins with '\0'

2018-11-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/gp_types.h src/graph3d.c src/graphics.c
	src/hidden3d.c src/parse.c src/plot2d.c src/plot3d.c:

	New keyword "keyentry" for both plot and splot commands. This places
	a line in the key but does not produce a corresponding plot.  The
	usual line/fill/style/title options control what symbol and text is
	used in the key entry.

	* demo/custom_key.dem demo/keyentry.dem

	* docs/gnuplot.doc docs/plotstyles.gnu

2018-11-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (print_line_with_error): Each if/else bracketed clause
	calls lf_push with NULL filename.  To retrieve the filename for error
	reporting we must unwind the lf stack.

2018-11-11  Ethan A Merritt  <merritt@u.washington.edu>

	* term/lua.trm:  Replace lua_tointeger() with lua_tonumber() everywhere.
	Apparently lua 5.3 has changed the behavior of tointeger() and it now
	fails for easily-hit cases in gnuplot.
	Bug #2084

2018-11-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c:  Relax limit on extreme aspect ration of plot and
	apply the scaling after warning even if the limit is exceeded.

2018-10-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp: monothreaded wxt terminal needs a mutex
	to prevent recursion.  When a new plot window is created,
	e.g. 'set term wxt <new_id>', creation of the new window must lock out
	other operations otherwise the new window request is sent again and an
	infinite recursion can result.  Since we don't have a new window yet I
	can't use the window mutex, so I hard-wired one named wxt_interlock.
	Does not affect multithreaded wxt or windows.

2018-10-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/getcolor.c src/save.c src/set.c src/show.c src/tables.c
	demo/pm3dcolors.dem:

	Remove broken support for CIE/XYZ color space.  As reported by 
	Risto A. Paju, the XYZ->RGB transformation in getcolor.c is not correct.
	Furthermore it has never been correct.  As with the YIQ color space
	support removed a while ago, the transformation matrix was apparently
	never checked and hence any script that relied on it never produced
	correct output.
	Replace the black->gold palette example with an RGB space equivalent.
	Bug #2078

2018-10-18  Ethan A Merritt  <merritt@u.washington.edu>

	* datafile.c (df_open): "stats 'foo.dat' noautoscale"
	* graphics.c (plot_boxplot): bail early on empty data set
	* graphics.c (process_image): cannot clip if there is no bounding box
	* plot3d.c: "with vectors" style is not possible for a function splot
	* plot3d.c: cannot contour a plot with NODATA
	* term.c (estimate_strlen): mark string parameter as (const char *)
	* dumb.trm (ENHdumb_put_text): range-check (x,y) coords of enhanced text
	* post.trm (PS_options): Sanity check font size must be < 1000.
	* svg.trm (ENHsvg_writec): split output text into buffer-sized chunks

	Corner-case bugs found by afl-fuzz

2018-10-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h src/graphics.c src/plot2d.c src/set.c demo/boxplot.dem:
	New command option 'set style boxplot medianlinewidth <lw>'
	can be used to emphasize the position of the median.

2018-10-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/libcerf.c:  Version 1.7 of libcerf introduced a conflicting
	definition of "cmplx". Fortunately it is nice enough to handle the
	conflict if detected, but that means our definition of cmplx in
	cp_types.h must come before inclusion of cerf.h.

2018-10-06  Release 5.2.5

2018-09-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  Fix regression in parametric plots with logscale x.
	The check for logscaling in parametric plots was incorrectly made
	against SAMPLE_AXIS rather than T_AXIS (not that we support logscale T).
	So logscale x caused sample variable t to become 10^t.
	This error was present in 5.2.0 through 5.2.4
	Bug #2074

2018-09-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c:  Resolve inconsistency in the type/content of arguments
	to "call".  Now ARG1, ARG2, ... are always strings.
	ARGV[1] ... are complex for numerical arguments, strings otherwise.
	Thus after a call
	    call 'routine_1.gp'  1 pi "title"
	The three arguments are available inside routine_1.gp as follows
	    ARG1 = "1"         ARGV[1] = 1.0
	    ARG2 = "3.14159"   ARGV[2] = 3.14159265358979... 
	    ARG3 = "title"     ARGV[3] = "title"
	Bug #2073

2018-09-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (array_command):  Allow size of an array to be
	determined automatically from the number of initializers. E.g.
	    array A = ["a","b","c"]
	Backport from 5.3

2018-09-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/plot2d.c:  Fix regressions in 5.2 polar plot mode.
	trange was always interpreted as being in radians; now it tracks either
	radians or degrees according to 'set angle'.
	Clip radial grid lines and tick marks to current xrange and yrange.
	Either show or don't show crossbar on radial error bars (no partial
	clipping).
	Bug #2072

2018-09-06  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac:  Switch the default configuration for wxt terminal to
	./configure --without-wx-multithreaded.  On my current linux machines,
	enabling wxgtk multithreading produces an unusable binary.  Others have
	reported consistent problems.
	Bug #1885

	* src/util.c src/wxterminal/wxt_gui.cpp sec/term.c:  Always set numeric
	locale to C following int_error() or terminal initialization.  This may
	or may not catch asynchronous corruption of the program locale by
	another thread or misbehaving library.
	Bug #2069

2018-08-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c: Adjust axis tick and axis placement in 3D projections
	onto the xz or yz plane.  2D projection onto the xy plane is handled as
	a special case by "set view map".  Projections onto the xz or yz plane
	also need special treatment so that the x and y axis ticks are drawn in
	the plane of the graph rather than invisibly perpendicular.
	Customize placement of x and y axis labels for xz and yz projections.
	Azimuth +/-90 requires offset of z tic labels along y rather than x.

2018-08-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/jitter.c src/jitter.h:   New jitter option
	'set jitter vertical' jitters y coordinate rather than x coordinate.

2018-08-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c:  Make "with image pixels" work on terminals that
	support term->fillbox but not term->filled_polygon.
	I.e. 2D images with axes parallel to x and y are ok.
	This was always the intent, but the test for rectangular images was
	missing in the "with image pixels" case.

2018-08-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c: Clip 3D splot with labels to show only INRANGE points.
	Bug #2068

2018-08-09  Ethan A Merritt  <merritt@u.washington.edu>

	* term/linux.trm term/vgagl.trm:  DEPRECATE these terminals.
	Both require support from svgalib, a corresponding custom kernal
	module, and installation of gnuplot as suid root.  The configuration
	option --with-linux-vga will be removed in a subsequent release.

2018-07-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c:  Backport from 5.3
	The flag controlling treatment of rgb colors was manipulated as if it
	were a per-plot flag, but "set pm3d depthorder" merges all pm3d plots
	together.  This meant that if some plots used a color column and some
	did not, the depth-sorted combition colored some plots incorrectly.
	Now we move the flag into the individual colored quadrangles by using
	a magic grey value PM3D_USE_RGB_COLOR_INSTEAD_OF_GRAY.
	Bug #2066

2018-07-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/p3md.c src/pm3d.h save.c set.c:  Backport from 5.3
	New option 'set pm3d depthorder base' sorts pm3d quadrangles on the
	depth of the projected intersection  of the quadrangle with the base
	plane z=0.  Useful for fence plots drawn with zerror.

2018-06-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/multiplot.c src/multiplot.h src/unset.c:  The "reset" command
	should not perturb current multiplot status.  This allows a reset
	between plots in a multiplot.

2018-06-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.c (mcs_interp):  The Fritsch-Carlson monotonic spline
	algorithm leaves indeterminate what slope constraint to use at the first
	and last data points.  Previously the first point used the input slope
	but the last point used zero slope.  This is valid, but difference in
	treatment of the two ends is unexpected.  Now we use the input slope
	at both ends.
	Bug #2055

2018-06-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_f_bars plot_c_bars): Clip all elements of
	candlesticks/financebars/boxplots against plot limits.
	Bug #2056

2018-06-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_lines):

	Until now there have been two code paths to clip line segments to the
	portion within a bounding box (usually the plot boundaries).
	Plot styles "lines" and "linespoints" clip in the coordinate space
	of the plot axes via routines edge_intersect() and two_edge_intersect().
	Originally these routines had other callers as well, but those have all
	been rewritten.  Most of them first transform into terminal coordinates
	and then use draw_clip_line().  This split has led to clipping bugs that
	affected only some objects or plot conditions, e.g.
	Bugs #2030 #2046.
	
	Now we convert the routine graphics.c (plot_lines) to clip in terminal
	coordinate space using draw_clip_line().  This leaves no remaining
	callers of the edge_intersect routines, so remove them.
	
	Output before and after this change is not pixel-for-pixel identical
	because the calculated intersection of a line with the bounding box
	boundary comes out differ due to rounding when we are working in
	terminal coordinates (int) rather than plot coordinates (double).

2018-06-01  Release 5.2.4

	Released earlier than usual in order to correct regressions in 5.2.3

2018-05-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (eval_link_function) src/eval.c src/internal.c:
	Prevent spurious evaluation of logscale axis values as UNDEFINED.
	Various abnormal conditions during evaluation of an action table are
	signalled by setting undefined=TRUE.  The code can check this flag
	immediately after calling evaluate_at().  Routines map_x() and map_y()
	improperly tested the flag after calling eval_link_function(), which
	worked in the general case because eval_link_function itself calls
	evaluate_at().  However the shortcut code to speed up logscale
	transforms returns without calling evaluate_at() and thus did not
	reset the undefined flag.  Enabling this shortcut in 5.2.3 introduced
	a regression where successive calls to map axis coordinates all
	returned with the undefined flag incorrectly set to TRUE.
	
	Now we reset the undefined flag explicitly in eval_link_function() so
	that it is valid to test it immediately after a call to either
	eval_link_function() or evaluate_at().
	
	Bug #2050

2018-05-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c:  Use of "autotitle columnhead" with plot style
	histogram errorbars requires taking the title from column 1 rather
	than column 2.

2018-05-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c:  refresh_3dbounds must check both head and tail of each
	vector for OUTRANGE.
	Bug #1948

2018-05-16  Miroslav Sulc <msulc@users.sourceforge.net>

	* src/misc.c: Support ARGC/ARGV parameter convention for "call".
	I.e. string variables ARG1 ARG2 ... are also accessible as
	ARGV[1] ARGV[2] ... ARGV[ARGC].

2018-05-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/graph3d.c:  Consistent placement of timestamp at
	true bottom of page.  In 2D plots move the key box upwards if necessary
	to clear the timestamp (earlier versions moved the timestamp up instead).
	In 3D plots always place the timestamp at the true page bottom (this
	reverts the placement that that used in version 5.0).

2018-05-08  Ethan A Merritt  <merritt@u.washington.edu>

	Various sanity checks and variable initializations added to prevent
	crashes found by fuzzing.

	graph3d.c: revise MAP_HEIGHT macro to guarantee result is either 0 or 1
	eval.c: revise Gstring to never store a STRING value with a NULL pointer
	dumb.trm: guard against text output to out-of-range character cells
	post.trm: guard against fontsize ever being set to zero

2018-05-05  Dima Kogan  <dima@secretsauce.net>

	* src/axis.h src/command.c src/plot2d.c src/plot3d.c:

	Rework the "refresh" command to use autoscaled axis writeback/restore.
	This mechanism replaces AXIS_INIT2D_REFRESH and AXIS_UPDATE2D_REFRESH.
	"set xrange writeback" is now essentially always in effect.
	"set xrange restore" still works as before.
	Fixes buggy refresh of logscale inline data.
	Fixes buggy axis ranges on refresh of splot with volatile data
	(volatile.dem now highlights the error if you run previous code).

	FIXME:  The new method works by always setting the WRITEBACK axis range
	flag during plot commands.  Conceiveably some existing script depends on
	a sequence of commands that includes "set xrange nowriteback" but I
	do not know if there is a real-world example of that.

2018-05-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c src/datafile.h:  Skip evaluation of expressions in
	a 'using" specifier that depend on a missing data value.  The presence
	of a "missing" flag in the input is easy to detect if it is encountered
	in place of a bare number ('using N'), but if it is encountered while
	evaluating an expression ('using (func($N))') then the function may
	exit via int_error() before the missing value can be flagged for the
	calling code.  Now we pre-screen expressions in a using spec for the
	presence of "$N" and note this dependence in a new field
	use_spec->depends_on_column.  During data input if that field is
	non-zero the corresponding column can be checked for a missing value
	flag before evaluating the expression.
	Bug #2042

2018-05-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c term/post.trm: Move postscript-specific fix from
	ignore_enhanced() into ENHPS_put_text().

	Bug #266 (from 2005) noted that the postscript terminal left whatever
	font was last used in an enhanced text string active afterwards.
	The fix at the time was to force all non-enhanced strings to reset the
	font by putting a call term->set_font("") in ignore_enhanced.
	This had other side effects (Bug #2033) and was only ever useful for
	postscript output, so move the font reset into the postscript terminal.

2018-05-04  Release 5.2.3

2018-04-20  Ethan A Merritt  <merritt@u.washington.edu>

	Bump version to 5.2.3

2018-04-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c: Do not "snap" a sampled point of a function domain to 0
	for non-linear x axis.  The original motivation for this was to assure
	that coarse samples spanning x=0 would evaluate the sampled function at
	exactly f(0).  However this makes no sense for nonlinear axes,
	expecially log axes, because the sampling is actually being done on the
	hidden axis not the visible axis where x=0.
	Bug #2040

2018-04-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/specfun.c (airy) term/lua.trm (LUA_GP_get_boundingbox):
	Function declaration corrected to follow C prototype standard.

2018-04-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/term.c (do_arc):  Use signed rather than unsigned
	terminal coordinates in do_arc().  This allows clipping of circles or
	arcs whose center is off-screen on the left or botton (negative x or y
	coordinate).  Previously the wrap-around of unsigned [cx,cy] caused
	these to be treated as very far off-screen in the positive direction
	and clipping failed to notice that portions of the arc could be visible.
	Bug #2035

2018-04-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/estimate.trm:  Incorrect cast in ENHest_writec caused all 3+
	byte UTF-8 sequences in enhanced text to be estimated as double-width.

2018-03-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c demo/poldat.dem:  yerrorbars in polar mode were being
	drawn as purely vertical rather than radial.  Add a yerrorbars test
	case to poldat.dem.
	Bug #2031

2018-03-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_lines edge_intersect):  Handle clipping of line
	segment between INRANGE->UNDEFINED points.  Previously we checked for
	UNDEFINED->INRANGE but failed to consider INRANGE->UNDEFINED.
	In either case it should return zero, indicating that no clipped line
	is possible.
	Bug #2030

2018-03-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c (draw_color_smooth_box):
	Default colorbox position in "set view map" mode should match 2D mode.
	The previous algorithm failed to allow for logscale or other nonlinear
	x axis settings, perturbing the width of the colorbox.
	Bug #2029

	* src/plot3d.c: emulate logscale axis range extension of pre-v5 splot
	The routine extend_primary_ticrange() emulates the old behaviour
	(i.e. prior to nonlinear axis code) of autoscaled logscaled axes.
	It extends the range of the plot to include the next tic at either end.
	We were already calling it for 2D plots; now we call it for 3D plots
	as well.
	Bug #2029

	* src/command.c (splot_map_activate/deactivate):
	'set view map' and 'set pm3d map' both flip the direction of the y
	axis so that the layout matches a 2D plot.  In the case of a nonlinear
	y axis, in particular 'set log y', this means we have to flip the
	linked primary axis as well.
	Bug #2029

2018-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (extend_primary_ticrange):
	This routine exists only to emulate the old behaviour (i.e. prior to
	nonlinear axis code) of autoscaled logscale axes.
	If it extends the range on the primary axis, this change must also be
	propagated to the secondary (user-visible) axis.  Otherwise the reported
	axis min/max are not correct.
	Bugfix for log-scale mousing in canvas terminal.

2018-03-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (eval_link_function):
	Executing the general case nonlinear axis mapping functions via a
	dynamically interpreted action table is slower than in-line evaluation.
	In the special case of log-scaled axes we can short-circuit the 
	general case evaluation by an immediate call to the log or exp function.
	microbenchmark speedup 25%

2018-02-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c src/plot3d.c:  You might want contour lines to opt out
	of hidden3d processing, e.g. because it messes up dashed lines.  Since
	the low-level routines that draw the contour line segments look only at
	the global "hidden3d" flag, we must save/clear/restore this flag if the
	individual plot is marked "nohidden".

2018-02-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_set_key_title_columnhead):  Handle the case
	    stats FOO using 'namedcolumn' name columnhead
	Bug #2023

2018-02-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotScene.cpp: include "notitle" plots in
	accounting for toggle commands.  Plots can be toggled by number even if
	they do not appear in the key.  Inclusion of "notitle" plots must not
	change mapping of key box area to plot number.
	Bug #2021

	* term/svg.trm:  Apply current color to dots.
	Bug #2022

2018-02-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/multiplot.c:  Allow multiplot title to use full range of 
	label properties (textcolor, boxed, offset, ...)

2018-02-08  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm:
	The combination "set term svg mousing background 'black'" set the
	background to white instead.

2018-02-08  Bastian Maerkisch  <bmaerkisch@web.de>

	src/command.c src/datablock.c|h:  This patch splits lines containing
	newline characters into multiple lines when the target of a print
	command is a datablock.  That way we can e.g. get a datablock with
	names of files on Windows:
		set print $d; print system("dir /a-d /b *"); unset print;
		print |$d|
	Patch #754

2018-02-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c src/datablock.c|h:  This patch splits lines containing
	newline characters into multiple lines when the target of a print
	command is a datablock.  That way we can e.g. get a datablock with
	names of files on Windows:
		set print $d; print system("dir /a-d /b *"); unset print;
		print |$d|
	Patch #754

2018-01-30  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm:  Always apply term->set_color(), including optional
	alpha channel, to both strokeStyle and fillStyle.  This allows the
	canvas terminal to honor RGBA colors for points and lines as well as
	for area fill. Other terminals got this fix way back in version 4.6.
	This change does not affect the javascript support routines so there
	should be no backward-compatability issues.
	Bug #2013

2018-01-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/contour.c src/contour.h src/graph3d.c src/save.c src/set.c
	src/show.c src/unset.c docs/gnuplot.doc demo/custom_contours.dem:

	New options for customizing contour lines
		set cntrparam {firstlinetype N} {{un}sorted}
	The 'firstlinetype' option allows you to set linetype properties for
	a block of linetypes, including dot-dash patterns,  and then specify
	that these customized linetypes be used to generate contour lines.
	In this case you probably want to also use the other new keyword
	'sorted' because by default contour lines are not generated in
	consistent ascending order.
	Bugs #1603 #1612

2018-01-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.* src/graph3d.c src/save.c src/set.c src/show.c src/unset.c:
	New command "set grid {no}vertical" includes vertical grid lines in the
	xz and yz planes corresponding to the major and minor x/y tic locations
	already drawn in the xy plane.  Lines extend from zmin to the top of
	the plot box, i.e. not all the way to the base plane.
	Affects only 3D plots.

2018-01-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_gprintf):  The count of characters immediately
	following "%%" in a format statement was not checked against the current
	buffer length. Remove unsafe alternative code that doesn't use snprintf.
	Bug #2011

2018-01-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/time.c (xstrftime) internal.c (f_strftime):  Protect against
	buffer overflow from user-supplied time format string.  E.g.
	    print time(0,"%100tH%D")
	Bug #2009

2018-01-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/history.c:  If ./configure --disable-history-file or
	--without-readline then do not try to build the routine that reads a
	history file.  Whether --without-readline should really disable
	history is another question, but that is a configuration issue not a
	compile issue.
	Bug #2008

2018-01-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gplt_x11.c:  When directing x11 output into an existing window,
	use the same visualid that window already reports.  This fixes a failure
	to connect gnuplot output to a socket window created by gtk3.
	Failure and fix both reported by Dima Litvinov.
	Bug #1980

2017-12-28  Rin Okuyama <rokuyama@rk.phys.keio.ac.jp>

	* configure.ac src/readline.* src/term.c src/qtterminal/qt_term.cpp
	src/wxterminal/wxt_gui.* term/x11.trm:
	Gnuplot does not suspend immediately by Control-z when it is configured
	--with-readline=gnu; suspension is triggered by a subsequent input
	character.

	When SIGTSTP is received, the signal handler of readline sets a flag
	and just returns. Routines of readline check this flag to invoke the
	real handler to suspend. Since we replace rl_getc_function by our own
	routine to catch input from mouse, we should also check this flag to
	invoke the real handler. Othewise, we cannot suspend until next time
	routines of readline are used.

	Unfortunately, there is no portable ways to invoke the real handler of
	readline at the moment. We need to use its internal routine. libreadline
	will implement a public function for this purpose in a future release.

	EAM: Original patch included the wrapper code directly in x11.trm;
	I moved it into a separate routine wrap_readline_signal_handler()
	so that it can be shared by other gnuplot terminals.
	Bug #2002

2017-12-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (print_line_with_error):
	print_line_with_error() must not alter global gp_input_line or inline_num.
	If called from int_error() or os_error() this would not matter because the
	correct values will be reset anyway, but if called from int_warn() this
	can truncate the current input line and/or print the wrong line number in
	the warning message.  In particular it can cause premature exit from a
	bracketed clause.
	Bug #2007

2017-12-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/caca.trm:  The raw and null libcaca drivers don't do anything
	useful for us.  So don't include them in the list of available drivers
	shown to the user.

	* term/caca.trm:  Various range and null pointer checks to avoid
	segfaults when using the raw and null drivers.  Still these won't
	produce any useful output.

	* term/caca.trm (CACA_init_display):  On Windows, disable the
	console's quick edit mode to directly enable mouse interaction.

	* term/caca.trm (CACA_process_events):  Failed to change internal
	canvas size on window resize.  Bugfix.

	* term/caca.trm (CACA_waitforinput):  Correct the check if the caca
	driver window was closed.  This bug would cause gnuplot to exit on
	the first keypress after closing the window.
	Bugfix.

	* term/caca.trm:  Simple bold / italic font support. libcaca supports
	theses attributes currently only for ncurses, html, html3, bbfr, and
	troff.

	* term/caca.trm:  Add an emacs type modeline.

	* term/caca.trm (CACA_text):  Test for input redirection.  Resolves
	hang with slang/ncurses drivers in
	    gnuplot -e "load 'simple.dem'" < /bin/true

2017-12-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* .gitattributes:  ChangeLogs are prone to merge errors.  The GNU tool
	 git-merge-changelog has been developed to avoid that and is likely
	 available in most distributions.  Caveat is that git committers now
	 need it to be installed and configured, see e.g.,
	 https://gnu.wildebeest.org/blog/mjw/2012/03/16/automagically-merging-changelog-files-with-mercurial-or-git/

2017-12-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c src/set.c src/util.c src/util.h:
	new utility routine might_be_numeric() to be called before trying
	to parse optional numeric value in command
	Bug #2006

2017-12-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* .gitattributes src/os2/4allterm.cmd:  Enforce EOL style or treatment
	as binary for certain file types.

2017-12-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c:  Only terminate polygon with "closepath" if it is
	not clipped.  Bug #1995 revisited.

	* term/cairo.trm:  Initial font used in enhanced text processing
	should be the most recently set font, not the original font from
	"set term".
	Bug #1997

2017-12-21  Ethan A Merritt  <merritt@u.washington.edu>

	* term/PostScript/prologue.ps term/PostScript/prologues.h:
	Fix mismatched newpath/closepath and missing stroke in macro for
	pm3d surface quadrangles.  This could generate a spurious rectangle
	on the next stroke command.
	Bug #2005

2017-12-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c term/svg.trm:  Create a new path for each polygon.
	In particular this provides a chance for a change in line properties
	to take effect.
	Bug #1995

	* term/latex.trm: Sanity check latex terminal options.
	Bug #1996

2017-11-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/getcolor.c src/getcolor.h src/save.c src/show.c src/tables.c
	term/context.trm term/post.trm docs/gnuplot.doc demo/pm3dcolors.dem:

	Remove vestigial implementation of YIQ colorspace.
	The YIQ colorspace option for "set palette" was incorrectly implemented
	back in the mists of time.  E.g. the parsing code enforces color
	component range [0:1] but YIQ coefficients can be negative; syntax for
	"set palette defined" is incompatible with negative values; YIQ_2_RGB
	 uses incorrect transformation matrix.  No user interface to YIQ_2_RGB
	was provided.  Thanks to Isao MORI <orios814@users.sf.net> for pointing
	out the various fundamental flaws.

2017-11-16  Ethan A Merritt  <merritt@u.washington.edu>

	graphics.c (plot_vectors):
	The code for drawing 2D  "plot ... with vectors" is redundant.
	Replace the core of it with a call to draw_clip_arrow().

	gadgets.c (draw_clip_arrow):
	Do not call term->arrow() if the entire arrow is out of range.

2017-11-16  Hans-Bernhard Broeker  <broeker@users.sourceforge.net>

	* prepare (AUTOMAKE): Remove permission fix-up commands, in favour
	of letting git handle this.

	* missing config/djconfig.sh: Set permissions to executable.

Release 5.2.2

2017-11-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_logscale):  If the axis is currently autoscaled and
	the range limits still hold non-positive values from a previous state,
	reset them to [0.1 : 10.].

2017-11-04  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac src/syscfg.h src/command.c:
	(back-ported HBB patch from 5.3 with addition of OS2) 
	Include <sys/wait.h>, if it exists.  Provide fall-back definition
	for WEXITSTATUS if none is found via <sys/wait.h>.
	Move MS Windows specific replacement from command.c to syscfg.h.
	Bug #1989

2017-11-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (histogram_range_fiddling):  For stacked histograms,
	autoscaling did not distinguish between 'set xrange [*:*]' and 
	'set xrange [explicit_min:*]', always resetting min to -1.
	Bugfix

	* RELEASE_NOTES NEWS PATCHLEVEL configure.ac src/version.c
	Bump version to 5.2.2 (but not yet tagged)

2017-10-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c: Fix #define breakage

2017-10-31  Dima Kogan  <dima@secretsauce.net>

	* configure.in:  Add $LIBRARIES_FOR_X to WX_LIBS so that configuration
	 of Makefiles includes -lX11 as required by wxgtk3

2017-10-31  Petr Mikulik  <mikulik@physics.muni.cz>

	* src/command.c (is_history_command): Remove use of isblank() to support
	older compilers.

2017-10-31  Petr Mikulik  <mikulik@physics.muni.cz>

	* term/context.trm: In OS/2, LINEJOIN constants are defined in os2emx.h.

	* config/config.os2: Define int32_t as int.

	* src/command.c: Define WEXITSTATUS empty for both Windows and OS/2.

2017-10-30  Ethan A Merritt  <merritt@u.washington.edu>

	* RELEASE_NOTES NEWS src/version.c demo/image2.dem:
	Bring CVS files up date with the contents of the 5.2.1 tarball.

2017-10-30  Achim Gratz  <Stromeko@nexgo.de>
	
	* configure.ac:  The configury supposedly tries to find TEXDIR via
	kpsexpand, but that code never got run if $prefix is set.  Now it is.

2017-10-30  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm:  Raise the limit on number of relative moves before
	a "stroke" so that a full circle as drawn by do_arc() does not glitch
	due to insertion of a "stroke xx yy M" sequence that resets the
	dot/dash pattern.
	Bug #1987

	* src/axis.c (gen_tics):  `set log x; set xtics foo` would always place
	the first axis tic at foo rather than at (foo / base^N) for suitable N.

	* src/graphics.c (plot_betweencurves):
		plot 'foo' with filledcurves below y=bar
	would fail to identify "below" regions where the y value of the start
	or end data point was exactly (foo[x] == bar).
	Bug #1983

2017-10-30  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/winmain.c (ConsolePutS, ConsolePutCh):  Use standard file IO
	instead of Console API to enable word-wrapping on Windows 10 and to
	allow for redirection of stdout/stderr.
	Bug #1985

2017-10-30  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc src/gadgets.c:  Trivial typos and out-of-date
	comments.  Fix index entries for help section on piped data.

	* plot2d.c (eval_plots):  Fix a regression causing an empty range on
	log-scale y axis to error out rather than auto-extending the axis range.
	Extension can be handled by the same routine used for linear axes.
	Bug #1978

Release 5.2.1

2017-10-13  Petr Mikulik  <mikulik@physics.muni.cz>

	* src/pm3d.c (pm3d_draw_one pm3d_plot): Move call of term->layer() with
	TERM_LAYER_BEGIN_PM3D_MAP and TERM_LAYER_END_PM3D_MAP from pm3d_draw_one
	to pm3d_plot in order to avoid insertion of line commands between the
	%pm3d_map_begin and pm3d surface commands in the postscript file
	which broke the pm3dCompress.awk and pm3dConvertToImage.awk scripts.

2017-10-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics): The start point for log-scale tic placement
	could not lie outside the axis range (e.g. start at 1 for axis range
	[5:50]).  Remove this restriction.  Still not perfect backwards
	compatibility with log-scale tic placement in earlier versions.

2017-10-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):  The sample-generation code
	failed to distinguish between nonlinear x2 (primary axis hidden) and
	"set link x2 via f(x) inv g(x)" (primary axis x1).
	Bug #1973

	* src/graphics.c src/graphics.h src/set.c src/tables.c src/tables.h
	src/unset.c src/show.c src/save.c demo/image2.dem docs/gnuplot.doc:

	The default interpretation of RGB color components on input is that
	they are integer values in the range [0:255].  This matches the 
	content of PNG and JPEG files. Since the interpretation of RGB color
	components has been decoupled from the palette range limits controlled
	by "set cbrange", data using some other RGB convention must be rescaled.
	This patch introduces a new command `set rgbmax`.  The primary use is
	so that data using the convention that color components are floating
	point values in the range [0:1] can be plotted using
	    set rgbmax 1.0;   plot 'imagedata' with rgbimage

2017-10-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (reconcile_linked_axes) src/axis.h src/plot2d.c:

	gnuplot version 5.0 always tracked the autoscale range on the primary
	axis (x1 or y1) of a linked pair, even if the data was actually plotted
	on x2 or y2.  In verison 5.2 we track the data range on x1 x2 y1 y2
	separately.  This caused breakage wherever the program assumed the
	autoscale range on x1 (or y1) was always current.  Worse, it would
	propagate that range onto the secondary axis, possibly overwriting the
	correct range.  Now we introduce a new routine reconcile_linked_axes()
	that merges the min/max values from e.g. x1 and x2 so that the 
	autoscaled range covers input data plotted on either axis.
	Bug #1973

2017-10-03  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm:  Report number of frames in completed animation sequence.

2017-10-01  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c:  Make sure that the bounding rectangle of emf data
	starts at 0,0.  Bugfix.

2017-09-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/axis.c (axis_set_scale_and_range):  Incorrect use
	of unsigned parameters caused terminal scaling to fail if the axis 
	range was inverted. The error was introduced by converting from a
	macro to a subroutine in the run-up to 5.2.

2017-09-25  Dima Kogan  <dima@secretsauce.net>

	* src/axis.c (clone_linked_axes):  When sanity checking the via/inverse
	mapping functions for linked or nonlinear axes, adjust the allowable
	difference by a scale factor related to the axis range.

2017-09-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  smoothing options csplines|acsplines|bezier|sbezier
	failed to recheck inrange/outrange after smoothing.  Example failure:
	    plot [0:4][4:0] '+' using 1:1 smooth bezier w lines
	Bugfix

	* src/interpol.c (mcs_interp):  The previous implementation of monotonic
	cubic splines did not guarantee that the original points were included
	in the set of generated points used to draw the resulting curve.  This
	meant that the curve might not pass through all points.  Now we merge
	the original points with the set of evenly sampled points.
	Thanks to K Antal for identifying and demonstrating the problem.
	Patch/Bug #1972

	* src/axis.c src/axis.h src/datafile.c src/gp_time.h src/gp_types.h
	src/internal.c src/time.c demo/timedat.dem docs/gnuplot.doc:
	Gnuplot already supports relative time format specifiers %tH %tM %tS
	for output via strftime() and in the time format for axis tic labels.
	Now we add the same format specifiers as an option for input via
	strptime().  They can also be used to read data fields containing 
	degrees/minutes/seconds.
	relative time formats for input (this patch)
	    print strptime("%tM:%tS", "-61:12.50")
	    -3672.5
	"normal" time formats don't work for this purpose (prints "0").

2017-09-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics) docs/gnuplot.doc demo/nonlinear6.dem:
	Revise documentation of "set xtics" to include examples and description
	of logscale keyword.  Restore pre-5.2 behaviour that for log-scaled axes
	the increment in "set xtics {start,} incr {,end}" is interpreted as a
	multiplicative factor rather than a constant interval.  However this is
	only true if the "logscale" attribute is set for axis tics.
	New demo nonlinear6.dem exercises this feature and also shows the use of
	"set tics rangelimit" with log-scaled axes.
	Bug #1971

2017-09-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c (parse_array_assignment):  Memory leak.

	* src/Makefile.am:  Fix recipe for building qt embed_example

2017-09-17  KH Moriyama  <khmoriym@users.sf.net>

	* src/axis.c (parse_range):  Backport from 5.3 - modify parse_range()
	to handle in-line ranges for linked or nonlinear axes.
	Bug #1964

2017-09-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (parse_label_options):  Memory leak.

2017-09-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/plot3d.c:  Starting in version 5, NaN and UNDEFINED
	input data points count toward the total number of points read.  This
	caused the test for "no points read" to not terminate iterations of the
	form  "for [i=min:*] ..." on the first missing file or invalid spec.
	To prevent runaway iteration we now test for "no INRANGE points read in".

	* src/graph3d.c src/datafile.c:  Add initializers for variables to
	silence compiler warnings.

	* src/datafile.c (f_columnhead):  columnhead(N) invoked inside a using
	specifier now returns the actual column header.
	See Bug #1968

2017-09-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/graph3d.c: The "title at {beg|end|<position>}"
	options were originally intended as an alternative to the normal key,
	so preservation of the key layout was not a concern. This patch allows
	you to mix custom-placed titles with in-key titles in the same plot.
	Bug #1967

2017-09-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c( gen_tics ) src/axis.h( reorder_if_necessary ):
	New macro to reorder the min/max of axis ranges (but could be used
	elsewhere).  If the mapping function of linked axes inverts the
	axis direction, tics were not being generated because min > max.
	E.g. set link x2 via 100-x inv 100-x; set x2tics; plot [50:40] x

	* src/graphics.c (plot_border) src/boundary.c (boundary):
	Range-limited axes were not accounting for nonlinear or linked axes.
	Space reserved for long axis tic labels made the same mistake.
	Bug #1965

2017-09-06  Ethan A Merritt  <merritt@u.washington.edu>

	Several additions already in 5.3 but held back from 5.2 during -rc testing

	* src/set.c (set_separator) src/show.c (show_table):  New command option
	    set table {separator {comma|tab|whitespace|"<char>"}}
	allows "plot with table" to create csv files.

	* src/tabulate.c:  Handle splot with rgbimage, rgbalpha

	* src/graphics.h src/graphics.c src/graph3d.c:  The 2D routine
	attach_title_to_plot() can be shared by the 3D code in order to support
	"splot ... with lines title at {beg|end}".

	* src/qtterminal/QtGnuplotScene.cpp":
	 QtAlign::foo properties are bit definitions, not integers

2017-09-06  Martin Saturka  <kvutza@users.sf.net>

	* src/mousecmn.h src/mouse.c:  Bind the < and > keys to change the
	current azimuth setting while mousing 3D plots.
	(EAM) add an internal flag "Opt-" so that you can bind a hotkey for
	which the Alt and Ctrl modifiers are optional rather than required.

Release 5.2.0

2017-09-03  Ethan A Merritt  <merritt@u.washington.edu>

	* PATCHLEVEL src/version.c:  Update versioning for 5.2 release

	* src/time.c (xstrftime):  The variant format specs for time
	%tH %tM did not behave as documented in that hours wrapped at 24 and
	minutes at 60 if a decimal precision modifier was not present.

2017-09-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (parse_range eval_link_function) docs/gnuplot.doc:
	Attempt to handle the case of linked axes (x+x2 or y+y2) and an in-line
	range specifier in the plot statement.  This fix only addresses simple
	cases, such as
	    set link x2;  plot [x=min:max] something-using-x2 axes x2y1
	Recommend to use separate "set xrange ... set yrange ..." instead.

2017-08-31  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/faq-ja.tex docs/gnuplot-ja.doc:
	Update Japanese documentation for 5.2 release

2017-08-30  Ethan A Merritt  <merritt@u.washington.edu>

	* win/README-Windows.txt win/README-Windows-jp.txt:  Update and
	translation courtesy of Tatsuro Matsuoka and Shigeharu Takeno.

	* docs/gnuplot.doc:  Expand section on real/int/hex/octal constants.

	* src/command.c src/datablock.c src/datablock.h src/internal.c
	src/parse.c src/util.c:  Extend array syntax to named datablocks.
	|$DATABLOCK| gives the number of lines in the block.
	$DATABLOCK[n] returns line n as a string.  Back-ported from 5.3

	* demo/stringvar.dem:  Use the new syntax to avoid creating a temporary
	file during execution of the demo.

2017-08-29  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (CopyPrint):  Check return values of GDI print API
	function calls.

	* src/win/wgraph.c src/win/wgdiplus.cpp src/win/wd2d.cpp
	(TEXTBOX_MARGINS):  Adjust scaling of textbox margin to be more like
	what the qt terminal does (ie. much smaller).

	* term/metapost.trm:  Missing check for EAM_BOXED_TEXT.

	* config/config.oww:  Update to version 5.2.  In particular enable
	boxed text and external functions and disable bitmap terminals by
	default.

	* src/win/wd2d.cpp:  Enable compilation with OpenWatcom, which is
	missing __uuidof().

	* config/watcom/Makefile:  Optionally build with GDI+ or Direct2D/
	DirectWrite.  These libs are available at
	https://sourceforge.net/p/gnuplot/patches/746/

	* config/watcom/Makefile:  Drop option -j for signed chars.

2017-08-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/graphics.h demo/image.dem demo/image2.dem:
	Since we have decoupled cbrange from rgbimage, the image demos need
	to change accordingly.  Add a placeholder macro rgbscale(colorval)
	that for now only enforces that color components are in [0:255] but
	can later be replaced with an actual scaling routine.

2017-08-22  Dima Kogan  <dima@secretsauce.net>

	* src/plot2d.c src/plot3d.c src/graphics.c (process_image):
	Do not apply cbrange to rgbimage data.  Do not use rgbimage range to
	autoscale cbrange.  For now this means that rgbimage color components
	must be in the range [0:255], as they are for png, jpeg, etc.

2017-08-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image):  Limit alpha channel range to [0:255]
	in "with rgbalpha pixels".

	* src/axis.c src/datafile.c src/plot2d.c src/plot3d.c src/graphics.c
	demo/sampling.dem docs/gnuplot.doc:
	Allow explicit sampling interval in the range statements associated with
	pseudofile '++' in both 2D and 3D.  Example:
	plot sample range [u=0:127][v=0:127] '++' using 1:2:(F(u,v)) with image

2017-08-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_open): Expand leading ~ in filename for binary data
	files just as for text files.

2017-08-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wgdiplus.cpp:  We intend to scale line widths
	with resolution when printing, but we got that wrong due to confusion of
	constants.

	* src/win/wgraph.c (CopyPrint):  Fix fallback from D2D to GDI+ for
	printing.

2017-08-12  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/set.c (set_table):  Implement "append" option for datablocks.
	Bug #1951

2017-08-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c (check_for_iteration):  If some depth of a nested
	iteration evaluates to an empty range, the evaluated limits of depths
	below it are irrelevant and possibly invalid.  Add a test to skip
	evaluation at lower depthes in such a case.
	Bug #1952

2017-08-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/parse.c src/plot2d.c demo/iterate.dem:
	Revise recursive iteration algorithm to address problems with empty
	ranges in a nested iteration. Add support for dynamic reevaluation of
	the string in nested ranges using "for [s in <string-expression>]".
	Bug #1952

2017-08-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/plot3d.c:  Revert inadvertent change of 2017-03-31
	that failed to call update_gpval_variables in "set table" mode.
	Bug #1954

2017-08-07  Martin Beranek

	* term/metapost.trm:  Support for user-defined dashtypes.

2017-08-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  "set key fixed" should be ignored in the case of
	"set view map".

2017-08-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_view):  Switching from "set view equal xy[z]" to 
	"set view map" failed to clear the 3D aspect ratio flag, leading to
	conflicting scale factors.  Now we treat it as "set size ratio -1",
	which is what the documentation says.
	Bug #1948

2017-07-30  Ethan A Merritt  <merritt@u.washington.edu>

	* config/mingw/Makefile config/msvc/Makefile win/gnuplot.iss:
	The pm3d and contrib subdirectories are no longer in the distribution
	source, so they must not appear in the windows installer inventory.

	* configure.ac PATCHLEVEL docs/titlepag.tex src/version.c:
	Bump patchlevel to rc4 and repackage
	NB: No change to any source files. This affects only the windows
	build scripts.

2017-07-30  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac PATCHLEVEL docs/titlepag.tex src/version.c:
	Bump patchlevel to rc3

2017-07-30  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile config/msvc/Makefile:  Mingw-w64 and MSVC have
	working popen/pclose implementations for GUI applications.  So we use
	them instead of our own "fake" pipe emulation.
	Bug #1950

	* src/win/winmain.c src/syscfg.h config/config.nt config/config.oww:
	Unicode support for popen.

	* src/win/wd2d.cpp:  Direct2D implementation of pattern fill using a
	bitmap brush.  This eliminates the last GDI/GDI+ fallback, so we
	no longer aim to be compatible.

2017-07-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (autoscale_one_point) src/plot2d.c src/plot3d.c:
	Refresh_bounds and refresh_3dbounds perform only a simplified version
	of autoscaling.  Consolidate this into a macro autoscale_one_point().
	Extend the simplified autoscaling to include both ends of a VECTOR plot.
	Other cases remain where the simplified autoscale is insufficient.
	Bug #1947

2017-07-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c:  Ignore non-numeric contents of potential dummy variables
	x y t u v used during fit evaluation.
	Bug #1949

2017-07-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_open):  Reject plot command if input and output
	both use the same data block.  Prevents memory corruption / segfault.

2017-07-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c:  The code saving the previous "fit" command incorrectly
	assumed that "fit" must be the first thing on the input line.  This
	is clearly not true, particularly when the command is inside a {}
	bracketed clause since the entire clause acts as one long input line.
	Bug #1946

2017-07-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_open df_readascii expect_string) src/datafile.h
	src/plot2d.c src/tabulate.c src/tabulate.h docs/gnuplot.doc:
	Move code for "plot with tables" into tabulate.c (tabulate_one_line).
	Plot styles (e.g. "with labels") already call expect_string(column) to
	signal that a particular input column is to be treated as a string.
	Now we add special case so that "with table" can use expect_string(-1)
	to signal that any column is treated as a string if its using specifier
	evaluates to a string.  This allows "plot ... with table" to create
	tables containing strings and to use sprintf/gprintf to format
	numerical output.

2017-07-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/plot3d.c docs/gnuplot.doc:
	Fix inconsistent handling of "plot ... with table".
	E.g. "set style data table; plot foo" tried to both plot and tabulate.
	Warn that function plots are not handled.
	Do not invalidate yrange.

2017-07-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (SaveAsBitmap):  Make sure that GDI+ is
	initialized.  Bug fix.

	* src/win/wgraph.c (TryCreateFont):  Silence font substitution
	warnings in GDI backend again.  This is consistent with other backends
	and less annoying.

2017-07-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (test_term): Revise "test" command output.
	- simplify rotated text and arrow section
	- fix bug in "dumb" centering of polygon title
	- compare true textbox area with generic estimated text dimensions.

2017-07-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (set_term init_terminal) src/unset.c (unset_terminal)
	docs/gnuplot.doc:
	On entry, copy environmental variable GNUTERM to internal variable
	GNUTERM.  Note that starting with version 5.2 this is a string that
	may include terminal options in addition to the terminal name. E.g.
	    GNUTERM="post eps color size 5in,3in" 
	Modify "set term <string>" to look only at the first word of <string>.
	Thus "set term GNUTERM" works as before. Note that "set term @GNUTERM"
	expands and applies the full set of options.
	Fix "unset term" to act equivalently to "set term GNUTERM" as
	documented.

	* term/dumb.trm:  Slightly nicer arrows.

2017-07-05  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac docs/Makefile.am term/caca.trm:
	Add caca terminal documentation to the user manual.  Fix segfault on
	"set term caca driver raw".

2017-07-03  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp:  Switching the compositing mode to take the
	gamma factor into account for filled polygons not only slows down
	drawing considerably, but also produces output different from
	other terminals or windows back-ends.  So stop doing that.  Also
	scale the linewidth when drawing anti-aliased polygons.  Bug fix.

2017-07-03  Release candidate 5.2.rc1

2017-07-03  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/win.trm:  Cannot use docked graph windows in persist mode as
	the text window will not be shown.

2017-07-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (place_raxis):  Raxis was being truncated to R=0.
	I.e. set rrange [90:-30] lost the final quarter of the axis.
	Bug #1370

2017-06-30  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wd2d.cpp:  Fix center of rotation for enhanced text.  Snap
	textbox coordinates to full pixels for vertical or horizontal
	orientation.

2017-06-27  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wd2d.cpp:  Respect the antialiasing setting.  Always clear
	the polygon render target to avoid "ghost" images and enforce its
	size in pixels.

2017-06-26  Ethan A Merritt  <merritt@u.washington.edu>

	* term/dumb.trm:  Core routine apply_lp_properties looks to see whether
	the current terminal lacks color support by testing the equivalence
	(term->set_color == null_set_color). Thus introduction of a non-NULL
	dumb_set_color() routine to support color output had the side-effect of
	losing the distinction between line types without color.  Fix this by
	only listing dumb_set_color() in TERM_TABLE when color mode is active.
	Bug fix.

2017-06-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c: Fix incorrect determination of the size of the
	toolbar and the statusbar.

	* src/win/wgdiplus.cpp:  We still need to indicate that text can be
	rotated. Bug fix.

2017-06-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/dumb.trm:  Remove debug printout committed by mistake

2017-06-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h:  The dot needs not to be included in the number of
	different point types for cycling through.  Bug introduced on 2017-05-13.

2017-06-17  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wgnuplib.h:  Remove the doublebuffer
	setting.  It is always enabled.

	* src/win/wgraph.c src/win/wgdiplus.cpp src/win/wd2d.cpp
	src/win/wgnuplib.h:  Remove remnants of the old oversampling code.

2017-06-15  Ethan A Merritt  <merritt@u.washington.edu>

	More corner-case failures found by fuzzing the demo set.

	* term/dumb.trm:  terminal character grid y limit was not checked prior
	to printing text with color+utf8 attributes.

	* src/command.c (print_set_output):  Fix failure to reset flag indicating
	output to a datablock. E.g. "set print $T; set print '-'; show print"

	* src/graphics.c:  Sanity check for well-defined coordinates at the
	corners of an image.  Variable initialization to make compiler happy.

2017-06-14  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm:  Normalize handling of terminal option "fontscale" to
	match other terminals. Remove obsolete keyword "fsize".

	* src/axis.c (gen_tics) src/contour.c (contour) src/plot2d.c (eval_plots)
	src/set.c (load_tic_series) term/emf.trm term/write_png_image.c:
	Explicitly initialize some variables indicated as suspect by compiler
	option -Wuninitialized.  The one in set.c can cause a real fault;
	the others look like false positives to me but I am not 100% certain.
	Bug #1933

2017-06-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wd2d.cpp:  When compiled with D2DDEBUG defined, enable the
	Direct2D debug layer.

	* src/win/winmain.c (WinExit):  Missing cleanup of Direct2D resources.

2017-06-13  Bastian Maerkisch  <bmaerkisch@web.de>

	* win/README-Windows.txt:  Update to version 5.2.

	* src/win/wgdiplus.cpp:  Cleartype text antialiasing seems to be only
	applied to horizontal text.  Use grayscale antialiasing for rotated
	text.

	* src/win/wgdiplus.cpp (InitFont_gdiplus):  Fix double application of
	fontscale.

	* src/win/wgraph.c (WriteGraphIni):  Only save window size and position
	for standalone graph windows.

	* src/win/wd2d.cpp (W_line_width):  Enforce a minimum line width of 1
	pixel to avoid tiny dash patterns for grids in polar plots.

2017-06-12  Ethan A Merritt  <merritt@u.washington.edu>

	Fix unhandled corner cases and improper command sequences found by
	afl-fuzz testing gnuplot input scripts:

	* src/util.c (gprintf):  Sanity check for NULL format

	* src/datafile.c (df_open):  Sanity check to catch "plot '+' binary ..."

	* src/gadgets.c (do_timestamp):  prevent early exit from do_timelabel
	from corrupting the timestamp structure

	* src/axis.c (clone_linked_axis):  Sanity check that inverse mapping
	function does not yield NaN at axis range endpoints.

	* src/graphics.c (process_image):  Sanity check for empty image data
	structure.

	* src/internal.c (f_power f_value):  Initialize imaginary component
	of returned value in case anyone ever looks at it.

2017-06-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/show.c (show_version):  Remove obsolete configuration options
	from the list shown by "show version long".

2017-06-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_border):  Autoscaled rrange should not disable
	polar border.  Polar border should not be clipped to xy border.

2017-06-07  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/msvc/Makefile:  Enable Unicode build.  Add missing user32.lib
	for gnuplot_qt. Set version number to 5.2.

	* config/mingw/Makefile:  Enable release build.

2017-06-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/term.c (init_terminal):  Keep wxt as default terminal on Windows
	(as in version 4.2-5.0).

2017-06-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datablock.c(datablock_command):  Reorder sanity checks so that an
	improper command (e.g. "$DATA = foo") does not clobber the previous
	content of $DATA.

2017-06-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/util.c (gprintf):  Do not use LaTeX formatting in tabular output.
	Bug #1931

2017-06-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/plot.c src/term.c:  A 2017-04-10 patch re-ordered
	initialization of the session state, the default terminal, and error
	handling. This had the undesirable effect that a command in ~/.gnuplot
	that queried the terminal state would segfault because the terminal
	had not yet been initialized. Now we reorder again to (1) error handling
	(2) terminal init (3) session state from ~/.gnuplot.  For safety also
	add sanity checks in load_linetype() so that term == NULL does not
	segfault.

	* configure.ac PATCHLEVEL docs/titlepag.tex src/version.c:
	Bump patchlevel to rc2

	Changes above this line will appear first in 5.2.rc2 if there is one,
	otherwise in 5.2.0.

2017-05-31  Release candidate 5.2.rc1

2017-05-30  (Debian /debian-science/packages/gnuplot.git/)

	* term/post.trm:  Do not emit Author field containing current username.

2017-05-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (GraphEnd):  Let the gnuplot core know the current
	window ID.

2017-05-23  Ethan A Merritt  <merritt@u.washington.edu>

	* Makefile.maint README RELEASE_NOTES configure.ac docs/Makefile.am
	ReleaseNotes.css: Continued preparation for 5.2 release.

2017-05-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/qtterminal/qt_term.cpp (qt_waitforinput):  The Windows code waits
	for the named pipe internally used by the QLocalSocket object. But in
	some cases the Qt object itself will not provide new data.  Handle
	that case by Sleep()ing to release the CPU instead of idling rapidly.
	Bug fix.

2017-05-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.h:  Reenable dxf terminal in default build.  Apparently it is
	still usable despite having been neglected for ~30 years.  Nevertheless
	it would be nice if someone put in the effort to update it to the 2012
	DXF standard.

2017-05-22  Ethan A Merritt  <merritt@u.washington.edu>

	* Branchpoint for 5.2 (cvs tag -b branch-5-2-stable)

	* VERSION PATCHLEVEL docs/gnuplot.doc docs/titlepag.tex src/version.c
	configure.ac:

	Bump version info to 5.2.rc0
	This is not an actual release, just an internal identifier while we
	assemble and test a first real 5.2 release candidate.

2017-05-21  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc:  Various trivial tweaks to improve the layout and
	formatting of pdf documentation . Revised text for sampling,raise/lower,
	and pseudo-files '+' and '++.

2017-05-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/win.trm src/win/wgraph.c src/win/wgdiplus.cpp
	src/win/wd2d.cpp src/win/wgnuplib.h:
	Pointscale option for the windows terminal.

2017-05-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/winmain.c (ConsoleHandler) src/plot.c|h (terminate_flag)
	src/readline.c (readline):  Add an event handler to catch "close"
	signals to console mode gnuplot on Windows.  These events are passed
	on to the main thread to terminate cleanly.
	Bugs #1916, #1917, #1918

2017-05-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/fit.c src/fit.h src/tables.c src/tables.h
	docs/gnuplot.doc:  Deprecate command "update" in favor of new command
	"save fit <filename>".  "update" will remain in version 5.2 for backward
	compatability but will eventually go away altogether.

2017-05-19  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/faq-ja.tex docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.1080

2017-05-18  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc
	term/ai.trm term/corel.trm term/djsvga.trm term/dxf.trm term/dxy.trm
	term/emxvga.trm term/epson.trm term/excl.trm term/ggi.trm term/grass.trm
	term/hp500c.trm term/hpljii.trm term/hppj.trm term/mif.trm term/pbm.trm
	term/pc.trm term/regis.trm term/vws.trm:
	Flag bitmap and legacy terminals in the documentation.

	* src/term.h: Remove legacy terminals from the default build.
	corel (postscript variant of CorelDraw format circa 1995)
	dxf (Autocad DWGR10 format circa 1988)

	* docs/README docs/doc2tex.c: New markup ^#TeX in gnuplot.doc signals
	that the rest of the line is a LaTeX command to be passed through
	verbatim to the *.tex output stream.  Ignored by other doc2foo paths.

	* docs/gnuplot.doc docs/plotstyles.gnu:  Add figure for "with vectors".

2017-05-18  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc: typos, missing section for "set mttics".

	* docs/doc2rtf.c docs/doc2texi.el:  Support for bulleted lists.

2017-05-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c:  Allow "bind 'shift-Button1' 'something'".
	Previously the shift key was ignored.

2017-05-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (MakeFonts):  Revert accidental change made in
	revision 1.247.

	* src/win/wgraph.c (MakeFonts):  Handle empty type face name (GDI).
	Bug #1860

2017-05-14  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/Makefile.am.in src/fit.c:  Suppress creation of fit log file
	during "make check".

2017-05-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* docs/windows/doc2html.c:   Support bulleted lists at top level
	(i.e. not in a table).

	* src/term.c (do_arc):  Remove hack for the windows terminal which was
	meant to fix the drawing of circles, but broke it.  Note that there are
	similar cases in the code (ellipses) where a hack like this is actually
	necessary.  Further investigations required.
	Bug #1880

	* term/win.trm:  Update windows terminal help text to current status.

	* docs/gnuplot.doc:  Add a few more items to the section describing new
	features.

	* src/win/wgraph.c:  Use radio buttons to indicate the current backend
	selection.

2017-05-13  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/win/wgraph.c src/win/wgdiplus.cpp
	src/win/wd2d.cpp:  Replace defines for commands and point symbol types
	by enums.

2017-05-12  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/doc2tex.c docs/doc2gih.c:  Support bulleted lists at top level
	(i.e. not in a table).

	* NEWS docs/gnuplot.doc:  Revise the section describing new features.

2017-05-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wd2d.cpp|h:  Reorganize initialisation of
	the Direct2D backend to correctly init font related terminal properties.

	* src/win/wd2d.cpp (d2dSetFont):  Missing init of indicator that text
	can be rotated.

	* src/win/wgraph.c (WM_SIZE):  Track canvas (and window) size.

	* src/win/wd2d.cpp (D2DCOLORREF):  Replace macro by an inline function.

2017-05-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/set.c term/cairo.trm term/post.trm:
	In order to scale up an existing plot uniformly, e.g. for printing
	a poster-size PostScript or PDF file, it is convenient to be able to
	give the scale factor in the "set term" command.  We already offer
	"set termoption {linewidth <factor>} {fontscale <factor>}".  This patch
	adds "set termoption {pointscale <factor>}" to scale up pointsize.

2017-05-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c:  Add some DEBUG_* variables to help diagnose problems on
	other people's machines.

	* src/show.c src/variable.h:  All of the *_handler(ACTION, PARAM) calls
	are hidden by macros defined in variable.h except for ACTION_SHOW.
	Wrap these calls in a macro also.

2017-05-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm:  Fix incorrect initialization of axis width/height.
	Bug #1925

2017-04-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c (backup_file) demo/fit.dem docs/gnuplot.doc:
	The "update" command has not worked exactly as documented since
	version 4.something.  Revise the documentation and the support code.
	Remove pointless use of "update" from the fit demo.

	* docs/gnuplot.doc demo/cerf.dem demo/complex_trig.dem
	demo/heatmaps.dem demo/pm3d_lighting.dem demo/rgb_variable.dem:
	Update demos in accordance with the recent change to have '++' sample
	on u and v rather than x and y.

2017-04-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp:  Graphics::MeasureString did not take trailing
	spaces into account. Bug fix.

2017-04-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (do_system):  Report return code of (_w)system()
	also on Windows.

2017-04-24 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/command.c (report_error): Dummy up WEXITSTATUS(ierr) as a no-op
	for _WIN32.

2017-04-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wd2d.cpp|h src/win/wgraph.c src/win/wgdiplus.cpp|h
	src/win/wgnuplib.h src/win/winmain.c src/win/wresourc.h
	term/win.trm config/mingw/Makefile config/msvc/Makefile
	config/config.nt config/config.mgw:

	New windows terminal backend which uses Direct2D and DirectWrite
	instead of GDI+ or GDI.  It uses graphic card acceleration and is hence
	typically much faster.  DirectWrite offers a much superior text
	rendering quality in particular for rotated text.  The terminal is
	feature-complete for drawing to the screen.  Printing, copying to
	clipboard and saving of EMF fall back to the GDI+ code.  Pattern
	fill is still implemented using GDI+ and is slow.  As of now, this code
	is considered experimental.

	* src/win/wgraph.c src/win/wcommon.h (draw_image):  Make static.

	* src/win/wgraph.c src/win/wgdiplus.cpp:  Off-by-one error in
	mapping of graph coordinates.

	* src/win/wgdiplus.cpp (SetFont_gdiplus):  Fix memory leak and
	simplify a bit.

	* src/win/wgdiplus.cpp:  Use a compatible bitmap for cached
	point symbols.  Eliminates artifacts on some systems.

2017-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (do_system do_system_func report_error) src/eval.c
	docs/gnuplot.doc:

	Introduce new user-visible variables GPVAL_SYSTEM_ERRNO and
	GPVAL_SYSTEM_ERRMSG that hold the status returned by
	    system "some command"
	    ! "some command"
	    foo = system("some command")
	    foo = "`some command`"

2017-04-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp: Correct calculation of vertical drawing position.
	Corrects differences between position of point symbols and error bars.

2017-04-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.cpp (gp_cairo_boxed_text): Scale linewidth of
	textbox border by the current terminal linewidth setting.
	Bug #1825

	* src/gadgets.h src/gadgets.c src/save.c src/set.c docs/gnuplot.doc:
	Add a "linewidth" property to the textbox style.

2017-04-19  Bastian Maerkisch  <bmaerkisch@web.de>

	* configure.ac docs/Makefile.am:  Some systems allow for parallel
	installation of different lua versions (e.g. Ubuntu).  We already use
	pkg-config to test for "lua" and "lua5.1" packages.  This patch extends
	that mechanism to lua5.2 and lua5.3.  Change the name of the lua
	executable used to build the docs of the gnuplot lua terminal
	accordingly.
	Patch #750

	* src/win/wgdiplus.cpp (drawgraph_gdiplus):  Use generic string format
	to determine string extent.  Bug fix.

	* term/caca.trm:  Eliminate compiler warnings.

2017-04-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (place_objects):  Error messages from placement of
	circles and ellipses were misleadingly refering to "rect N" instead
	of "object N".

	* src/graph3d.c (map3d_position_r):  Placement of generic objects in
	"set view map" mode should not fail just because the z coordinate is
	non-positive and z is log-scaled.  The projection only uses x and y.

	* src/parse.h src/parse.c src/misc.c (parse_fillstyle):  New utility
	routine is_function(token) for convenience in parsing.

	* src/graph3d.c (draw_3d_graphbox): Clipping area was not maintained
	across this routine, causing object clipping in "set view map" to fail.

2017-04-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c docs/gnuplot.doc demo/armillary.dem:
	Allow polar (cylindrical) coordinates for circles in 3D plots.

2017-04-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c (update_gpval_variables):  New exported variables giving
	screen coordinates of the 3D plot axial center and radius of the
	enclosing sphere. GPVAL_VIEW_XCENT GPVAL_VIEW_YCENT GPVAL_VIEW_RADIUS.

	* src/graphics.c (place_objects):  Allow placement and size of circles
	in 3D plot to use axis coordinates (used to only allow screen coords).
	As in 2D, the radius of the circle is always scaled to match the x axis
	and the circle itself is always drawn in the plane of the figure.

	* demo/armillary.dem docs/gnuplot.doc:  Document and provide example
	for use of axis coordinates to place circles in 3D.

	* demo/Makefile.am.in: Place quotes around $(GNUTERM) so that multi-word
	definitions do not gum up "make check".

	* src/plot.c src/term.c:  Defer detection of initial terminal type until
	after error handling has been set up.  This allows us to parse GNUTERM
	for terminal options in additional to the bare terminal name.
	E.g. GNUTERM="wxt size 500,500"

2017-04-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (save_command):  Don't use loadpath to choose an
	output directory.

2017-04-02  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/eval.c (update_gpval_variables):  Sanity check the string
	stored in GPVAL_PWD.  However if the current directoty is invalid
	GPVAL_PWD still contains the previous string.

	* src/command.c (pwd_command):  Sanity check the validity of the
	current working directory.

2017-04-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c term/qt.trm src/qtterminal/qt_term.cpp
	src/qtterminal/QtGnuplotWindow.cpp: The qt terminal assumed that
	"space-raises-console" would be implemented in the core code.
	But it never was.  Instead on non-MSWin platforms hitting <space>
	in the qt window generates a mouse protocol error.
	Document that "space-raises-console" is only for MSWin, and have
	other platforms treat it like any other key.

	* configure.ac src/gplt_x11.c src/wxterminal/wxt_gui.cpp:
	The code chunk in gplt_x11.c that supports space-raises-console for the
	KDE3 konsole was giving compiler warnings.  Rather than fiddle with code
	used by almost no one (it doesn't work under KDE4 or KDE5),
	make KDE3+DCOP support a build-time option:
		./configure --with-x --with-x-dcop

2017-04-01  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/plot.c (main):  Exit with error if dropping privilege fails.

2017-03-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot3d.c src/datafile.c:  Add a slot in the plot
	structure to track a 2nd named sampling variable, e.g.
	    splot [u=1:5][v=1:5] '++' using (u):(v):(u*sin(v))

	* src/plot2d.c src/plot3d.c:  Extend the sampling range parsing to
	track named sampling variables for 2D sampling '++' as well as 1D
	sampling '+'. Minor cosmetic modifications to the 2D and 3D code to
	make it more obviously parallel.

	* demo/sampling.dem:  Add example of named sampling ranges in 3D.

	* src/graph3d.c (do_3dplot):  "set xyplane at 0; set log z; splot..." =>
	no plot drawn.  Change this so that "at 0" for logscale z is treated as
	"xyplane at <Z-axis min>".
	Bugfix.

2017-03-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE)
	src/axis.c (update_primary_axis_range) src/plot2d.c src/plot3d.c
	src/datafile.c (df_generate_pseudodata):

	The nonlinear axis code as originally introduced tracked data min/max
	in the primary (i.e. linear) axis structure.  That was unnecessarily
	complicated since it required a coordinate transformation to update the
	range every time a point was stored.  Also since the current range
	stored in the visible axis structure was not always up-to-date, some
	autoscaling operations during plot layout could fail.
	Now we change this to track data min/max in the secondary (i.e. visible)
	axis coordinate system. At the end of data input and function evaluation
	we call new routine update_primary_axis() just once per nonlinear axis
	to transfer the min/max values to the primary axis structure as well.

	* demo/sampling.dem:  Unit tests for some of the failures addressed
	by this set of changes and a couple that have not been fixed yet.

	* src/axis.h src/plot2d.c:  The macro ACTUAL_STORE_WITH_LOG_...
	no longer needs a special case parameter for the color axis.

2017-03-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):  Use axes u and v to sample
	pseudofile "++" rather than axes x and y.  This allows for sampling
	ranges that are distinct from the plot axis range, as was already true
	for sampling "+".  The downside of this change is that we don't
	currently support nonlinear sampling on u or v, so it doesn't work as
	well when plotting logscale x or y.

	* src/plot2d.c (plotrequest):  Initialize state of u and v axes.

2017-03-20  Jeremy Green  <jeremyrgreen@users.sf.net>

	* src/graphics.c (plot_betweencurves):  Revised algorithm for filling
	the area between two curves.  Rather than filling adjacent segments
	one by one, trace the outline of the entire filled area.
	This avoids artifacts at the boundaries between segments.

2017-03-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h src/graphics.c (plot_border):  Range-limited y2 axis was
	drawn in the wrong direction (top-to-bottom rather than bottom-to-top).
	If the top plot border was drawn also, this resulted in a spurious
	diagonal line across the plot.
	Bug #1921

2017-03-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.h src/interpol.c src/plot2d.c docs/gnuplot.doc:
	Clean up code, documentation, and demos for the 'bins' option.
	- document the algorithm for choosing bins
	- binrange defaults to min/max of current data set (not axis range)
	- trap degenerate case of all points UNDEFINED
	- new option binwidth=<width>. Now you can either determine binwidth
	  from range + nbins, or nbins from range + binwidth

	* src/plot2d.c src/tables.c:  "smooth bins" is the same as "bins".

	* src/set.c (set_table):  The "set table <filename>" command was not
	doing tilde expansion on filename.

	* src/datafile.c (df_open):  If the previous plot command plotted from
	an array by name, try to retrieve that array by name for a subsequent
	plot that uses the special filename '' or "". E.g.
	    plot Array with lines, '' with impulses

	* configure.ac:  enable/disable comment for stats command was reversed

2017-03-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_impulses) docs/gnuplot.doc:  Apply the x offset
	created by "set jitter" to 2D plots with impulses.

2017-03-10  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc:  Restore EXPERIMENTAL warning to documentation for
	the "bins" plotting option (it had been removed 2017-02-19).  We may
	consider changing the interpretation of binrange [min:max] to be more
	consistent with R, so warning that "implementation details may change
	before inclusion in a stable release" is appropriate.

2017-03-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (eval_plots):  Do not enforce cbrange validity if the
	palette is unused by this plot.  Prevents spurious error from "set log"
	with default cbrange.
	Bug #1920

2017-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	Deal with various corner-case failures found by fuzzing the demo set.

	* src/hidden3d.c (build_networks):  A degenerate polygon can fall all
	the way through the classification loop, leaving the flag value -2 as
	the polygon number which is then used as an array index.  Oops.

	* term/dumb.trm (DUMB_options): Sanity check terminal size.

	* src/plot2d.c (eval_plots): Dummy variable must not be an array.
	E.g.  array t[10]; set dummy t; plot t

	* src/plot2d.c (get_data):  Defer initialization of parallel plot data
	structures so that it catches both "set style data parallel" and
	"with parallel".  Example failure case:
	set style data parallel; plot 'silver.dat' using 1:2:3 lc var

	* src/plot2d.c (eval_plots): Recently added stringent tests on axis
	scaling caused "plot with table" to fail because the y axis range is
	undefined. Skip the tests for this plot style.

2017-03-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (plot_command splot_command) src/gplt_x11.c
	src/qtterminal/QtGnuplotScene.cpp src/wxterminal/wxt_gui.cpp:

	The toggle status of all plots (plot visible or hidden) was being reset
	in the terminal driver on every clear() event.  This caused the toggle
	state to be lost when the plot was rotated/panned and on refresh/replot.
	Now we do away with the automatic reset in the terminal drivers.
	Instead we send term->modify_plots(MODPLOTS_SET_VISIBLE, -1) as part of
	the plot and splot commands.

2017-02-27  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/wxterminal/wxt_gui.cpp:  Rename static int yield to avoid
	name conflict on Solaris 10.
	Bug #1914

2017-02-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stdfn.c:  Clarify warning message for abnormal exit.
	Bug #1913

2017-02-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.c (do_cubic) docs/gnuplot.doc:  Document that smooth
	options (splines and bezier variants) are sensitive to blank lines and
	undefined values in the input data. Curves are fit separately to each
	uninterrupted subset of the original data. Curve segments that are
	entirely out of range on x are now ignored rather than triggering a
	error message.
	Bug #1911

2017-02-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/term.c (term_initialise):  Revise the test for output of binary
	data to the wgnuplot text window by checking if the terminal actually
	writes to output.  Fixes caca output to a console window in wgnuplot.
	Bug #1912

	* demo/borders.dem demo/boxclusters.dem demo/boxplot.dem
	demo/circles.dem demo/ellipse.dem demo/ellipses_style.dem
	demo/histograms.dem demo/histograms2.dem demo/matrix_every.dem
	demo/mgr.dem demo/molecule.dem demo/orbits.dem demo/parallel.dem
	demo/probably_tux.dem demo/solar_path.dem demo/special_chars.dem
	demo/stats.dem demo/ttics.dem demo/world2.dem:
	End all demos with 'pause -1; reset'.  Set encoding to utf8 when
	required.

2017-02-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot2d.c src/interpol.c: Remove the EXPERIMENTAL
	warning and conditional compilation for "smooth bins".

	* src/datafile.c (df_readbinary) src/plot2d.c (get_data):
	Version 5 intentionally returns input data with a flag UNDEFINED rather
	than skipping the point altogether. Unfortunately the binary data input
	path failed to clear/initialize/set-to-NaN the value returned from
	function evaluation during binary data input. Now we explicitly set NaN
	in additional to returning DF_UNDEFINED.
	This fix is incomplete because store2d_point() later overwrites the
	UNDEFINED flag, which is almost certainly the wrong thing to do.
	Bug #1911

	* term/svg.trm:  Default to embedding generated images rather than
	creating and linking to separate *.png files.
	Bug #1801

2017-02-17  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm term/js/gnuplot_mouse.js term/js/gnuplot_svg.js
	term/svg.trm:  Mousing support for "set theta <origin> <sense>".

2017-02-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c:  When hidden3d mode is set, two linetypes are reserved
	for each plot (front and back surface).  This is not necessary if both
	the front and the back use the same linetype ('set hidden3d nooffset'),
	so if the linetype offset is zero then reserve only one linetype.

2017-02-16  Bastian Maerkisch  <bmaerkisch@web.de>

	* docs/plotstyles.gnu:  On Windows, use "Tahoma" instead of "Times"
	"Times New Roman".  The former is not available and the later does not
	provide the characters required by the 2nd "with labels" plot.  Scale
	down fontsizes to better fit the size of the plots.

2017-02-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c src/hidden3d.c:  Arrowhead properties were being applied as
	each plot was set up. This doesn't work in hidden3d mode because arrows
	from multiple plots are sorted jointly and drawn later.  Arrowhead style
	must be applied separatedly for each arrow.
	Bug #1492

2017-02-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/config.oww config/watcom/Makefile src/win/winmain.c:
	Enable fake pipes for OpenWatcom.  Here the system() function requires
	the command string to include the shell and wide character variant
	_wsystem() does not seem to work.

	* src/win/wgraph.c:  Fix initialization of the graph window struct when
	switching from standalone to docked mode and a previous window was open.

	* config/mingw/Makefile:  New variable CWFLAGS for warning flags to be
	put last in CFLAGS in order to overwrite e.g. -Wall.

	* config/mingw/Makefile:  New target "7z" which is similar to the "zip"
	target but outputs a 7-zip packed binary package.

2017-02-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/graphics.c src/save.c src/set.c src/show.c
	src/tables.c src/tables.h src/unset.c src/mouse.c src/boundary.c
	docs/gnuplot.doc demo/ttics.dem demo/solar_path.dem:

	New command
	    set theta {right|top|left|bottom}
	    set theta {clockwise|cw|counterclockwise|ccw}

	controls layout of polar mode plots by specifying where to place the
	origin (theta=0) of the angular coordinate and its sense of rotation.
	The default remains "right" and "counterclockwise".

2017-02-10  Mojca Miklavec  <mojca.miklavec.lists@gmail.com>

	* src/qtterminal/qt_term.cpp term/aquaterm.trm:
	Make the the "set term ... linewidth" option more like other terminals.

2017-02-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* configure.ac: Require glib version >= 2.28
	(because src/wxterminal/gp_cairo.c now uses the g_clear_object macro)

2017-02-09  Ethan A Merritt  <merritt@u.washington.edu>

	* term/aquaterm.trm term/qt.trm src/qtterminal/qt_term.cpp term/wxt.trm:
	Add "linewidth <lw>" to the list of options accepted for "set term" or
	"set termoption".

	* configure.in term/qt.trm:  Qt4 info only printed for Qt4 build.
	Bug #1905

2017-02-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/hidden3d.c (build_networks):  Hidden3d structures were not
	correctly initialized for "splot with dots".
	Bug #1904

	* src/boundary.c src/graph3d.c:  Use the shared routine write_label()
	to handle the key title.

2017-02-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  Limit the scope of a sample variable to the plot
	command it is used in.  I.e. restore value of t after execution of
	plot sample [t=0:10] '+' using (f(t)):(g(t))
	Bug #1755

2017-02-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c src/util.c src/command.c docs/gnuplot.doc:
	Limit the scope of an iteration variable to the command or clause being
	iterated. I.e. after execution of an iteration "for [N=1:10]" N retains
	whatever value it had prior to the iteration, possibly NOTDEFINED.
	For iterated plot and set statements this is robust against errors.
	However an error exit from inside a "do for [foo = ] {}" clause may
	leave foo with some intermediate value.
	Bug #1891

2017-02-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gplt_x11.c:  Zero out each command string as it is freed.
	I am not sure this fixes a reported use-after-free segmentation error
	but it can't hurt.
	Bug #1866

2017-02-01  kh.moriyama  <cheongsamkh@yahoo.co.jp>

	* src/axis.c src/axis.h src/gadgets.c src/gadgets.h src/graphics.c
	src/graphics.h src/misc.c src/save.c src/set.c src/term_api.h
	docs/gnuplot.doc:   New keyword "pointnumber|pn" to limit the total
	number of point symbols that lie along a plot "with linespoints".
	Similar to "pointinterval" except that the resulting spacing between
	point symbols does not depend on the total number of data points.

2017-02-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c (plot3d_points) src/gadgets.c src/gadgets.h:
	Apply pointinterval property to splot with linespoints.

	* src/hidden3d.c: Apply pointinterval property in hidden3d mode also.

2017-01-29  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/config.oww:  The OpenWatcom v2 fork has erf and erfc.

	* src/win/wmenu.c:  Revise the patch dated 2017-01-25 so it does not
	break non-UNICODE builds.

	* src/stdfn.c|h src/misc.c config/config.mgw:  Always use our own
	Windows version of opendir and friends as they handle encodings.
	Bugfix.

	* src/stdfn.c src/syscfg.h src/util.c src/win/wmenu.c:  Only include
	direct.h where required. Remove a few unnecessary includes.

	* src/win/mingw/Makefile:  Optionally use pkg-config to use gdlib.
	Required with recent updates of MSYS2/Mingw-w64

2017-01-28  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/stdfn.c|h (gp_getcwd):  New function for Windows which is aware
	of the current internal encoding. Bugfix.

2017-01-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_determine_matrix_info):  Check and report error
	return from fseek, which cannot work if the input stream is a pipe.
	Now you get: "seek error in binary input stream - Illegal seek" instead
	of the non-informative "File doesn't factorize into full matrix".
	Bug #1901

2017-01-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp config/config.oww config/watcom/Makefile:
	Enable build with OpenWatcom and GDI+.  See Patch #746.

	* src/win/wprinter.c:  Add missing calling convention.

2017-01-24  Stefan Althoefer  <stefan-alth@users.sourceforge.net>

	* term/js/gnuplot_mouse.js:  Improved placement of hypertext and
	mouse-click output. Fix multiline hypertext.

2017-01-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/canvas.trm term/svg.trm term/js/gnuplot_mouse.js
	term/js/gnuplot_svg.js: Mouse support for inverted r axis.

2017-01-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (SaveAsEMF):  Default to EMF+ format when using the
	GDI+ backend.

	* src/win/wgraph.c (CopyClip):  Only attempt to set clipboard data if
	the bitmap/metafile handle is valid.  Emit an error message otherwise.

	* src/win/wgdiplus.cpp (clipboard_gdiplus):  Retrieving the handle to
	the metafile requires releasing the graphics object first.  Fixes
	copying EMF data to clipboard.

	* src/win/wgdiplus.cpp (clipboard_gdiplus, metafile_gdiplus):
	Explicitly set the size of the metafile.

	* src/set.c (set_degreesign):  Remove special Windows code since we
	cannot rely on the locale on this platform.  Fixes degree sign for
	UTF-8 encoding.

2017-01-23  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  Do not write postscript comments in output stream
	to cairolatex terminal.
	Bug #1898

	* src/axis.h src/graphics.c:  Fix type mismatch in numeric comparison
	(clang generates an error or warning).

2017-01-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (parse_label_options):  Save label z value into its point
	colorspec as well as its text colorspec
	Bug #1897

2017-01-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/win/wgraph.c src/win/win/wmenu.c
	src/win/wtext.c:  Fix string formats and messages in several places to
	make non-Unicode builds work again.

	* src/win/wprinter.c:  Fix compiler warnings.

2017-01-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (f_dollar f_column df_readascii):
	Version 5 was supposed to do away with differences between data read
	by 'plot ... using N' and 'plot ... using ($N)'. It turns out that was
	not true with regard to missing data.  If the "missing" flag is present
	in the data then 'using N' catches it but 'using ($N)' does not.
	The problem is that ($N) and (column(N)) and "header_of_N" all invoke
	expression evaluation, which has had no mechanism to indicate a missing
	value on return rather than NaN.  This patch overloads the imaginary
	slot of a complex NaN value to hold DF_MISSING rather than 0.0 on return
	from f_dollar() and f_column() as appropriate.  For convenience the body
	of f_dollar() is replaced by a pass-through to f_column() so that both
	routines behave the same way.
	Bug #1896

	* src/plot2d.c (get_data) src/set.c src/show.c docs/gnuplot.doc:
	The fix for bug #1896 did not address the case where a missing value is
	encountered during evaluation of an expression.  E.g. 'using ($1+$2)'
	when there is missing data in either column 1 or 2 will evaluate to NaN.
	This patch adds an additional option 'set datafile missing NaN' that
	tells gnuplot to treat NaN data values as missing rather than invalid.
	Based on patch #725 (Christoph Bersch)

2017-01-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (gdiplusCreatePen):  Remove now unused static
	function.

2017-01-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_linetype):  Save and show commands were failing to
	list linecolor for lines that were originally specified as "lt -1".

	* src/graphics.c (plot_border draw_polar_circle) src/set.c src/show.c:
	New command "set border polar" draws a circle with radius matching the
	highest tic position on the r axis.

2017-01-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c:  Wrap polar grid radial lines in terminal notification
	TERM_LAYER_{BEGIN|END}_GRID

2017-01-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/gadgets.h src/graphics.c src/save.c src/graph3d.c
	docs/gnuplot.doc:  New keyword `polar` to specify position. This allows
	labels, arrows, and objects to be placed in 2D plots using polar
	coordinates and in 3D plots using cylindrical coordinates.

2017-01-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/plot2d.c src/plot2d.h:
	Continue consolidation of polar to cartesian coordinate conversion.
	This patch fixes various problems with logscale r axis tic placement.
	It adds a filter to categorically reject points with negative r value
	if the raxis is logscaled.

2017-01-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/unset.c (unset_polar): "reset" needs to free data structures and
	rotation for ttics.

2017-01-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/set.c src/show.c src/tables.c src/tables.h src/unset.c
	src/boundary.c src/plot2d.c src/plot2d.h docs/gnuplot.doc:
	New command "set rlabel" places an axis label above the raxis. The label
	is printed whether or not the program is currently in polar mode.
	Keywords for offset, font, etc as for the other axis label commands.

	* src/axis.c src/gadgets.c src/gadgets.h src/graphics.c src/mouse.c
	src/plot2d.c src/set.c docs/gnuplot.doc:  Support inverted r axis range.
	rrange must be linear and have fixed max/min (no autoscaling).
	Bug #1880

	Allows use of polar mode to display a projection of celestial horizontal
	coordinates (altitude + azimuth) with the zenith (altitude 90) at the
	center and the horizon (altitude 0) at the perimeter. Theta represents
	the azimuthal angle.

	* demo/solar_path.dem demo/solar_params.dem demo/all.dem:
	Use inverted rrange to display solar path at a specific latitude in
	celestial horizontal coordinates.

2017-01-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics) unset.c (unset_polar):  Allow placement of tics
	and tic labels along THETA (set ttics) using angles outside the fixed
	range [0:360].  Handle auto-generated tic at 360 as a special case and
	omit it if there is already a tic at 0.

	* src/boundary.c src/graphics.c (ttick_callback place_grid):  Reserve
	sufficient space for THETA tic labels at the top and bottom of plot.
	ttic labels should not toggle on/off with the grid.
	Bug #1892

	* src/set.c (parse_plot_title) src/plot2d.c (attach_title_to_plot):
	Accept keywords {left|right} to control text justification of a plot
	title positioned at the beginning or end of a plotted line. E.g.
	    plot FOO ... with lines title "Foo" at end {left|right}

	* src/plot2d.c (polar_to_xy):
	Rename theta_r_to_x_y() to polar_to_xy() and add parameter TBOOLEAN update
	TRUE - do range-checking against rrange and update limits if autoscaling
	FALSE - convert theta;r to x;y with no range checking or update
	This patch moves the range checking done at each original site into the
	shared routine. The original range checks were not identical so it is
	possible that consolidation breaks something.  In particular the call
	from parametric_fixup() originally updated rrange based on fabs(r)
	rather than r.  If necessary we can replicate this using two
	successive calls to polar_to_xy().

	* src/plot2d.c (polar_to_xy):
	Mapping negative numbers onto a polar plot with (R_AXIS.min != 0)
	was giving incorrect placement.  This patch catches and corrects most of
	the bad cases. Examples that were bad before this patch:
	    set polar; set grid polar; set rrange [1:5]; plot -2, 3
	(note that the "-2" circle was drawn outside the "3" circle
	    load 'ttics.dem'; set rrange [1:6]; replot
	(weird displacement of -t curve)
	Some corner cases may remain (e.g. nonlinear R with nonzero min)
	Bug #1892

2017-01-07 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/win/wgraph.c (UpdateStatusLine):   Re-order code to support MSVC
	2010 (and OpenWatcom).

2017-01-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wcommon.h src/win/wgnuplib.c|h src/win/wgraph.c src/win/wmenu.c
	src/win/wtext.c term/win.trm docs/gnuplot.doc:
	Graph windows can be docked to the wgnuplot text window with
	`set term win docked`.  Multiple graph windows can be docked at the same
	time and their layout can be changed with the new `layout <rows>,<cols>`
	option.  The fraction of the window which is reserved for text input
	can changed by moving a separator bar with the mouse and via wgnuplot.ini.
	This is useful in particular for Windows in "tablet mode" which only
	displays one maximised window at the time.
	Patch #711

2017-01-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (gen_tics):  Remove dead code for polar axis tics.

	* src/plot2d.c (theta_r_to_x_y):  Consolodate polar->cartesian input
	coordinate conversion into calls to a new routine theta_r_to_x_y().

	* src/graphics.c src/unset.c demo/ttics.dem docs/gnuplot.doc:
	Allow rotation of polar grid (theta) tic labels by "set ttics rotate".
	Extend the fixed range of theta axis so that the user can label from
	-180 -> 180  rather than 0 -> 360.

2017-01-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* demo/stringvar.dem:  Add platform specific code for Windows.

	* src/term.c (term_initialise):  Disable output of binary data to the
	wgnuplot text window.

	* src/win/winmain.c (WinRaiseConsole):  Raise pause message box instead
	of the text window during pause.

2017-01-03  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/smooth_splines.dem demo/errorbars.dem demo/all.dem demo/html/*:
	Split mgr.dem into two parts, one illustrating the various spline
	smoothing options and the other showing various 2D plot styles
	with errorbars.

	* docs/gnuplot.doc:  Clarify the meaning of the binary file keyword
	"transpose".  Provide index entries for all binary file keywords.

2017-01-02  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm (ENHAQUA_put_text):  aquaterm was ignoring
	ignore_enhanced_text;  i.e. you could not bypass enhanced text
	processing.

2017-01-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_power): Use ISOC99 macro fpclassify(), if present,
	to detect floating underflow from evaluating X**Y.  Return 0.0 rather
	than UNDEFINED.
	Bug #1877

	* src/specfun.c (f_normal): Values of x < -38 cause floating underflow
	in the calculation of norm(x).  Return 0.0 rather than UNDEFINED.
	See bug #1877

	* src/save.c src/save.h src/show.c:  Consolidate save/show axis format.
	Fix minor bug in "show auto" (2D reports 3D status and vice versa).

2017-01-01  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/qtterminal/QtGnuplotWindow (print):  QPrinterDialog requires
	a parent on Windows.  Set a generic document name.  Disable page
	range option in print dialog.

2016-12-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgraph):  Fix incorrect determination for
	drawing to a metafile which caused point symbols to be drawn as
	a bitmap.

2016-12-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c: Do not allow the axis range on polar axis R to invert.
	Bug #1880

2016-12-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/tables.c src/tables.h:
	Define new axis THETA_AXIS to hold tic definitions for labeled angles
	on perimeter of polar grid.

	* src/graphics.c (ttick_callback) src/save.c src/set.c src/show.c
	src/unset.c:  Support for "set ttics" "set mttics" and placement of
	labeled angles on perimeter of polar grid.

	* demo/ttics.dem docs/gnuplot.doc docs/plotstyles.gnu:
	Demo and documentation for "set ttics".

2016-12-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c src/win/wgnuplot.mnu:  Show text for toolbar icons
	as tooltips, which can be a bit more descriptive.

2016-12-24  Vicente Olivert Riera <Vincent.Riera@imgtec.com>

	* configure.ac:  Keep track of gdlib-config path found during configure.
	* Makefile.am:  Remove vestigial reference to LISPDIR.

2016-12-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c:  Convert save tic/mtics routine to use axis pointers.

2016-12-23  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/qtterminal/QtGnuplotScene.cpp:  Draw zoombox coordinates in front
	of everything else.

2016-12-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/show.c src/set.c:  Repair a few places where axis_array[index].foo
	was not replaced with axis->foo.

2016-12-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/graphics.c src/set.c
	src/unset.c:  More tweaks of the raxis/polar grid code.  Allow polar
	grid even in cartesian axis mode.

2016-12-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (some_grid_selected gen_tics) src/unset.c set.c (set_grid)
	src/graphics.c (place_grid xtick2d_callback ytick2d_callback) src/save.c
	src/boundary.c:  Cleaner separation of control over polar grid elements
	and rectangular grid components. Each can be set or cleared independent
	of the others, e.g. "set grid r" will give you circles about the origin
	even in a non-polar plot.  Sanity checking of polar_grid_angle, the
	spacing between radial lines in a polar grid.
	Bug #1888

2016-12-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (bad_axis_range):  Don't include a test (max-min == 0) in
	the bad_axis_range() checks.  One of the primary callers is
	axis_checked_extend_empty_range, which is perfectly happy to expand an
	initially empty range.

	* src/wxterminal/gp_cairo.c:  Valgrind found some use-after-free
	problems with cairo object accounting.  Replace g_object_unref() with
	g_clear_object() everywhere.   This is a macro that decrements object
	reference count and clears the pointer when the count hits zero.
	Clear the pointer in-line for pango_attr_list_unref().
	Bug #1886

2016-12-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (bad_axis_range): Even more paranoid checks to protect
	against corrupted axis range state (Inf/-Inf) found by fuzzing.
	Introduce new routine bad_axis_range().

	* src/plot2d.c:  Fuzz-testing found a crash from trying to adjust the
	range of a boxplot containing no points.

	* src/pm3d.c:  The combination 'set pm3d depthorder interpolate N,M'
	was not correctly tracking memory allocation.
	Bug #1884

2016-12-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (axis_check_empty_nonlinear) src/axis.h src/plot3d.c:
	New routine analogous to the existing axis_checked_extend_empty_range
	except that it applies to nonlinear axes.  This is a bug fix to prevent
	a crash after axis range corruption.
	Example of bug:    set log; splot $FOO using 1:2:(NaN)

	* src/axis.c (axis_check_empty_nonlinear) src/axis.h src/plot3d.c:
	Additional sanity check on axis range after nonlinear transform.

2016-12-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c:  Fix incorrect vertical placement of multi-line
	x2 axis tick labels.  The calculated y coordinate must describe the
	bottom line of the label, not the top line.
	Bug #1882

	* src/axis.c (set_explicit_range) src/axis.h: New routine called from
	apply_zoom() to change the range of one axis directly instead of
	constructing and interpreting a "set [axis]range [newmin:newmax]"
	command string. This prevents loss of precision in the axis coordinates
	that can occur if there is an intermediate ascii representation for the
	range limits.
	Bugs #1881 #1882

	* src/mouse.c (apply_zoom): Call new routine set_explicit_range()
	rather than constructing an executable "set range" command string.
	Bugs #1881 #1882

	* src/mouse.c (rescale rescale_around_mouse): Zoom in response to
	mousing hotkeys +/- must take into account nonlinear axes.
	Nonlinear axes part 20
	Bug #1883

2016-12-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/util.c (strappend):  Fix insufficient memory allocation.

2016-12-07  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu:  Update filledcurves to include
	an example of representing error on y as a shaded region of uncertainty.

2016-12-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  Revert problematic patch 2016-11-29 affecting order
	of grid drawing.  Work-around for the bug it fixed: 'set border behind'

	* src/show.c: Separate "show xyplane" from "show tics".

	* src/unset.c: "reset" should return border_layer to "front"

2016-12-05  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm: Co-opt the existing "animate" keyword for use by the new
	sixelgd terminal.  It sets the cursor position at the top left of the
	terminal before each plot so that successive plots overwrite the same
	screen area rather than scrolling off the top.  This is convenient when
	generating an animation sequence, particularly if you save it to a file
	for later playback.

	* term/gd.trm: It is only by historical accident that the gd terminal
	only tracked integer font sizes.  Make it a double so that fractional
	font sizes are possible.

2016-12-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/sixel.c:  Required minimal version of gdlib is 2.1.0
	(gdImagePaletteToTrueColor, gdImageTrueColorToPaletteSetMethod).

2016-12-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/gd.trm term/sixel.c term/Makefile.am.in:
	New terminal "sixelgd" based on kmiya@culti's sixel.c code
	available at http://nanno.dip.jp/softlib/man/rlogin/#REGWIND
	It produces sixel graphics like the "sixel" terminal, but uses
	gdlib to draw instead of the built-in bitmap code.  It hence
	offers an enhanced feature set, including support for up to 256
	colors, outline fonts, transparency, and anti-aliased lines.
	"set term sixelgd" uses only 16 colors for sixel output and up to
	256 palette colors internally, but "set term sixelgd truecolor"
	maps the internal ARGB image back down into 256 sixel colors
	using dithering.
	sixelgd piggy backs on the png/gif/jpeg terminal routines and
	thus offers the same options.  In "notruecolor" mode we no longer
	pre-allocate colors to avoid unnecessary transformations of the
	image in gdImageSixel.  The "transparent" option works with
	mintty or mlterm on Windows, but does currently not work with
	xterm or mlterm on *nix.
	Patch #742

2016-12-02  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm (PNG_set_font): Repair a read past end of string error
	found by valgrind.

	* src/plot3d.c: Initialize vector of data values so that incomplete
	data lines do not result in passing uninitialized values to
	STORE_WITH_LOG_AND_UPDATE_RANGE

2016-12-01  Ethan A Merritt  <merritt@u.washington.edu>

	* term/dumb.trm: The set_pixel routine originally used a priority rank
	such that pixels belonging to the border or axis linetypes would always
	be overwritten by pixels belonging to a plot. This system started to
	break when the border linetype LT_BLACK became the default linetype and
	broke further with the addition of a new priority level for fill areas.
	The core code is pretty good at issuing draw commands in the desired
	order, so at this point we get better results by dropping the priority
	rank and having all set_pixel operations overwrite previous contents.

	* src/graphics.c src/plot2d.c term/vgagl.trm:
	Clean up typos, comments, old FIXMEs, dead code

2016-11-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c (do_3dplot): Front/back layering of border+grid
	components was not always correct in hidden3d mode.  For example:
		set pm3d; set hidden3d; splot x*y with points
	Bugfix

	* src/pm3d.h:  Replace #defined constants PM3D_SCANS_xxx with an
	enum.

2016-11-27  Bastian Maerkisch  <bmaerkisch@web.de>

	 * term/dumb.trm:  Color support by ANSI escape sequences (16, 256,
	or RGB).  In 16/256 color mode, RGB colors are mapped assuming a
	fixed palette, which likely is not the actual palette of the
	terminal.  Support filled polygons.  Relax priority condition
	for overwriting a "pixel" by allowing equal type.
	Patch #741

2016-11-26  Bastian Maerkisch  <bmaerkisch@web.de>

	 * src/win/winmain.c (WinMain):  Enable Windows 10 support for
	console virtual terminal sequences, i.e. escape sequences.
	Show "inline" color plots on the Windows command line with
	"set term caca driver utf8".

	* config/msvc/Makefile:  Enable Unicode build.  Include Manifest files.
	HTML help compiler is located in 32 bit program folder.  Support
	building 32 and 64 bit variants.

2016-11-19  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/pm3d.c (pm3d_depth_queue_flush) src/term_api.h
	src/win/wgdiplus.cpp:  Add layer calls for pm3d queue flush.

	* src/win/wgraph.c src/win/wgdiplus.cpp|h src/win/wgnuplib.h:
	Until version 4.4 the windows terminal used only the Windows GDI to
	draw.  Since 4.6 it can additionally use a mixture of GDI and GDI+ -
	mainly to enable antialiasing.  Version 5.0 added a new variant in a
	separate code path which now only uses GDI+ (5.1).  Not only is this
	faster than the mixed GDI/GDI+ code, it also offers improved support
	for transparency (5.0), custom dash patterns (5.0), oversampling (5.1),
	and antialiasing of polygons with less (5.0) or no artefacts (5.1).
	Version 5.0 still uses GDI for enhanced text and images, but that
	changed in 5.1 already and could be backported to 5.0.  The GDI+ variant
	is the default since version 5.0 for drawing to the screen and is now
	also used for printing, copying to clipboard and saving of EMF data.
	The transition to GDI+ is now complete and this change removes the
	transitional GDI/GDI+ code.

2016-11-18  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (CopyClip) src/win/wgdiplus.cpp (clipboard_gdiplus):
	Use GDI+ to copy EMF+ data to clipboard if the user selected the GDI+
	backend.

	* src/win/wgraph.c src/win/wgdiplus.cpp|h (InitFont_gdiplus):
	Determine initial font metrics etc. using the correct API (GDI/GDI+)
	instead of always using GDI.  Take actual canvas size into account.
	Bug fix.

	* src/set.c (set_encoding, init_special_chars) setshow.h
	src/misc.c (init_encoding):  Move initialisation of special characters
	to a separate function, which is also called during program init on
	Windows.  Bug fix.

2016-11-17  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pdf.trm configure.ac src/term.h:
	Mark the pdf terminal as DEPRECATED. The deprecation notice will first
	appear in version 5.0.6.  This patch removes the configuration option.
	The terminal source itself is still there so it remains possible to
	manually uncomment the commented-out #include statement in term.h.
	GmbH dropped support in 2007 for the free (as in beer) but license-
	restricted version of PDFlib.  The gnuplot pdf driver has not been
	touched since 2010 other than to accommodate new default terminal
	settings for version 5.  PDF output remains possible using the pdfcairo
	terminal, any latex terminal + pdflatex, and the export menu provided by
	the wxt and qt interactive terminals.

	* docs/gnuplot.doc docs/plotstyles.gnu docs/titlepag.tex:
	Repair broken hyperlink in docs.  Use color in the histogram plot
	styles figures.  Add Daniel Sebald to list of contributers.

2016-11-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h src/graph3d.c src/set.c:  Use the shared routine
	write_label() to handle 3D axis labels. This allows explicit rotation
	of xlabel and zlabel (ylabel rotation is suppressed so that the 2D
	default "ylabel rotate" does not affect 3D plots).  The revised zlabel
	code avoids printing the label twice (Bug #1277).

2016-11-15  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/plotstyles.gnu docs/gnuplot.doc demo/html/* demo/fenceplot.dem:
	Add zerror+fenceplot demo to the documentation and the online demo set.

2016-11-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (SaveAsEMF):  Option to save graph in EMF+ format.

	* src/wxterminal/wxt_term.h src/win/wxt_gui.cpp src/win/winmain.c:
	screendump command supports wxt terminal.

	 * src/win/wgraph.c (WndGraphProc):  Remove dead code in mouse handling:
	Single and double clicks are handled by the code in mouse.c and the
	window is not even configured to receive double click events.  Also make
	sure that mouse wheel "button"s are released again.

2016-11-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/boundary.c src/color.c src/graph3d.c
	src/graphics.c src/save.c src/set.c src/show.c:  Add a new field to
	the axis structure that stores tic label horizontal justification.
	Previous code was using axis->label->pos to store this, but that
	confounds justification of the tic labels and the axis label proper.

	* src/boundary: Revise calculation of space needed for x2 axis ticmarks.

	* src/save.c: saved timestamp command must use compatible syntax

2016-11-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c: Check terminal supports filled_polygon before trying
	to carry out "with zerrorfill"

2016-11-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c (ifilled_quadrangle):  If pm3d border linetype is
	LT_DEFAULT, draw quadrangle borders in current color.  Unfortunately
	this is still a magic number (lt -6) in the user interface.

	* src/qtterminal/QtGnuplotScene.{cpp,h}: Track current fillstyle so that
	qt terminal can distinguish between opaque and transparent pattern fill.

2016-11-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/gadgets.c src/gadgets.h src/graph3d.c src/set.c
	src/unset.c src/show.c:  Use the shared routine write_label() to handle
	"set timestamp" in both 2D and 3D.  Place the timestamp relative to page
	borders rather than the plot borders.  Timestamp offsets no longer
	affect placement of plot borders.  A timestamp is still generated for
	each subplot in a multiplot but now they all end up in the same place
	rather than overlapping bits of the multiplot.  This could be improved.

2016-11-07  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wgraph.c (CopyPrint): Fix braces broken by #ifdef.

2016-11-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h src/graph3d.c src/graph3d.h src/plot3d.c src/pm3d.c
	src/pm3d.h src/tables.c demo/all.dem demo/zerror.dem docs/gnuplot.doc:

	New 3D plot style
	    splot <data> using <x>:<y>:<z>:<zlow>:<zhigh> with zerrorfill
	          {fillcolor <colorspec>}
	This produces a plot similar to the 2D filledcurves option to fill the
	area between two curves.  The primary linecolor is used to draw a line
	through the z values.  The fillcolor (defaults to the linecolor if not
	given) is used to fill the area between zlow and zhigh.  Depth sorting
	is possible using `set pm3d depthorder`.

2016-11-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp|h (drawgraph_gdiplus):  Add wrapper functions
	instead of trying to determine the target (screen/printer/metafile)
	from the device context using GDI functions.

	* src/win/wgraph.c (CopyPrint):  Also use GDI+ to print if the user
	selected the GDI+ backend.

	* src/win/wgdiplus.cpp src/win/wgraph.c (draw_enhanced_init):  Take
	DPI into account when calculating the scaling factor for super- and
	subscripts.  Makes special code for printing superfluous.

	* src/win/wgdiplus.cpp:  Default GDI+ dash patterns use a very narrow
	spacing which does not scale with the line width.  We now use our own
	custom dash patterns which resemble the GDI default patterns for unit
	line width.  This in particular improves the appearance of grid lines
	in polar plots.

	* src/set.c (encoding_micro):  Fix micro sign for CP1252 and add a few
	more encodings, including CP437 and CP850.

2016-11-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/gadgets.h src/graph3d.c src/save.c src/set.c
	src/show.c src/tables.c src/tables.h docs/gnuplot.doc:

	"set key" already offers 3 choices for placement of 3D plots:
	1) "at" user-specified position
	2) "outside" - shrinks the entire plot so that the key can be drawn
	   in one of the margins
	3) "inside" - (the default) rotates and scales with the plot itself
	   as the view changes.
	This patch introduces a 4th option
	4) "fixed" is like "inside" except that it is not affected by changing
	   the current view angles or scaling.
	"fixed" key placement does not move when the plot rotates. For 2D plots
	this is identical to "inside".  The new option is now the default.

2016-11-03  Craig DeForest  <zowie@users.sf.net>

	* src/datafile.c (plot_option_binary):  Interpretation of dimensions
	given via "binary record=(a,b)" contridicted that for dimensions given
	via "binary array=(a,b)".  This caused mangling of image data read in
	using the "record" keyword.  Change the interpretation to match that
	of "array".
	Bug #1873

2016-10-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/show.c src/gadgets.c:  save/show style arrow was
	showing incorrect settings for head/heads/backhead, and reporting
	LT_DEFAULT as an actual line type.

	* src/misc.c (arrow_use_properties): If an arrowstyle has no explicit
	linetype or color, apply the current plot linecolor. This prevents 3D
	vector plots with a default linetype from being colored as if they
	were "lc palette z".
	Bug #1869

2016-10-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/plot3d.c: Recent reorganization of next_iteration()
	code makes it unnecessary to separately track highest iteration in each
	plot clause.

2016-10-26  Thomas Sefzick <t.sefzick@fz-juelich.de>

	* src/plot2d.c: Never decrease value of highest_iteration.
	Avoids missed plots when a plot command contains more than one
	iteration and the last iteration is shorter than the others.
	Bug #1871

2016-10-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_style):  Allow "set style textbox border" without a
	specific border color to default to black.

	* term/svg.trm:  Transition to SVG 2.0
	Remove DTD.  Remove option "fontfile" and references to SVG fonts.

	* src/axis.h src/axis.c src/show.c: Macros AXIS_IS_FIRST AXIS_IS_SECOND
	are used only once. Remove them.

	* src/internal.c: Clarify error message printed when an undefined
	variable is found in a string expression.
	Bug #1783

2016-10-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 4:  Iteration list no longer needs to be double-linked.

2016-10-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 1:  Do not try to pre-calculate and flag empty iterations.

	* src/parse.c:  Simplify the code that supports iteration.
	Part 2:  Do not pre-calculate whether an iteration is "just once".

	* src/parse.h src/parse.c:  Simplify the code that supports iteration.
	Part 3:  Re-write next_iteration() to use recursion.

	* src/parse.h src/parse.c demo/iterate.dem:  Dynamic reevaluation of
	iteration limits.  Allows inner loop to reference variable from outer
	loop:  E.g.    for [i=1:N] for [j=i:i+1] f(i,j)
	Bug #1817

2016-10-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (timed_pause) src/stdfn.h (GP_SLEEP):  Enforce usage of
	win_sleep() even if usleep() is available.
	Bug #1867

2016-10-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp:  Screen refresh must hold mutex lock,
	failure is triggered by resizing active plot window by dragging mouse.
	Bug #1845.

2016-10-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c src/save.c src/set.c src/show.c src/tables.c src/tables.h
	src/unset.c src/util.c src/util.h demo/special_chars.dem:

	New command "set micro" tells gnuplot to use an encoding-specific
	character sequence rather than "u" for the micro sign (unicode U+00B5)
	used as a prefix in scientific notation.  This affects the "%c" format
	used by gprintf() to label axis ticks.

2016-10-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wmenu.c src/win/wtext.c:  Argument of the
	function ShowWindow is not a boolean.

	* src/win/wgdiplus.cpp:  Enable antialiasing for polygons without
	seams:  Draw a run of filled polygons to a bitmap four times as large
	as the canvas and scale down with interpolation.

	* src/color.c src/term_api.h:  Add layer calls for color box.

	* src/win/wgdiplus.cpp (W_image):  Draw images with GDI+ using nearest
	neighbour interpolation.

	* src/wxterminal/wxt_gui.cpp|h (wxt_cairo_create_platform_context):
	Let cairo manage the Windows GDI bitmap internally. Requires cairo 1.4.

	* src/wxterminal/wxt_gui.cpp (OnPrint):  Use wxDC::GetHDC() instead of
	GetHandle() since that is also available in wxWidgets 2.8.

	* src/win/wgraph.c (drawgraph):  Missed to recreate the brush in case
	of fractional solid fill was requested. Bugfix.

2016-10-06  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc:  Fill in missing function definitions for "help"
	output.

2016-10-05  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu src/save.c:  Refer to the plot
	style as "boxxyerror" rather than "boxxyerrorbars" to reduce confusion
	arising from the style not drawing bars of any sort.

2016-10-04  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wprinter.c: Has to include syscfg.h if definition of
	WINVER in there is to make any difference.

	* src/win/wpause.c: Dito.

2016-10-03 Allin Cottrell  <cottrell@wfu.edu>

	* src/win/wprinter.c:  Cross-compilation requires lower case include
	file names.

2016-10-03  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp src/win/wgraph.c: Implement oversampling for the
	GDI+ windows terminal, i.e. draw diagonal lines at fractional pixel
	positions to avoid "wobbling" effects.  Vertical or horizontal lines
	and point symbols are still snapped to the nearest pixel to avoid
	blurry lines.  Replaces the old "oversampling" method which drew on a
	bitmap four times as large and then scaled down.

	* term/win.trm:  Update documentation of graph-menu and wgnuplot.ini.

2016-10-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (enhanced_recursion): The enhanced text code was
	eating any whitespace that followed an opening '{'.  While this
	may not be noticeable in most cases, it breaks using the &{space}
	syntax to create or reproduce blank space in an enhanced text
	string.  Possibly the idea was to allow "{ /FontName
	text-in-new-font }" but the documentation has specifically
	disallowed this for many years.  Remove the offending loop that
	eats whitespace.  Bug #1863

	* src/boundary.c: Revised placement of x2label.

2016-10-01  Daniel J Sebald <daniel.sebald@ieee.org>

	* QtGnuplotItems.{h|cpp} (QtGnuplotEnhancedFragment::width):
	Introduce a true string width function rather than using boundingBox(),
	which ignores leading or trailing whitespace.  This repairs enhanced
	text overprint and place-holder markup in the qt terminal.
	Bug #1863

2016-09-28  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/mousecmn.h src/qtterminal/qt_term.cpp
	src/qtterminal/QtGnuplotEvent.h
	src/qtterminal/QtGnuplotWindow.cpp|h: Enable space-raises-console
	and terminal option "raise" for qt on Windows.  Since gnuplot and
	the qt terminal are realized as two different processes, the
	currently active process has to allow the other to "raise" itself.

	* src/win/winmain.c:  Change only the state of minimised windows when
	raising text or graph windows.  In particular that does leave
	maximised windows as they are.

2016-09-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c: Use the shared routine write_label() to handle the 2D
	x, y, x2, and y2 axis labels rather than separate in-line code for each.
	This allows additional text properties for the axis labels, notably
	"boxed".  However this changes the effect of setting an offset for y, y2
	axis labels.  Previously this altered placement of the plot borders
	while leaving the absolute placement of the axis label on the page
	unchanged.  Now the plot borders remain fixed but the axis label moves.
	Bug #1550

	* term/svg.trm: Revert 2016-09-23 "in line images do not require png
	support".  Actually, they do.

	* src/plot2d.c (eval_plots):  Initialize fillcolor.

	* src/color.c: Use the shared routine write_label() to handle the 2D
	cb axis label.

	* src/stats.c: Do not use columnheader as a prefix for "stats" unless it
	is specifically requested.

2016-09-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c (set_plot_with_palette): When checking for plot elements
	that refer to palette coloring, go through the list of objects also.

2016-09-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm: postscript terminal support for rotation of boxed text.
	This happens to also remove incompatibility of "set minussign" and
	"set term post noadobeglyphnames" and utf8 encoding.

2016-09-24 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/wxterminal/wxt_gui.cpp (OnExport):  VS2010 does not accept
	splitting the string argument for wxT().

2016-09-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (MakeFonts):  Calculation of hchar and vtic lost
	precision.  Bugfix.

2016-09-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (EnhancedPutText):  Fix reference of rotation
	for enhanced text.

	* src/win/wgraph.c src/win/wgdiplus.cpp:  Positioning of rotated text
	depends on the currently selected font and in particular on the font
	size.  Bugfix.

	* src/win/wgdiplus.cpp:  Take fontscale into account. Bugfix.

2016-09-23  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm (SVG_image): Image support was conditional on png support
	but this can be relaxed for in-line images.

	* src/gadgets.c (write_label): If current textbox style has neither a
	border nor fill, then the "boxed" attribute can be ignored.

	* src/plot2d.c (cp_alloc): Initialize filledcurve_options to those from
	"set style data".

2016-09-22  Per Bothner  <per@bothner.com>

	* term/svg.trm (SVG_image): In domterm mode an embedded image should
	always be inline rather than linking to an external file.

2016-09-22  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.cpp|h:  Add "print" toolbar button. For now,
	it is only available on Windows, but support could in principle be
	added for other platforms. See feature request #304.

	* src/wxterminal/wxt_gui.cpp:  Eliminate warnings about unused
	variables. Used define _WIN32 to test for Windows platform.

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  Save as enhanced
	metafile (emf). Only available on Windows.

2016-09-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotScene.h src/qtterminal/QtGnuplotScene.cpp:
	qt terminal support for rotation of boxed text.

	* src/wxterminal/gp_cairo.c:
	cairo/wxt terminal support for rotation of boxed text.

2016-09-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c src/eval.h src/eval.c src/internal.h src/parse.c
	docs/gnuplot.doc:  New cardinality operator |A| reports number of
	entries in array A.   Example:  plot for [i = 1 : |A|] f(A[i])

2016-09-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/getcolor.c src/save.c src/show.c:  Remove unreachable case
	statements in color mode switch.  The fprintf warning they contained
	would have accessed uninitialized memory (found by canalyze static
	code analysis tool).

	* src/graph3d.c: Remove out-of-date comments.

	* src/graph3d.c (ztick_callback):  orientation of z-axis tick marks
	changes with azimuth.  "set zlabel rotate parallel" also.

2016-09-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c docs/gnuplot.doc:  Ignore "set termopt {dashed|solid}".
	Remove use of this option from examples in the manual.

2016-09-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/multiplot.c:  Allow "boxed" attribute in the title for a multiplot
	layout. Example:  set multiplot layout 2,2 title "Example" boxed

2016-09-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgraph):  Fix a GDI resource leak which is
	only important when opening and closing a massive number of different
	graph windows.

2016-09-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/graph3d.c src/set.c src/unset.c:  Write plot titles
	using the general routine write_label() rather than in-line code.
	This allows use of additional text properties, in particular "boxed".

	* src/graph3d.c (setup_3d_box_corners):  2016-09-06 revision to which
	plot edges have tic labels attached should not have been applied to
	"set view map" mode.

2016-09-12  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/mouse.c:  Change mouse pointer to indicate rotation during azimuth
	change via mouse.  Add a help text for dragging with mouse button 3.

	* src/mouse.c:  Revert mouse pointer to normal when enabling/disabling
	mouse mode.

	* src/win/wgraph.c (GraphInit):  Do not set an (automatic) window class
	mouse pointer.  As we set the pointer ourselves as required, that caused
	flickering of the mouse pointer.

	* src/win/wtext.c:  Change mouse pointer while marking text.

	* src/term/cairo.trm (cairotrm_init):  Redirection of output to a
	printer on Windows requires the use of gpoutfile.  Let pdfcairo on
	Windows always use the cairostream_write callback to enable printing
	of PDF files.

	* src/win/winmain.c (open_printer):  Open temporary file in binary mode
	as required e.g. for PDF data.

	* src/win/wgnuplib.rc src/win/wgraph.c (CopyPrint) src/win/wprinter.c
	(DumpPrinter):  Remove unused lower part of the "general" print
	property sheet by supplying an (empty) dialog template.  Add a note
	that printer settings will be ignored since the PRN file mechanism
	sends terminal output to the printer unaltered.

2016-09-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wprinter.c:  Previous change failed to apply default size
	when not the corresponding property sheet was not shown.

	* src/win/winmain.c (close_printer):  The code relied on a windows
	terminal graph window being opened, but should not.  Always supply a
	valid window handle to DumpPrinter().  Include the current terminal
	name in the print job title.

	* src/win/wprinter (DumpPrinter):  The Escape() PASSTHROUGH function
	was included in Windows 3(!) for backward compatibility with earlier
	versions and is no longer supported by some printer drivers.  Make
	use of the appropriate printer spooler API instead.  For constistency,
	use a print property sheet instead of a print-setup dialog here too.

2016-09-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c src/graph3d.h src/mouse.c src/save.c src/set.c
	src/show.c src/unset.c src/eval.c docs/gnuplot.doc demo/azimuth.dem:

	New command "set view azimuth <angle-in-degrees>"
	Changing the view angles rot_x and rot_z cannot move the z axis out of
	the plane normal to the canvas horizontal. This patch adds a new angular
	setting "azimuth" that rotates the plane containing the z axis about
	the line of sight.  I.e. "set view azimuth 90" places the z axis
	parallel to the canvas horizontal rather than the canvas vertical.
	Click-and-drag with right mouse button provides interactive control of
	the azimuth.  Azimuth is ignored by 2D plots and by "set view map".

2016-09-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.1017

2016-09-08  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/win/wgnuplot.exe.manifest src/win/wgnuplot.exe.manifest64:  Add
	compatibility flags vor Windows 7, 8, 8.1, and 10 to enable proper
	detection of the Windows version.
	Bug #1851

2016-09-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/winmain.c src/win/wprinter.c
	src/win/wcommon.h src/win/wgnuplib.h src/win/wgnuplib.rc:
	Replace the deprecated old-style print-setup dialog (which was shown
	when the user requests the windows terminal to print) by a print
	property sheet.  Integrate the previously separate dialog to request
	the print size.  This sadly requires quite a bit of code to implement
	a COM callback object.  Also we now properly clean-up printing
	resources.

	* src/eval.c:  Windows 10 also deprecated the VerifyVersionInfo API
	which is used by the external findversion.h, as well as GetVersionEx.
	Since the above patch fixes GetVersionEx's behaviour on all current
	Windows versions, there's no need to rely on findversion.h any more.
	See Feature Request 422

	* config/mingw/Makefile:  Resource target depends on manifest files.

2016-09-07  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  For pslatex, epslatex, cairolatex "standalone"
	option, if the current encoding is utf8 then put a line in the output
	/usepackage[utf8x]{inputenc}
	Note that [utf8x] (not [utf8]) is needed to correctly process the
	degree sign and micro characters.

2016-09-07  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wtext.c:  Ensure proper initalisation of the
	font chooser dialog also on non-english systems by using the LOGFONT
	fields to request bold or italic fonts instead of using strings.
	Request scalable fonts only, to ensure fonts can be scaled or rotated,
	or offer (some) Unicode characters.

2016-09-06  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/graph3d.c (setup_3d_box_corners): Add quandrant processing for
	surface_rot_x similar to that for surface_rot_z.  This fixes
	inconsistent splot borders drawn when the base is upside down.
	Bug #1810

2016-09-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c: In the case of 'stats foo prefix columnhead' check that
	the string found in the column header is a legal identifier (i.e. rule
	out numbers and punctuation).

2016-09-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tabulate.c( imploded ): The smoothing routine cp_implode()
	creates a new set of plots separated by dummy UNDEFINED points.
	However data files use a blank line to separate curves.  Thus
	  "set table foo; plot ... smooth freq"
	creates a file foo that is not in standard format, creating problems
	if it is read back in to plot later.  This patch replaces each
	UNDEFINED point with a blank line when smoothed data is tabulated.
	Bug #1274

2016-09-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c term/svg.trm:  Remove dead code and comments.

	* src/stats.c:  Track and report number of lines treated as column
	headers rather than as data.

	* src/show.c:  Show state of 'autotitle columnheaders' even if the key
	is currently unset.

	* docs/gnuplot.doc:  Update sections referring to columnheaders.
	Note that the effect of `set key autotitle columnhead` extends to
	stats and fit commands, and applies even if the key is unset.

	* src/datafile.c (df_open):  Guarantee that first line of data is
	skipped if 'set key autotitle columnhead' is in effect regardless of
	whether the column headers are used.
	Bug #1751

2016-09-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):
	Grid coordinates generated by splot '++' are subject to round-off error.
	This error is most noticeable at the plot boundary, where it may be that
	(sample_min + nsteps * stepsize != sample_max). This is more likely to
	be visible on 32-bit systems than on 64-bit systems.
	Force the final grid coordinate to be exactly sample_max.
	Bug #1850

2016-09-01  Ethan A Merritt  <merritt@u.washington.edu>

	* term/pslatex.trm:  The begin/end of plot bookkeeping of internal state
	that would otherwise be done by PS_layer() needs to be done instead by
	the replacement routine PSLATEX_layer().  In particular the final line
	a plot needs to be stroked and the linetype reset.
	Bug #1852

2016-08-28  Ethan A Merritt  <merritt@u.washington.edu>

	* demo/smooth.dem docs/gnuplot.doc:  Update docs for "smooth" option.
	Fix regression in demo caused by failure to promote N = points per bin
	to a real number.

2016-08-26  Per Bothner  <per@bothner.com>

	* term/svg.trm src/term.c (init_terminal):
	New terminal "domterm" wraps svg output in escape sequences compatible
	with in-line display in terminal emulators based on DomTerm
	(http://domterm.org). Conceptually similar to the tektronix, sixel,
	selanar etc graphic modes that interleaved with text output in
	old-school character cell terminals or emulators like xterm.

2016-08-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c src/set.c src/gadgets.c src/gadgets.h src/tables.c
	src/tables.h src/save.c src/show.c docs/gnuplot.doc:  New keyword
	"set colorbox {{no}invert" flips the top/bottom orientation of a
	vertical gradient; i.e. the same color maps to the same numerical value
	but the orientation of the sample is inverted.  Display of horizontal
	gradients is not affected.
	Tracker issue #1808

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  Revisit the file
	export widget. I misread the code previously, thinking there was only a
	single global command list. Actually there is a global pointer but each
	window has its own command list.  So we really can export inactive plots
	as well as the active plot.  The global command list pointer is now
	unused so get rid of it.
	Bug #1843

2016-08-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (refresh_bounds box_range_fiddling): Improved autoscaling
	of plots "with boxes". Extend y range to 0. Distinguish between absolute
	and relative boxwidth.
	Bug #1827

	* src/plot2d.c (eval_plots): "smooth {freq|fnorm|cum|cnorm}" operations
	replace the original data, which invalidates autoscaling during input.
	Now we save/restore autoscale state during input so that autoscaling of
	the smoothed data starts from a clean slate.
	Bug #1826

2016-08-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.h (arrow_end_undefined) src/set.c src/graphics.c:
	Initialize arrow structure to have type arrow_end_undefined.
	If we see an arrow with that type later, it indicates corruption due
	to an error exit from "set arrow".

	* src/eval.c (evaluate_at): Make unsupported array operations fatal
	(int_error) rather than informational (int_warn).  The int_warn version
	eventually returned UNDEFINED or NaN to the caller, and not all callers
	were prepared to deal with that.  E.g.
	    array A[1]; set xrange [0:A]; set param; splot u,u,u ---> boom!

	* src/tabulate.c (output_number):  Oops. Forgot to check for log being
	implemented via nonlinear axes.  This should have been part of the
	nonlinear axis patch set.

2016-08-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnExport):  The Export widget
	on a plot window should dump a copy of the plot in that window, not a
	copy of the currently active plot.  Modify the OnExport function
	accordingly.  Unfortunately to generate PDF or SVG files we want to
	reexecute the list of commands that generated the plot, but we only
	keep such a list for the currently active plot.  So Export from
	inactive windows is limited to the clipboard or PNG files.
	Bug #1843

	* src/readline.c (getc_wrapper):  Clear errno before reading next
	character.  This fix contributed anonymously.
	Bug #1846 #1865

2016-08-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (squash_spaces) src/util.h src/command.c:
	Modify squash_spaces() utility routine to optionally leave a single
	space in place of whitespace or remove whitespace altogether.

	* src/datafile.h src/datafile.c src/stats.c docs/gnuplot.doc:
	Rearrange the order in which we parse the "stats" command.
	This allows passing "columnheader" or "columnheader(N)" to the
	"name" option rather than a fixed character string.
	Bug #1841

	* src/axis.c (eval_link_function) src/save.c (save_nonlinear):
	If there is an expression-parsing error while processing a
	"set nonlinear" command, the forward/reverse axis mapping can be
	left in a corrupted state.  Add a sanity check for this to prevent
	bad things from happening when the axis mapping function is invoked.

	* src/axis.c (gstrdms):  Sanity check user-provided format.
	Reject format characters that are not handled explicitly.

	* src/stats.c (statsrequest):  Early exit if there are no usable points.

	* src/fit.c (update): Fix error in error reporting (null filename).

2016-08-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c: Clear SAMPLE_AXIS before using it as scratch space.

	* src/eval.c src/eval.h (free_at): afl-fuzz found multiple crashes
	caused by trying to evaluate a defunct action table.  This patch wraps
	free_at() in a macro that clears the pointer to an action table after
	freeing it.

2016-08-17  Dima Kogan  <dima@secretsauce.net>

	* src/gp_types.h src/interpol.c src/plot2d.c src/tables.c
	docs/gnuplot.doc:  New option "smooth fnormal" plots normalized
	frequency, analogous to plot foo using 1:(1./total) smooth freq"

2016-08-17  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/lua.trm: Warn on error from fflush() or ftruncate().
	Bug #1840

2016-08-17  AMD  <allanduncan@sf.net>

	* term/post.trm: Different treatment of simplex/duplex option
	depending on whether the PostScript support is limited to Level 1.

2016-08-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c (lp_parse) src/plot2d.c (eval_plots): Remove order
	dependence of the "fillcolor" keyword and confusion with line style.
	For example these commands were not working:
	    plot 'silver.dat' with boxes fs solid 1.0 border -1 fc "cyan"
	    plot 'silver.dat' with boxes fc "cyan" fs solid 1.0 border -1 lw 2

	* src/graphics.c (plot_filledcurves) src/plot2d.c (cp_extend)
	src/plot2d.c docs/gnuplot.doc:
	This is a CHANGE in filledcurves behaviour with repect to fillstyle.
	The fillstyle "border" attribute is now ignored except for filledcurves
	option "closed", the default. In order to make sure the border is
	drawn all the way around, duplicate the first point at the end.

2016-08-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c (eval_3dplots) src/plot2d.c (eval_plots):
	Check for legal log-scaled axis ranges before trying to plot.

	* src/axis.c (axis_log_value_checked):  Rewrite test for positive
	values so that it catches NaN as well as negative numbers.

	* src/command.c (link_command): More robust handling of error during
	'set link' or 'set nonlinear' commands. Do not fill in the
	axis->linked_to_* fields until after the points of potential failure.

	* src/eval.c src/eval.h (free_at): afl-fuzz found multiple crashes
	caused by trying to evaluate a defunct action table.  This patch wraps
	free_at() in a macro that clears the pointer to an action table after
	freeing it.

2016-08-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (box_range_fiddling):  afl-fuzz found a crash caused by
	 an incorrect test for no data points.

	* src/command.c (link_command):  If the "set nonlinear" failed to
	complete it could leave an axis marked as nonlinear but with no mapping
	functions defined.  Now we reset the links on failure.

	* src/set.c (encoding_minus):  Comment out replacement of the SJIS minus
	sign character.  The character itself is correct but it is a full-width
	rather glyph so it does not mix well with half-width digits in a number.
	This problem is specific to SJIS.

2016-08-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c:  Print the error code if opening the print dialog
	should fail.

	* config/config.nt (HAVE_ERF, HAVE_ERFC, HAVE_STDBOOL_H, isnan
	EAM_OBJECTS):  Version dependent macros to re-enable compilation
	with at least VS2012 or newer.

2016-08-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (CopyPrint) src/win/wprinter.c (DumpPrinter)
	src/win/wresourc.h src/win/wgnuplib.rc src/win/wgnuplot.rc:
	Add a progress bar to print progress dialog.  Bump minimum Windows
	version to XP here, too.

	* src/win/wgnuplib.rc:  Change (nominal) font size of most dialogs to
	8pt in order to match Windows default settings.

	* src/win/wresourc.h:  Message code for saving as bitmap was in conflict
	with the message code for hiding graph #2.  Bugfix.

	* src/win/wcommon.h src/win/wgraph.c src/win/wprinter.c:  Store the
	memory handles itself to save the user's printer selection (instead of
	the pointer returned by GlobalAlloc) and use them in all printer
	dialogs. Bugfix.

	* src/win/wprinter.c (DumpPrinter, PrintDlgProc) src/win/wgraph.c
	(CopyPrint) src/win/wgnuplib.h (GP_PRINT):  Changing the private data
	of some possibly unknown window is dangerous.  Store the pointer to the
	printer data in the dialog's 'WindowLong's instead.

	* src/win/wprinter (DumpPrinter):  The Escape() function always expects
	a byte encoded string, irrespective if UNICODE is defined or not.
	Explicit type casting may hide errors. Bugfix.

2016-08-09  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* config/msvc/Makefile (#QTDIR, TOP, MOC, UIC, RCC, S, W, WX, Q)
	(T, D, M, {$(S)}.c.obj, {$(S)}.c.cobj, $(HELPFILE), doc2html.exe)
	($(M)bf_test.exe, demo_plugin.dll): Reduce slightly excessive use
	of double backslashes.
	(VERSION_CPPFLAGS): Define version numbering flags.
	(doc2html.exe): Pass version numbering flags.
	(COMMONLIBS): Add newly required lib shlwapi.

	* config/config.nt (HAVE_ERF, HAVE_ERFC, HAVE_STDBOOL_H, isnan):
	Configure macros for current version of MSVC (VS 2015).

2016-08-09  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp:  Fix two more memory leaks.

	* src/win/wcommon.h src/win/wgnuplib.h src/win/wgraph.c
	src/win/wgdiplus.cpp:  GDI+ implementation of enhanced text.
	Until now the GDI+ backend still used the GDI code to draw enhanced
	text, which caused differences in layout if text was rendered as
	"normal" or enhanced text.  We now re-use the previous GDI-only
	routines and introduce function pointers to call GDI or GDI+ code
	depending on if they are called from drawgraph() or
	drawgraph_gdiplus().

	* src/win/wmenu.c:  Loading of icon images requires GDI+.  Add an error
	message if support for it is not compiled in.  Fix the case when
	GNUPLOT_SHARE_DIR is not defined.

	* term/svg.trm:  The change on 2016-08-05 did not handle the case
	of GNUPLOT_JS_DIR being undefined.

	* src/win/wtext.c:  getc might be a macro and thus needs to be
	undefine'd before redefinition.

	* src/win/wgdiplus.cpp:  Include iostream.h before syscfg.h in order
	to avoid MSVC choking on the re-definition of stdio routines by
	wtext.h/winmain.c.  Do not use namespace std since this causes MSVC
	to throw an error because of the (re-)definition of bool in syscfg.h.

	* src/win/wmenu.c:  Move variable declaration to beginning of code
	block.  Required e.g. by MSVC 2012.

	* src/win/wgraph.c src/win/wgdiplus.cpp (W_hypertext):  Use the
	encoding which was active while plotting, not the current one, to
	display hypertext.

2016-08-09  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* config/mingw/Makefile:  Enforce calling the lua executable instead
	of the lua wrapper script of Mingw64.  Better fix for the build failure
	of gnuplot-tikz.help.

2016-08-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  Avoid warning messages when using clang.
	Qt 5.x assumes C++11. Omit C++ flags when building gp_cairo.c.
	Japanese help file was missing a graph from the demos.  Execute lua
	via the cmd.exe shell in order to avoid errors when redirecting its
	output.  Remove obsolete flag CONSOLE_SWITCH_CP.  Do not enable caca
	terminal by default.

2016-08-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/set.c src/show.c src/tables.c src/tables.h src/unset.c
	src/util.c src/util.h docs/gnuplot.doc term/js/canvasmath.js:

	New command "set minussign" tells gprintf() to use an encoding-specific
	minus sign character for numeric output rather than the ascii hyphen
	character produced by sprintf().
	    UTF-8:	Unicode U+2212 "minus sign"
	    CP1252:	ALT+150 "en dash"
	    SJIS:	0x817c
	    default:	ascii \055 "hyphen"

	The substitution of minus sign for hyphen is not made during tabular
	output ("set table") or when the current terminal is a LaTeX terminal.
	It affects only numbers formatted by gprint().  Other hyphens are
	not affected even if they are in a gprintf format string.

	* src/boundary.c (do_key_layout):  Tweak vertical spacing of key titles
	to make the result more like previous versions (in particular
	the canvas terminal).  See patch of 2016-07-14

2016-08-06  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/wxterminal/wxt_gui.h:  Correct spelling of include file name.
	Bug #1836

2016-08-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c src/plot.c src/syscfg.h src/win/winmain.c|h
	src/win/wtext.c|h:  Enable support for encodings (including UTF-8) for
	console mode gnuplot on Windows.
	Patch #734

	* src/win/wmenu.c src/win/wgdiplus.c|h src/win/wgnuplot.mnu:  Images
	of toolbar icons can be read from a file.

2016-08-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/set.c src/mouse.c:  When logscaling is implemented
	via nonlinear axes, any test for "if (R_AXIS.log)" must come _after_
	a test for "if nonlinear(&R_AXIS)". Only affects logscaled polar axis.
	Nonlinear axes part 19

2016-08-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/canvas.trm term/lua.trm term/svg.trm term/post.trm src/plot.c
	src/win/winmain.c|h:  The code to determine paths relative to the
	gnuplot executable on Windows spread by copy and paste.  Let all those
	sites call a single new function instead and fix an improper handling
	of wide strings which was overlooked due to an explicit type cast.
	Fix memory leaks while at it.
	Bug #1837

2016-08-04  Ethan A Merritt  <merritt@u.washington.edu>

	* term/svg.trm:  Better vertical justification of rotated text.

	* src/qtterminal/QtGnuplotScene.cpp src/qtterminal/QtGnuplotItems.cpp:
	*.pcf (bitmap) fonts are non-rotatable. Furthermore Qt can die horribly
	while trying (seen with Qt 5.4.2). To make matters worse, requesting
	font "Times" may give you the Adobe pcf font Times (perfect name match)
	rather than a rotatable ttf or odf font like TimesNewRoman.  This patch
	adds style strategy QFont::ForceOutline to forbid selection of a
	bitmap font.

2016-08-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c src/gadgets.h src/plot2d.c demo/rotate_labels.dem
	docs/gnuplot.doc demo/all.dem:  New option `rotate variable` to assign
	a separate rotation angle for each point in a 2D plot using the
	contents of the 4th entry in the `using` specifier.
	    plot foo using 1:2:3:4 with labels rotate variable

	* src/datafile.c:  Matrix dimensions were not being adjusted to account
	for subsampling by "every" in the using specifier, so "with image"
	plots came out mangled.  This was a regression from 4.6.6
	Bug #1835

	* demo/matrix_every.dem demo/all.dem:  Add demo that serves as a unit
	test for the above regression and fix.

2016-08-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/plot2d.c:
	Stricter definition of nonlinear(axis) allows to distinguish nonlinear
	axes from linked (linear) axes.

	* src/axis.h demo/nonlinear2.dem:
	Rework tic and particularly minitic generation for nonlinear axes,
	including special case code for logscale axes.  The default minitics
	for log-scale axes in this mode are now always equivalent to
	"set mtics base" (i.e. unit intervals 1-9 for log10).
	Nonlinear axes part 17

2016-08-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/unset.c:  "unset y2mtics" was clearing the setting for x, not y2.

	* src/axis.h src/command.c src/unset.c: Internal flag ticdef->logscaling
	was not being cleared by "unset log" or "set nonlinear".
	Nonlinear axes part 16

2016-07-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.cpp:  Handle errors when creating a cairo
	surface.
	Bug #1621

2016-07-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  "splot ... with dots" was accidentally broken by the
	addition of multibyte PT_CHARACTER support.  This was a regression from
	released versions of 5.0.

2016-07-27  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wgdiplus.cpp|h src/win/wresourc.h:  Add an
	option to the menu to save the current graph as bitmap.  Supports all
	encoders available to GDI+.  On my system that is (TIFF, JPEG, GIF,
	PNG, and BMP).  Defaults to PNG.

	* src/win/wgraph.c (SaveAsEMF):  Tweak flags for GetSaveFileName() to
	make sure that the file/path is not read-only and to preserve the
	current working directory.

2016-07-26  Bastian Maerkisch  <bmaerkisch@web.de>

	* win/gnuplot.iss:  Enforce inclusion of directory and program group
	pages since the default changed in Inno setup version 5.5.7.
	Bug #1831

2016-07-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c src/win/wmenu.c:  Use the "large" icon set for the
	toolbar if the nominal resolution is larger than 96dpi.  Use
	TB_ADDBUTTON instead of TB_LOADIMAGES as this somehow eliminates
	another major resource leak.

	* src/win/wgraph.c (drawgraph) src/win/wgdiplus.cpp(drawgraph_gdiplus):
	Missing cleanup of cached point symbols caused a sizeable resource
	leak. Bugfix.

2016-07-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplot.exe.manifest src/win/wgnuplot.exe.manifest64
	src/win/wgraph.c src/win/winmain.c|h src/win/wtext.c:
	Windows scales gnuplot's windows according to the monitor's scaling
	factor.  This in turn may be based on the monitor's DPI or an explicit
	user setting.  In consequence gnuplot's text window and plot output look
	blurred e.g. on high-resolution screens.  This changeset makes gnuplot
	(system) DPI aware so that Windows no longer scales automatically
	(at least in the most common case).  Window sizes in wgnuplot.ini are
	(still) interpreted to be given in the default resolution of 96dpi.
	See also bug #1807.

	* src/win/wtext.c (DoLine):  Fix off-by-one error which caused the
	area below the last line to contain garbage in some cases.

2016-07-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp src/win/wgraph.c:  Textbox fillcolor and
	bordercolor support for windows terminal.  Transparency works
	except when using the GDI only variant with antialiasing disabled.

	* src/win/wgdiplus.cpp:  Use StringFormat::GenericTypographic() to draw
	text.  This reduces differences in text placement between GDI and GDI+
	output.

2016-07-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/gadgets.h src/save.c src/save.h src/set.c
	src/show.c docs/gnuplot.doc:
	Bookkeeping and core code implementation of textbox fillcolor and
	bordercolor. Note that transparency is possible if the fillcolor
	contains an alpha component.

	    set style textbox {noborder | border {<border_color}}
	                      {fillcolor <fill_color>}

	* src/qtterminal/QtGnuplotScene.cpp src/wxterminal/gp_cairo.c
	term/cairo.trm term/gd.trm term/lua/gnuplot-tikz.lua term/post.trm
	term/pslatex.trm term/tkcanvas.trm src/gplt_x11.c:
	Textbox fillcolor support for individual terminals.

	* demo/all.dem demo/textbox.dem:   New demo

2016-07-21  Bastian Maerkisch  <bmaerkisch@web.de>

	Enable UNICODE build on Windows.
	Patch #727

	* src/command.c src/show.c src/win/wcommon.h src/win/wgdiplus.cpp
	src/win/wgnuplib.c|h src/win/wgraph.c src/win/winmain.c|h
	src/win/wprinter.c src/win/wtext.c term/gd.trm term/win.trm
	config/mingw/Makefile config/watcom/Makefile:

	Windows offers two versions of its API:  a (multi-byte) variant
	termed "ANSI" and a Unicode (wchar_t) variant "W".  A set of TCHAR
	macros and types enables writing code which can be compiled with
	or without the UNICODE/_UNICODE flags being set.  With this change
	gnuplot on Windows now uses the Unicode variant by default.  While this
	at first looks like a massive set of changes, most of it is actually
	rather simple:
	  - Wrap strings constants in TEXT() macros.
	  - Use TCHAR types instead of plain char types.
	  - Replace string functions by tchar equivalents:
		_tcsdup (strdup) wsprintf (sprintf) _tcscmp (strcmp)
		_tcscpy (strcpy) _tcsncpy (strncpy) _tcscat (strcat)
		_tcsstr (strstr)
	  - Modify printf format strings.
	In addition we now explicitly call "ANSI" functions, or provide
	conversions from CHAR to WCHAR or vice versa in some cases.

	* src/show.c (show_version):  Add UNICODE build information to output of
	"show version long".

	* src/external.c|h:  Use dll_open_w() also for console mode gnuplot
	on Windows.

	* src/command.c src/show.c src/win/wgnuplib.h src/win/wgraph.c
	term/win.trm:  Define TCHARFMT to abstract the format string required
	for printf etc. for TCHAR strings.  Use it to fix a few format strings.
	Note that Mingw64 seems to accept %ls but not %ws which according
	to MSDN are supposed to mean the same thing.

2016-07-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.c wrc/win/wgnuplib.h src/win/wgraph.c term/win.trm:
	Aggregate related move/vector requests in a polyline.  This saves
	space in the internal list of drawing commands and accelerates
	re-drawing since the terminal code does not have to do this repeatedly.

2016-07-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/history.c (write_history_list):  Recent regression caused the
	the history list numbering to be off-by-one. E.g. "history !N"
	mistakenly re-executed command N-1 rather than command N.
	See also Bug #1763

2016-07-19  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm:  The AQUA_boxfill() routine scales very badly
	with the total number of rectangles, making it horribly slow when
	invoked by "plot $foo with image pixels".  Set the terminal flag
	TERM_POLYGON_PIXELS so that the image processing code will call
	term->filled_polygon() in preference to term->fillbox().

2016-07-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgdiplus.cpp (W_enhanced_text):  Apply text color to enhanced
	text.
	Bug #1829

2016-07-14  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc docs/plotstyles.gnu demo/custom_key.dem:
	Add custom key demo figure to the documentation.

	* src/boundary.c (do_key_layout):
	The command 'set key spacing <foo>' adjusts the vertical spacing of
	entries in the key.  However a complicated minimum size test caused the
	result to be discontinuous as a function of <foo>.
	I.e. 'set key spacing 2' came out the same as 'set key spacing 1'
	but both were smaller than 'set key spacing 1.8'.
	This patch makes the vertical spacing a simple multiplier for
	character height in the current font.  It also dissociates the
	height of the key sample itself from the line spacing.

2016-07-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c (write_label): Consolidate code to create a textbox for
	this label.

	* term/pslatex.trm: Implement textbox margins.

	* src/qtterminal/qt_term.cpp src/qtterminal/QtGnuplotScene.cpp
	src/qtterminal/QtGnuplotScene.h:  Implement textbox margins.

	* src/wxterminal/gp_cairo.c (gp_cairo_boxed_text): Reduce textbox
	margin size and linewidth to better match other terminals.

2016-07-04  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/screenbuf.c|h src/win/wtext.c:  Handling of colored text
	was lost when re-working the text window's internals for the 4.6
	release in 2011.  Turns out that it is not too hard to re-enable
	that again.

2016-07-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.c (print_line_with_error):  Replace macros
	PRINT_MESSAGE_TO_STDERR PRINT_SPACES_UPTO_TOKEN PRINT_FILE_AND_LINE
	with new utility routine.  Add code to reconstruct the original input
	line number by counting \n characters embedded in a command line
	produced by concatenation of successive lines in a bracketed clause.

	* src/graphics.c(plot_betweencurves):  The filled curve options y=foo,
	below y=foo, etc were reworked to piggyback on the 'fill between' code
	by pre-loading ymax with foo on data input.  However this mechanism
	breaks if the curve is smoothed because ymax is lost during smoothing.
	Revert the case of smooth + filledcurves + y=foo to use the original
	FILLEDCURVES_ATY1 code.  This original rationale (IIRC) was to get
	better clipping but since we now have good general case polygon
	clipping perhaps all the piggyback cases should be reverted.

2016-07-02  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (changedir):  Handle encodings (Windows).

	* src/term.c:  Replace local function prototypes with proper include.

	* src/win/wtext.c:  Ctrl-C copies text to clipboard if there's
	selected text or sets the Ctrl-C (break) flag otherwise.

	* src/win/wtext.c (UpdateScrollBars):  The size of the scroll bar
	thumb reflects the length or width of the scrollable area.

2016-07-02  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* configure.ac:  The change of 2016/05/23 to the --with-readline=DIR
	code did not properly handle the case when libedit is installed and thus
	found by AC_CHECK_HEADERS, but we really want to point to GNU readline
	installed in DIR.

2016-06-22  Ethan A Merritt  <merritt@u.washington.edu>

	* RELEASE_NOTES demo/plugin/Makefile.am:  Note compiler flags needed
	to build gnuplot using Solaris SunPro C compiler.
	Bugs #1786 #1821

2016-06-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wtext.c (UpdateCaretPos):  Fix a resource leak which occurred
	only if the encondig is set to utf8 or sjis.

	* src/readline.c (readline):  VREPRINT conflicts with hard-coded ^R for
	reverse-search.  Deactivate that section.

	* src/history.c (gp_read_history):  Cast argument of isspace() to
	unsigned char.

	* src/history.c (write_history_list):  Avoid adding extra leading
	spaces when saving to a file.  Index of history_get is zero-based
	relative to history_base.

	* src/history.c (write_history_list):  Let the built-in readline use
	the same code as is used for GNU readline and libedit.

2016-06-17  Ethan A Merritt  <merritt@u.washington.edu>

	* parse.h plot2d.c plot3d.c:  Tracking the wrong iteration
	variable (iteration_current rather than iteration) caused plot
	command iteration with a negative increment to fail to iterate at all.
	E.g. 'plot for [i=9:1:-1] foo' plotted only the single plot with i=9.
	Bug #1819

	* src/graph3d.c (draw_3d_graphbox): Don't draw ztics or tic labels
	at view angle rot_x=0 (projection along z axis).

2016-06-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (check_missing):  Fix test for explicit 'set missing'
	string in a csv file (previous check assumed the string was followed by
	whitespace rather than a field separator).

	* src/graphics.c:  Rearrange code to avoid compiler warning about
	unused variable image_z_axis.

2016-06-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/plot.c config/config.mgw config/mingw/Makefile:
	Allow console mode gnuplot on Windows to use GNU readline, which is
	more powerful than the builtin code, but still does not handle Unicode
	input on Windows.

2016-06-13  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/tkcanvas.trm:  Error check for ftruncate().
	Bug #1798

2016-06-12  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/graph3d.c:  Better fix for bug #1809 (placement of xyplane
	independent of tics or grid lines).

2016-06-12  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/gplt_x11.c (gpXTextExtents):  Wrap call to XTextExtents() in a
	routine that checks first for multibyte support.

2016-06-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_table) docs/gnuplot.doc:  New option to append tabular
	plot output to an existing file.  "set print" already works this way.
	    set table "outfile" {append}

	* src/multiplot.c (multiplot_start):  Remove alarming warning messages
	if default values for inter-plot spacing are used.

	* src/axis.c src/axis.h src/plot3d.c:  Remove unused macro definitions.

2016-06-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c:
	Since we now store the data value itself rather than log(value), there
	is no longer a problem running stats while the axes are log-scaled.

	* src/stats.c:  An unreadable line in a data file should not be a fatal
	error in "stats".  Print a warning and keep going.

2016-06-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c demo/piecewise.dem:  Consistent placement of xyplane
	regardless of whether tics or grid lines are present.
	Bug #1809

2016-06-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE):
	Since we now store the data value itself rather than log(value), there
	is no longer a need to replace non-positive values with NaN on input.
	Nonlinear axes part 15

2016-06-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE):
	Only update axis->data_min/max if the point being stored is INRANGE.
	Bug #1804

2016-05-31  Ethan A Merritt  <merritt@u.washington.edu>

	* set/set.c (set_palette):  Disallow "set palette maxcolors 1" because
	this causes divide-by-zero errors during color smoothing.
	Reported originally as an Octave bug
	https://bugzilla.redhat.com/show_bug.cgi?id=1340660

2016-05-27  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/gnuplot.doc:  ^R starts a backward-search through
	the history.  Searches the command history as you type.  Use ^R/^S to
	find the next/previous match.

	* src/history.c (history_find_by_number, history_find,
	history_find_all):  Share the functions for GNU readline and the
	built-in code.  Remove the old specialised code.

2016-05-27  Ethan A Merritt  <merritt@u.washington.edu>

	Nonlinear axes part 14.

	* src/axis.h src/save.c src/set.c src/unset.c src/pm3d.c src/pm3d.h:

	- Turn all the log/delog macros into no-ops, including z2cb.
	This reduces the size of the gnuplot executable by 1-2% and removes
	any behavioral dependence on the axis->log flag in the core code.

	- Repurpose the axis->log flag to special-case nonlinear axes that
	were set up using the "set log" command.  This makes the save and show
	commands report axes as log-scaled if they were set up by "set log"
	but not if they were manually defined using "set nonlinear" even though
	the result is otherwise the same.  It also allows mousing of logscaled
	axes in the svg and canvas terminals.

	The implementation of "set log" has now been almost entirely replaced.
	This should be transparent to users.  I know of only a few exceptions.

	- In some cases the range limits chosen for autoscaled log axes come
	out slightly different with the new implementation.  In most cases this
	is an improvement, but it is possible there are other cases where the
	new autoscaled range is less satisfactory.
	Bug #1590

	- Log scaling proper and choice of log-scale axis tics are now
	separable. This addresses several long-standing bugs, including
	Bug #10 filed back in 2000!  I.e. even if the axis is log-scaled,
	you can still user "set tics <inc>" or "set tics nolog".
	Bug #10 Bug #1250

	- Minor axis tics now work as expected over all logscale axis ranges.
	Bug #1748

	- The new code is slightly slower.  Speed will be recovered in a
	separate patch.

2016-05-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c src/pm3d.h:  Make z2cb() a macro that calls the original
	routine.  This will allow us to replace it cleanly with a no-op later.

	* src/set.c src/unset.c src/axis.h src/command.c src/axis.c:
	Nonlinear axes part 13.
	Re-implement the "set log <axis>" command internally as the pair of
	commands "set nonlinear <axis> via log10(x) inv 10**x; set xtics log".
	Similarly for an explicit base "set log <axis> <base>" and for
	"unset log".  The new code is selected by #define NONLINEAR_AXES 1
	The orignial code is still in place and can be selected either by
	1) ./configure --without-nonlinear-axes
	   (equivalent to #undef NONLINEAR_AXES)
	2) #define NONLINEAR_AXES 0
	   nonlinear axis support selected but "set log" command doesn't use it.

	Note: at this stage the "show" and "save" commands report logscaled
	axes as nonlinear but do not recognize that this is from "set log".
	The next patch set will repair this.

2016-05-26  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c (fn_completion):  Allow filename completion for system
	commands '!' and after pipe symbols '<', '|'.
	Bug #1747

2016-05-25  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/gp_hist.h:  Make (now) internal variables static.

	* src/readline.c:  Use the new readline-compatible functions to access
	the history.

	* src/command.c src/gp_hist.h src/history.c:  Use the new add_history
	function to add items to history.  Remove the old one.

	* src/gp_hist.h src/history.c:  Add functions similar to the GNU
	history library.  These will eventually be used to merge codepaths
	which use GNU readline/history and the built-in readline to ensure
	consistent behaviour.

	* src/command.c (history_command):  The `history !` command replaced
	the last command in the history list by the search result.  That used
	to be the history command itself, but since 2016-03-31 history
	commands are no longer stored in the history.  Now simply re-add
	the search result to the history.  Bug fix.

	* src/syscfg.h src/command.c src/gp_hist.h src/history.c src/show.c:
	New define USE_READLINE instead of a growing list of checks for
	(more or less) GNU readline compatible libraries.  Prepares for
	using WinEditLine on Windows.

	* src/plot.c (main) src/command.c (rlgets)
	src/readline.c|h (readline_ipc):  Move initialisation of
	rl_getc_wrapper from readline_ipc() to main() also for GNU readline.
	Remove the wrapper function readline_ipc.

2016-05-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c:  partial "every" specifiers are not compatible with
	image plots.  Ignore them when figuring out image dimensions.
	Bug #1796

2016-05-23  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/win.trm:  Fix a few format specifiers for POINT members which
	are of type long int.

	* configure.ac:  Auto-detect if --with-readline=DIR refers to GNU
	readline or NetBSD editline.

	* src/win/wtext.c:  When pasting, escape tab characters by ^V instead
	of replacing them by space.
	Bug #1444

	* src/readline.c docs/gnuplot.c:  Ctrl-V disables the interpretation
	of the following key as editing command.  Hence, tabs can now be
	inserted again by pressing ^V TAB.  On Windows, Ctrl-V is not passed
	on to the built-in readline, though, but interpreted as "paste".

	* src/win/wmenu.c src/win/wgnuplib.h:  Use UTF16 "W" APIs to handle
	Unicode.  This affects all menu dialog boxes (open/save, directory,
	input).  It is still assumed that wgnuplot.mnu is encoded using the
	ANSI codepage.  Reformat source while at it.
	Part 5 of wgnuplot Unicode support.
	Patch #727

2016-05-22  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/write_png_image.c:  gdImageDestroy() needed on code paths for
	both error and success.

2016-05-21  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/write_png_image.c:  Add utility routines to encode the png
	image in Base64 for in-line inclusion.

	* term/svg.trm:  If the "standalone" terminal option is chosen, images
	will be embedded as a Base64 byte stream object rather than saved as an
	external *.png file and included by reference.
	Bug tracker item #1135

2016-05-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c:  Use standard file API instead of _lopen and
	friends.

	* src/misc.c (encoding_from_locale):  On Windows, if the current
	encoding cannot be determined from the locale, fall back to deduce
	it from the currently active codepage.  Avoids an error with
	OpenWatcom, which only handles the C locale.

	* src/readline.c src/win/wtext.c src/win/wcommon.h src/win/wgnuplib.h:
	Screen updates during line-editing in wgnuplot are really slow since
	it needs to redraw the line for every character which is printed.  This
	is even more noticeable now that it needs to determine the on-screen
	width of text in order to take care of wide Unicode characters.

	This change improves the speed of screen output by eliminating
	unnecessary intermediate redraws by adding suspend/resume calls to
	several readline functions, which need to print and 'erase' (i.e.
	overwrite) multiple characters.  Screen output is temporarily
	disabled and changes are only saved to wgnuplot's buffers.  Only when
	the operation is finished, the current input line is redrawn.

2016-05-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/text.c (TextUpdateStatus):  Mingw64's swprintf seems to have
	a problem with the %S format.  Use swprintf_s and format %hs instead.
	Bug #1794

	* config/config.mgw:  Add a work-around for the missing swprintf_s
	in MinGW32's library.

2016-05-19  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac:  Make --without-nonlinear-axes option match the help
	message.

	* src/axis.c (clone_linked_axes): Silence warnings generated by testing
	axis mappings at the current extrema (axis->set_m[in|ax]) if it is a
	dependent autoscaled axis.

	* src/command.c (link_command): Nonlinear axes part 12.
	As it stands, bad things happen if an axis ends up linked to another
	visible axis ("set link") and also to a shadow axis ("set nonlinear").
	This patch adds checks to both commands to prevent this from happening.

2016-05-18  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wtext.c src/win/wpause.c src/win/wcommon.h:  Show the current
	encoding in the status bar of the text window.

	* src/win/wpause.c:  Use default GUI font (not the archaic system font).
	Match the size of the dialog box to the actual length of the message.

	* src/win/wtext.c (DragFunc, M_PASTE) src/win/wpause.c:  Make sure to
	use wide character APIs for Unicode windows. Bug fix.

2016-05-17  <ceprio@users.sf.net>

	* term/js/gnuplot_svg.js: Apply screen transform to mouse coordinates,
	so that browser-mediated changes of scale and origin are accounted for.
	In particular this handles the case where the size of an svg image is
	not the same as the object it is embedded in.

2016-05-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot3d.c (get_3ddata):  The 7-column input case of "with vectors"
	was broken by code refactoring (2016-02-29). Clean this up and store
	color information in both head and tail of vector.
	Bug #1793

2016-05-15  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm: Do not read beyond the end of a font spec.

2016-05-13  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/internal.c (GP_MATHERR):  The matherr mechanism is not supported
	by Mingw64 in both 32bit and 64bit mode.  BM: But it is available with
	MSVC, so re-enable it there also for 64bit builds.
	Bug #1791

	* src/config/mingw/Makefile:  Add default path for QT in Mingw64 32bit
	builds.

2016-05-13  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/fit.c (fit_command):  Since memory requirements are linear in the
	number of datapoints, double max_data if we need to enlarge the
	internal buffers.  Remove the associated message.
	Feature Request #444.

2016-05-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (extend_primary_ticrange): Snap logscale range to nearest
	even power if it is already closer than epsilon (a.k.a. "set zero").
	Bug #1590

2016-05-09  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.988

2016-05-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c src/command.c src/mouse.c src/plot2d.c: Where possible,
	use macro nonlinear(AXIS *) rather than #ifdef NONLINEAR_AXES.

	* src/axis.h src/contour.c src/datafile.c src/graph3d.c src/graph3d.h
	src/plot3d.c src/util3d.c src/axis.c src/boundary.c:
	Nonlinear axes part 11.  3D plot axes x, y, z, countours.

	* demo/all.dem demo/nonlinear5.dem:  logscale z with contours

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 4 - File APIs.

	Windows C runtimes do not handle UTF-8.  We work around this
	restriction by using the "wide" (UTF-16) variants of the API and
	translating from the internal encoding to UTF-16 when required.

	* src/win/winmain.c (win_fopen) src/syscfg.h:  Wrap calls to fopen()
	in a new routine win_fopen() on Windows which uses _wfopen().

	* src/win/command.c (do_system): Use _wsystem() instead of system().

	* src/win/winmain.c (fake_popen, fake_pclose):  Handle encodings by
	using _wsystem().

	* src/stdfn.c (opendir, closedir, readdir, rewinddir):  Handle
	encodings by using UTF-16 internally.  Convert search results to a
	byte encoded format according to `encoding`.  This most notably brings
	encoding/unicode support for tab-completion on the command line.

	* src/external.c|h (DLL_OPEN):  Handle encodings for the file name of
	external libraries.

2016-05-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h (intNaN) src/axis.h (invalid_coordinate):
	If an expression returns "undefined" or NaN inside a function returning
	a real then the return value itself can be set to NaN. Inside a function
	returning an int, as for example the terminal coordinate mapping
	functions, this does not work. Now we define an integer equivalent
	intNaN with leading bit 1 and all trailing bits 0 (max negative value in
	two's complement representation).  Most callers can test via a generic
	macro:  if (invalid_coordinate(x,y)) ...

	* src/graphics.c:  Filter out invalid coordinates produced by axis
	mapping functions.  As an example this fixes bad postscript output
	produced by nonlinear1.dem.

	* src/axis.h:  New macro nonlinear(AXIS *) becomes a noop if configured
	without support for nonlinear axes.

	* src/save.c:  "save" command can use a loop to save the log status of
	all axes rather than running through them in-line one by one.

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 3 - GUI.

	* src/win/wtext.c (M_PASTE):  Always ask the clipboard for UTF-16
	encoded text.  This is always possible since Windows will convert
	other encodings (OEM/ANSI) for us.

	* src/win/wtext.c (TextCopyClip):  Now that strings for display
	are stored internally in UTF-16 format, use Unicode to copy to
	clipboard, too.

	* src/win/wgnuplib.h src/win/wgraph.c src/win/winmain.c src/win/wtext.c:
	Drag'n'drop handles Unicode encoded file and directory names.

	* src/win/winmain.c (Pause) src/win/wpause.c src/win/wcommon.h
	src/win/wgnuplib.c|h: Create pause dialog box as Unicode window.
	Pause() will do the text conversion according to current encoding.

	* src/command.c (pause_command):  Converting the string encoding
	is now only required for console mode gnuplot.

	* src/win/wmenu.c:  Temporary fix of string type of argument for
	MessageBox.

2016-05-07  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/watcom/Makefile:  Fix compilation by adding definitions
	of version and patchlevel to flags.

	* config/config.oww:  Add some more defines for function names.

	* src/win/wgnuplib.h src/win/winmain.c:  Remove old compiler
	specific checks which are no longer required.

	* src/win/wgnuplib.h src/win/wgraph.c src/win/wpause.c
	src/win/wprinter.c src/win/wtext.c:  No need to have functions use
	WINAPI (stdcall) calling convention.  Remove define WDPROC.

2016-05-06  Ethan A Merritt  <merritt@u.washington.edu>

	* term/emf.trm:  Better (though still not perfect) estimation of the
	space occupied by a UTF-8 string. Till now each byte in a multi-byte
	character was being counted as occupying space.
	Bug #1787

	* src/term.h:  The above change means that estimate.trm must be
	included earlier in term.h than emf.trm.  Bump it to the top.

	* src/axis.h src/gadgets.c (apply_pm3dcolor) src/pm3d.c (z2cb):
	Use existing macros axis_do_log() and friends rather than doing
	hard-coded calculations with axis->log_base.

	* src/graph3d.c (draw_3d_graphbox): Fix think-o in revision to 3D axis
	label placement - should not multiply the constant offset by tic scale.
	Bug #1790

2016-05-06  Bastian Maerkisch  <bmaerkisch@web.de>

	Let wgnuplot handle Unicode (not console mode gnuplot)
	Patch #727

	Part 2 - Screen Output.

	* src/win/wtext.c src/win/screenbuf.c|h src/win/wgnuplib.h:  All output
	to the terminal window is stored in a buffer.  Change the internal data
	type of this buffer from "char" to "WCHAR".  This enables support for
	UCS-2 (i.e. BMP) characters.

	* src/win/wtext.c (TextPutCh):  All of gnuplot's screen output during
	line-editing passes through this function.  Make sure to properly
	convert codes to UTF-16 for storage in the buffer (includes UTF-8 and
	S-JIS sequences).

	Part 1 - Input.

	* src/text.c (WM_CHAR) src/win/wcommon.h src/win/wgnuplib.c:  Use "W"
	API variant to create text window to receive UTF-16 codes in WM_CHAR
	messages.  Convert them to the `encoding` set by the user for internal
	storage.  Handles basic multilingual plane (BMP) only.

	* src/misc.c|h (encoding_from_locale init_encoding) src/plot.c
	src/set.c:  When using the built-in readline, initialize the
	`encoding` according to current locale.  This is required since
	the behaviour of the built-in readline depends on `encoding` for
	utf8 and sjis.  Do this by extracting the code which handles
	`set encoding locale` to new functions in misc.c.

	* src/win/winmain.c|h (UnicodeText AnsiText WinGetCodePage
	WinGetEncoding) src/command.c src/win/wcommon.h src/win/wgraph
	src/win/wgdiplus.cpp:  Move code to convert a text from a given
	encoding to UTF-16 (UnicodeText) from wgraph.c to winmain.c.
	Extract mapping of gnuplot's encoding values to a Windows
	codepage (WinGetCodePage).  Move the inverse code from command.c
	to WinGetEncoding in winmain.c.  Implement AnsiText to convert
	from UTF-16 to a byte encoded string.

2016-05-05  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/readline.c src/util.c|h:  The internal readline already
	handles UTF-8 multi-byte sequences.  Extend that mechanism
	to S-JIS. Likely most useful on Windows.
	Patch #729

2016-05-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c:  "rotate parallel" was not being saved correctly.

	* src/graph3d.c:  Revise placement of axis labels in 3D plots.
	Remove dead code.  Use same axis-to-label gap on both x and y.
	Fix inconsistent use of h_tic or v_tic to define gap size.
	Bug #1781

2016-05-01  Matthew Halverson  <mhalver@users.sf.net>

	* term/svg.trm: Do not flag svg terminal as TERM_BINARY.

2016-05-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (link_command): Do not recalculate axis ranges after
	"unset link" for an axis that was not linked anyhow.

	* src/axis.c (parse_range):  The in-line range for a nonlinear axis
	must be transferred to its corresponding primary axis.

2016-04-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c (call_gnuplot):  More robust handling of undefined value
	returned by function being fit.

	* src/datafile.c (df_generate_pseudodata): Nonlinear axes part 10.
	Sampling along '+' should track linear/nonlinear state of primary
	plot axis.

2016-04-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/plot2d.c src/set.c src/axis.c:
	Nonlinear axes part 9.
	Handle nonlinear polar axis r.  This completes support for 2D axes.

	* src/internal.c (f_assign):  In most places any numerical array index
	is accepted, but inside an assignment non-integral indexes caused an
	error.  Now the index is taken as floor(value) as it is elsewhere.

2016-04-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/color.c src/command.c src/mouse.c src/parse.c
	src/plot2d.c src/pm3d.c src/save.c src/unset.c demo/nonlinear4.dem:
	Nonlinear axes parts 7 and 8
	Handle nonlinear x2, y2 axes (2D) and cb axis (2D and 3D).

2016-04-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/set.c src/save.c:
	Nonlinear axes part 4
	New command "set tics logscale" lets the new nonlinear axis code use
	the old logscale tic placement code.  Thus the effect of the old command
	"set log x" can be replicated by
	    set nonlinear x via log10(x) inverse 10**x
	    set xtics logscale

	* docs/gnuplot.doc:  Nonlinear axes part 5 (documentation).

	* demo/all.dem demo/probably_tux.demo
	demo/nonlinear1.dem demo/nonlinear2.dem demo/nonlinear3.dem:
	Nonlinear axes part 6 (demos)

2016-04-23  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac src/axis.h:  Preparation for nonlinear axis code.
	Nonlinear axes part 1
	New configuration option --without-nonlinear-axes will allow to disable
	code that depends on #ifdef NONLINEAR_AXES.

	* src/graphics.c (adjust_offsets) src/plot2d.c (eval_plots):
	Revise tests for linked axes to distinguish between "set nonlinear"
	and "set link".

	* src/axis.c src/axis.h src/command.c src/mouse.c src/plot2d.c src/save.c
	src/save.h src/set.c src/show.c src/tables.c src/tables.h src/unset.c:
	Nonlinear axes part 2
	New command "set nonlinear <axis> via f(axis) inverse g(axis)"
	At this stage only the x and y axes are supported.

	* src/axis.c src/plot2d.c:
	Nonlinear axes part 3
	When plotting functions on a nonlinear axis, choose the samples evenly
	along the linear axis it is linked to.

2016-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.h src/util3d.c:  Move macro map_x3d() and friends from
	a shared header to the only file where they are used.

2016-04-21  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* win/gnuplot.iss: Restore <BOM> to indicate utf-8 enconding.
	Reverts change 2016-04-10

	* config/mingw/Makefile:  Add warning that it is required to use the
	unicode version of Inno Setup Compiler rather than the standard version
	because gnuplot.iss is now encoded utf-8 with BOM.

2016-04-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image):  There are two paths through the
	code that extracts image data from an ascii input stream, depending
	on whether the x or y coordinate varies fastest.  The fix for Bug #1767
	corrected one path but broke the other.  Now we fix the broken path so
	that both are working, at least on test data.
	Bug #1782

2016-04-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util3d.c (apply_3dhead_properties) src/util3d.h src/hidden3d.c
	src/graph3d.c:  After consolidation of 2D and 3D axis initialization
	into axis_set_scale_and_range() (3-Mar-2016) there is no longer any
	reason to have separate 2D and 3D versions of apply_head_properties
	for arrows.

	* src/graph3d.c (get_arrow3d):  Fix typo introduced in 5.0 that caused
	arrows defined by "from ... rto ..." to be mangled in 3D plots.

	* src/fit.c (fit_command): Replace misleading use of SECOND_Z_AXIS.

	* src/fit.c (fit_command): Avoid using globals x_axis/y_axis/z_axis.

	* src/axis.c:  Disallow commands affecting z2, e.g. "set log z2"

	* src/graphics.c (attach_title_to_plot): Bad things happen if you try
	to attach a title to the end point of a plot with no points (NODATA).

2016-04-15  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc:  Edits to description of dashtype and pt <char>.

	* src/term.c:  Windows requires mode "wb" for pipe output, BSD requires
	"w" (no "b" character), linux will accept either.
	Bug #1756

2016-04-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (refresh_bounds):  Patch from 2016-01-18 to fix bug
	#1709 introduced a regression.   Minimal example:
		'set log x; plot '-'; replot'
	failed to delog/log the updated min/max axis limits.
	Bug #1774

2016-04-10  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* win/gnuplot.iss: Remove <BOM> marker from start of file, since this
	makes autoconfigure fail on MinGW. >>> NB: Reverted 2016-04-21

2016-04-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/util.c (existdir) src/misc.c (recursivefullname):  Use Windows
	implementations of getdir() and friends in stdfn.c instead of platform
	specific code (or the ones provided by OpenWatcom).

2016-04-06  Ethan A Merritt  <merritt@u.washington.edu>

	* term/emf.trm:  Enhanced text mode was over-zealously skipping new
	set_font requests if successive writes requested the same font+property.
	This caused it to lose italic/bold/etc properties.
	Prevent this by clearing the font history at the end of each enhanced
	text write.
	Bug #1772

2016-04-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image):  There is not currently a fool-proof
	mechanism for inferring image dimension from a set of x/y/z coords read
	as ascii data.  But we can do better than transposing the row/column
	count by mistake.  Note that this same transposition was previously
	fixed for the case of ascii matrix data input (Bug #1654)
	Bug #1767

2016-04-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (eval_link_function):  Test for "undefined" status on
	return from link evaluation.

2016-04-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/graphics.c term/qt.trm:  The qt terminal output
	for "with image pixels" suffers from bad inter-pixel artifacts. This
	seems due to use of term->fillbox() rather than term->filled_polygon().
	The qt fillbox routine is probably fixable but for now we add a
	terminal flag TERM_POLYGON_PIXELS that tells the image code to use
	polygons instead.

2016-03-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c (rlgets) docs/gnuplot.doc:  Do not add lines to
	command line history which start with a history command.
	Bug #1763

2016-03-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/history.c (add_history):  The documentation states that
	"set history N" will save N lines on history to a file on program exit.
	This is true in practice for both the readline-based history code and
	the built-in history code.  However the builtin code also truncates and
	renumbers the active history list in the current session.  This makes
	the numbers essentially useless once the list reaches N entries.
	Remove this unwanted secondary effect in the built-in version.
	Bug #1763.

	* src/axis.c (gen_tics):  Promote logscale base from 0 to 10 on entry
	rather than later having to test for nonzero each time.

2016-03-30  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  Use local version of gnuplot to generate
	plots of the tutorial.

	* config/mingw/Makefile:  Collecting all required DLLs for a Windows
	binary package can be tedious.  When activated via the DLLS=1 option,
	we now try to at least automatically copy all DLLs from Mingw-w64.
	Applies to targets `install`, `installer`, and `zip`.

2016-03-29  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wmenu.c:  Remove the alternative code which would use a
	modified file-open-dialog to select a directory.  This wasn't working
	since Vista anyway and was never included in any official binary.

	* src/command.c:  The Windows specific winsystem() has been deactivated
	for a long time. Remove it.

	* src/readline.c:  The return value of the *_getch() functions should
	be int, not char, in order to avoid confusion between EOF (-1) and
	(char)0xff.
	Bug 1558

	* src/qtterminal/qtconversion.cpp:  Avoid use of isnan() in C++ code.
	The C++11 standard has it as a function in the std namespace, whereas
	older compilers provude it as a macro or as ::isnan(). Use (var != var)
	instead.

2016-03-25  Ethan A Merritt  <merritt@u.washington.edu>

	* axis.c (eval_link_function) graphics.c (plot_lines):
	If map_x() or map_y() trigger eval_link_function(), it may return NaN.
	In this case the mapped coordinate value is nonsense and the "undefined"
	flag is TRUE.  Check this flag to avoid drawing spurious line segments
	in plot with lines.

	* src/axis.c src/axis.h src/plot2d.c:  New routine init_sample_range().
	Always use SAMPLE_AXIS to hold bookkeeping values for function sampling,
	rather than sometimes using a real axis, sometimes a parametrics axis,
	and sometimes SAMPLE_AXIS.

2016-03-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (array_command):
	Sanity check: array name must start with a letter.

	* src/command.c (command is_array_assignment):
	Change the order of parsing: check for array assignment before trying
	to interpret the first input token as a command keyword.  E.g.
	"array q[2]; q[1] = 1" must not interpret the initial 'q' as shorthand
	for 'quit'.
	Bug #1762

2016-03-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile:  The proper way to invoke shell commands in
	GNU makefiles is via $(shell ...).  Using backticks relies on the
	shell doing the replacement and is not always what we want.
	Bug #1752

2016-03-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c src/datafile.h src/unset.c: The df_fgets() change
	4 days ago caused a regression because input buffer initialization was
	missed in some paths.  Rename the shared buffer to df_line.
	Move the initialization into a new routine df_init() called via
	reset_command() on program entry.
	Bug #1758

	* src/axis.c (clone_linked_axes): If an endpoint of a linked axis was
	exactly zero, the forward/reverse link check would complain because of a
	spurious divide-by-zero.  Now we test for this case separately.

	* src/graphics.c (do_plot plot_points):  The "dots" plot style is
	implemented internally as pointtype 0, although this was never stated in
	the documentation. Apparently some users discovered and used pointtype 0
	routinely and were unhappy that it stopped working in version 5.
	Neither the original behavior nor its removal was intentional, but it is
	easy enough to restore the pre-version 5 behaviour so we do it now.
	Bug #1733

2016-03-20  Matthew Halverson <mhalver@users.sf.net>

	* src/term.c (term_set_output):  Open pipes in binary mode if the
	terminal has the TERM_BINARY flag set.
	Bug #1756

2016-03-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  If pointtype PT_CHARACTER is the default for a plot
	then allow text options like "tc rgb 'foo'" in the plot command.

	* src/command.c src/eval.c src/parse.c:  Disentangle gpfree_string() and
	gpfree_array().  Most callers should avoid the latter.

	* src/graph3d.c src/graphics.c src/hidden3d.c:  "pt variable" point
	types were off-by-1 on output.
	Bug #1754

	* src/datafile.c src/datafile.h src/datablock.c:
	There was already a routine df_gets() in datafile.c that safely reads in
	an arbitrary length line of data.  Split this into a public function
	df_fgets() and a private wrapper df_gets().  Share the public function
	with data input in datablock.c:datablock_command.  This removes the
	limit of 1024 characters per line read in to a datablock.

2016-03-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp:  Revise "set term qt <N> close" so that
	1) It closes window with id N but leaves the current window id unchanged
	2) It executes the command immediately rather than queueing it
	Bug #1753

	* src/qtterminal/QtGnuplotWindow.cpp:  Do not set the DeleteOnClose
	attribute of plot windows.  This avoids an error message if you send a
	new plot after explicitly closing the current plot window.
	Bug #1753 #1554

2016-03-13  Ethan A Merritt  <merritt@u.washington.edu>

	src/axis.h src/mouse.c src/save.c: Minor code cleanup for linked axes.

2016-03-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_link) src/save.h src/show.c:  New routine so that
	"show/save link" is distinct from "show/save xrange".

2016-03-09 Allin Cottrell  <cottrell@wfu.edu>

	* term/aquaterm.trm: Incorrect argument type to abs() or fabs().

2016-03-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/axis.c src/command.c src/unset.c src/set.c:
	Add a new field axis->linked_to_secondary so that the handling of linked
	axes is more symmetric.  Now you can do "set [*]range" on either end of
	the linkage and the min/max/etc for the other end of the linkage will be
	recalculated automatically.

	* src/axis.h src/axis.c src/boundary.c src/graph3d.c:  Replace
	AXIS_SETSCALE(AXIS_INDEX, ) and axis_set_graphical_range(AXIS_INDEX, )
	with a single combined routine axis_set_scale_and_range(AXIS *, ).

	* src/axis.c src/graphics.c:  More cleanup and generalization of linked
	axis code.

2016-03-07  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* term/tkcanvas.trm src/win/wgnuplot.mnu:  Typos.

	* docs/term-ja.diff docs/gnuplot-ja.doc
	src/win/wgnuplot-ja.mnu win/README-Windows-ja.txt:
	Sync Japanese documentation to doc version 1.982

2016-03-06  Bastian Maerkisch  <bmaerkisch@web.de>

	* config/mingw/Makefile win/gnuplot.iss:  Support MSYS2/Mingw-w64 as
	well as MSYS/MinGW and compilation using clang.  Ability to build
	64bit or 32bit zip package and installer.  New make flags MINGW64,
	CLANG, COLOR-GCC, and M32.  Default to 64bit builds when using
	Mingw-w64, use M32 flag to select 32bit builds.

	* src/win/wcommon.h src/win/wgdiplus.cpp src/win/wgnuplib.h
	src/win/wgraph.c:  Fix several issues found by clang, with the most
	important being wrong delete's in wgdiplus.cpp.

	* scanner.c (get_num):  strtoll() on Windows may consume zero
	characters causing an infinite loop for the input "0x".
	Bug #1745

	* src/win/wgraph.c (MakeFonts, TryCreateFont):  Do not rely on GDI
	supplying a sensible substitute when a requested font is not
	available.  Instead, fall back to the user-supplied default font or
	the terminal's default font if the former is not available.
	Bug #1669

2016-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.c (gp_cairo_set_linewidth):  Change the
	minimum linewidth supported by pdfcairo to match the other cairo
	terminals.  Reduce all of them to 0.20 pts (was 0.25 or 0.50).

	* src/axis.c src/graphics.c:  More cleanup of linked axis code.

2016-03-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (get_data):  Introduction of "pt variable" increased the
	maximum number of data columns for "with points" to 5.  If the plot
	command really does consume 5 columns, fine.  But if get_data returns
	5 columns for a simple 'plot with points' command, we have to ignore the
	extra columns gracefully.
	Bugfix

	* src/axis.c src/axis.h src/eval.c src/eval.h:
	Move eval_link_function() from eval.c to axis.c

	* src/axis.c src/axis.h src/eval.c src/eval.h src/command.c
	src/graph3d.c src/graphics.c src/mouse.c src/plot2d.c src/set.c:
	Revise clone_linked_axes() and eval_link_function() to use
	(AXIS *) pointers rather than AXIS_INDEX.

	* src/axis.c (clone_linked_axes): Warn that the program cannot
	currently handle via/inverse mapping of linked logscale axes.
	Bug #1736

2016-03-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (link_command): Accept "unset link <specific axis>"
	(regression since 5.0).

2016-03-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_assign): Sanity check for array index that
	is found to be zero during expression evaluation.

	* graphics.c (map_position_double): Fix stupid typo that tried to map a
	linked y axis through the x mapping function. This always mis-placed
	objects and labels whose position is given in terms of y2 whenever y2 is
	linked to y1. Furthermore placement on either x2 or y2 could be wrong if
	the most recent plot did not use that same linked axis.

2016-02-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gp_types.h src/graph3d.c src/graphics.c src/misc.c src/plot2d.c
	src/plot3d.c src/save.c src/term_api.h src/hidden3d.c docs/gnuplot.doc:
	Add support for "pointtype variable".  If there are multiple "variable"
	properties in the same [s]plot command, the order of columns in the
	using spec is
		[s]plot DATA using x:y:z:pointsize:pointtype:color
	"pointtype variable" is only allowed with "points" or "linespoints".
	Only numerical point types are possible; if you want variable character
	pointtypes use "with labels" instead.

	* src/stats.c:  "array A[n];  stats A" should default to single-column
	analysis (equivalent to stats A using 2) since the properties of the
	index are uninteresting.

2016-02-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util.h src/util.c (common_error_exit):  Move the code that resets
	various gnuplot state variables after an error from int_error() to a new
	common path routine common_error_exit() shared with os_error().  Ensure
	that GPVAL_ERRNO and GPVAL_ERRMSG are set in both cases.
	Bug #1741

2016-02-26  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wgnuplot.mnu: Update the Windows GUI menu definitions a
	bit.

2016-02-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c (parse_assignment_expression): In order to support
	assignment to an array element (e.g. A[i] = foo) a slot for the
	array index is always pushed onto the evaluation stack even if no
	array is involved.  However this slot was not being initialized to
	a valid PUSHC descriptor, so "show at" and certain other
	operations could fail even though they don't really care about
	this dummy slot.  Now we initialize it to report that a NOTDEFINED
	variable was pushed.

	* src/command.c src/eval.c (push) src/internal.c src/parse.c: Back
	off to the original idea that bare array names are not legal for
	expression evaluation.  The previous work-around of copying the
	entire array on every reference imposed a huge overhead for
	accessing the value of an individual entry. The previous code is
	left in place via #ifdef ARRAY_COPY_ON_REFERENCE to serve as a
	model for later expansion to support some subset of operations
	requiring a copy (e.g. simple assigment B=A or concatenation C =
	A.B).

2016-02-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/eval.c (push): Evaluation of expressions that
	contain a bare array name is problematic because any attempt to
	access the actual array contents during or after evaluation
	requires that they be duplicated on push() and freed
	later. Freeing is the tricky part, particularly if the array
	contains STRING elements.  This patch seems OK in preliminary
	testing, but at this point the only only possible operations are
	indexing and assignment. If other operations are added later they
	may reveal inadequacies in the alloc/free tracking.

2016-02-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.h:  Use local events to avoid warnings about
	incompatible linkage on Windows.

	* config/mingw/Makefile:  Use MinGW's own implementations of
	printf etc. which are C99 compliant.

	* src/win/wtext.h:  Avoid warnings about the re-definition of
	popen/pclose with fake pipe support using MSYS2/Mingw-w64.

	* src/wxterminal/wxt_gui.cpp|h:  Fixes to make the wxt terminal work
	with wxWidgets 3 on Windows:
	1) Disable wxWidgets debug assertions in release builds. This does
	not solve the problem with a setlocale(LC_ALL, NULL) == "C" test in
	wxLocale, but at least gets rid of the warning.
	2) Flush the cairo surface before blitting the internal bitmap to
	screen.

	* src/win/wgraph.c:  Include direct.h for _chdir().

	* term/tkcanvas.trm (TK_init):  TK_image requires WRITE_PNG_IMAGE to be
	defined.

2016-02-12  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/tkcanvas.trm:  More fixes suggested by clang warning messages.

2016-02-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/wxterminal/wxt_gui.cpp (wxt_raise_window):  On Windows, only
	Restore() the window if it is iconized.  Fixes accidental resize of
	maximized windows.

	* term/tkcanvas.trm (TK_vector):  Fix for vector commands without
	preceeding move as e.g. in "with line lc variable".

	* src/fit.c:  Fix order of using specs printed to log-file.
	Bug #1657

	* docs/term-ja.diff:  Remove japanese documentation for sun, next, and
	openstep terminals which were removed on 2016-01-11.

2016-02-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c src/axis.h src/plot3d.c: Remove dead code and old comments.
	Comment out the call to AXIS_WRITEBACK that appears to be a vestige from
	a code reorganization in the version 3.8 era. There are no other users
	of this macro.

	* src/set.c src/show.c:  set/show arrow length wants only a single
	coordinate, not three.  (See patch of 2015-12-19).

2016-02-10  Bastian Maerkisch  <bmaerkisch@web.de>

	* term/dumb.trm:  Include stdint.h to make sure that uint32_t is defined
	(MSVC).

	* config/config.nt config/config.nt:  Sync with output of configure.

	* config/mingw/Makefile:  Use gnuplot's default settings to generate
	plots for the documentation.

	* configure.ac:  Cairo terminals require pango 1.22
	(pango_layout_get_baseline) now.  Consequently they do no longer build
	on RH5 etc.

2016-02-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (print_command):  Do not allow printing a datablock into
	itself, which could cause infinite recursion.

	* src/stats.c: Reset data input mode to 2D at start of stats command.
	This produces consistent results for "stats FOO matrix", even if the
	previous command was "splot".
	Bug #1739

2016-02-08  Anton Gladky <gladk@debian.org>

	* term/tkcanvas.trm:  Replace statements of the form
	fprintf(gpoutfile, string) because they trigger a compiler warning/error
	with  -Werror=format-security.

2016-02-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c src/parse.c src/parse.h:

	Add bookkeeping to allow 'plot', 'stats', and 'fit' commands to work
	on data stored in an array.
	    array A[200]
	    do for [i=1:200] { A[i] = sin(pi * i/100.) }
	    plot A title "sin(x) in centiradians"

	*  demo/array.dem docs/gnuplot.doc:
	Documentation and demo for use of arrays in 'fit' and 'plot'.

	* src/command.c src/save.h src/save.c (save_array_content):
	Dump content of arrays in a "print" or "save" statement, analogous to
	printing/saving content of user-declared variables.

2016-02-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/command.h src/eval.c src/eval.h src/gp_types.h
	src/internal.c src/internal.h src/parse.c src/tables.c src/util.c
	src/save.c:  Basic support of arrays.

	Introduce support for arrays as an indexed list of variables.
	An array must be declared before its entries can be accessed.
	Each entry A[i] acts as a normal gnuplot user variable (integer, string,
	complex).  Variables held in an array need not be of the same type.
	    array A[2] = [ "apples", "oranges" ]
	    set title sprintf("Comparing %s and %s",A[1],A[2])
	    plot for [n = 1:2] A[n] title A[n]

	* docs/gnuplot.doc demo/array.dem demo/all.dem demo/html/*:
	Documentation and demo for basic use of arrays.

2016-02-04  <gbmiquel@users.sf.net>

	* src/gadgets.c (clip_line):  Use (double) rather than (int) for
	intermediate coordinates used in line clipping.
	Bug #1614

2016-02-04  Joachim Wuttke  <jwuttke@users.sourceforge.net>

	* term/tkcanvas.trm:  Replace old (pre-1999) tkcanvas.trm with a
	rewrite from Joachim Wuttke  <jwuttke@users.sourceforge.net>
	and Bastian Maerkisch  <bmaerkisch@web.de>

	This new driver has only partial support for scripting languages other
	than tcl and has unreliable support for image data, but it is strictly
	better than the 1999 terminal.

2016-02-03  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* config/mingw/Makefile:  Pass through MAINVERSION and PATCHLEVEL
	into the MinGW build process.

2016-02-03  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/help.c:  Be less aggressive about suppressing help index entries
	that might share a leading substring.
	Bug #1734

2016-02-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c (create_and_set_int_var):  Some of the user-accessible
	variables created by the stats command are necessarily integral (e.g.
	STATS_records, STATS_columns).  Create these using Ginteger() rather
	than Gcomplex().

	* src/graphics.c (finish_filled_curve):  The routine fill_between()
	passes in an extra-long array whose last element stores above/below
	flag.  We must not try to test this flag on other processing paths
	because for them it is an out-of-bounds access (found by valgrind).

2016-01-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp:  Another pair of fixes for wxt font
	processing.  Prevent a memory leak from temporary storage of the
	fontname.  Initial font used by enhanced text processing should be the
	most recently set font, not the original one from "set term".

2016-01-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_missing): Remove minor memory leak if
	"set datafile missing '*'" is called repeatedly.

	* src/boundary.c src/graph3d.c src/graph3d.h src/graphics.c
	src/graphics.h src/plot2d.c src/plot3d.c:
	    {s}plot ... title "foo" at <xpos,ypos>
	New option for customized placement of individual key entries.

	* docs/gnuplot.doc demo/custom_key.dem:
	Documentation and demo for customized placement of key entries.

2016-01-26  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/wxt.trm: Previous fix for parsing font "name,size" was incorrect.
	Bug #1731

2016-01-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotScene.cpp:  Only toggle plots on left-click
	(not center- or right-click).

	* src/qtterminal/QtGnuplotScene.cpp:  Use explicit color Qt::lightGray
	to gray out toggled key entries.

2016-01-21  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* .../.cvsignore:  Include more of the auto-generated files in the lists
	of things for CVS to ignore during update/diff/status/commit/etc

2016-01-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c (refresh_bounds):  The intent of this routine is to keep
	the previous axis range if the user has not changed autoscale settings.
	It wasn't working.  I'm not sure the revised code is doing quite the
	right thing either, but at least it correcly handles the test case in
	Bug #1709.

2016-01-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (process_image): This routine handles both 2D and 3D
	images so it must not try to access fields only present in the 2D case
	(in this case plot->x_axis and friends).
	Bug #1718

	* term/wxt.trm (wxt_options):  Fix regression, fontsize ignored if it
	is the only thing in the requested font string (e.g. font ",12").
	Bug #1731

2016-01-16  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	Fix "make distclean" problems caused by a bug in automake, which
	in turn is triggered by docs/doc2wxhtml requring src/version.c.

	* configure.ac (VERSION_MAJOR, PATCHLEVEL): Export these from
	shell scripts to config.h.
	(PATCHLEVEL): Export to configure script.

	* docs/windows/doc2html.c (convert): Replace references to
	version.c constants by macros in config.h.

	* docs/Makefile.am (doc2wxhtml_SOURCES): Remove use of version.c.

	* term/djsvga.trm (DJSVGA_set_font): Somebody overlooked this call
	of graph_error.

2016-01-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/eval.c (real) src/standard.c (f_int):  Special case handling of
	NaN or undefined values during expression evaluation was lost if the
	expression passed through an intermediate integer value. For example
	int(NaN) evaluated to "-2147483648" rather than "NaN" or "undefined".
	Add special case checks to the integer evaluation path.

2016-01-12  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm: Add support for version 5 custom dashtypes.

2016-01-11  Ethan A Merritt  <merritt@u.washington.edu>

	* term/sun.trm: The SunView windowing system was phased out after
	Solaris 2.2 (end of life 1999). Remove the corresponding terminal
	from the gnuplot distribution.

	* configure.ac configure.vms config/makefile.dj2 config/makefile.emx
	docs/doc2texi.el docs/Makefile.am PORTING src/makefile.all
	src/makefile.awc src/term.c src/term.h:  Remove references to sun.trm.

	* docs/gpcard.tex (move to subdirectory docs/old/) Makefile.am
	makefile.os2 mingw/Makefile MacOSX/createdist.sh:
	gpcard is horribly out of date to the point of holding only historical
	interest.  Remove it from the build rules.  Also remove makefile.dst
	which was superseded by autotools + Makefile.am 15 years ago.

2016-01-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp: "set term qt <num> title 'foo'" was
	incorrectly changing the title of the previous plot window in addition
	to that of the new plot window.

	* src/internal.c:  Error messages should distinguish between an
	uninitialized variable and an improper variable type.

	* configure.ac: Do not assume that wxwidgets uses the gtk2 toolkit
	(it might use gtk3 or on OSX it might use cocoa).

	* src/pm3d.c: Account for interpolated quadrangles when applying a pm3d
	lighting model.

	The NeXT and OpenStep platforms per se are 15-20 yrs dead and gone.
	Aquaterm is the evolutionary successor of openstep.

	* src/NeXT src/OpenStep term/next.trm term/openstep.trm configure.ac
	m4/next.m4: Remove the drivers proper.

	* src/Makefile.am src/axis.h src/makefile.all src/makefile.awc
	src/stdfn.h src/syscfg.h src/term.c src/term.h src/util.c
	src/variable.c term/cgm.trm term/driver.h docs/Makefile.am
	docs/doc2texi.el: Remove references to the next and openstep terminals
	and remove code conditional on NEXT.

2016-01-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c:  The fit command should gracefully accept data files known
	to contain column headers.  Previously this sequence would fail:
	   set key autotitle columnhead;  fit ...

	* src/stats.c:  Make data errors in stats command non-fatal,
	i.e. int_warn() rather than int_error().

	* src/internal.c:  Store return value from system("") in GPVAL_ERRNO.

2016-01-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp:  Several components of the gtk2 API have
	been deprecated, which prevents compiling the wxt terminal using wxt3
	or indeed recent versions of gtk2.
	1) Replace handle->window with gtk_widget_get_window(handle).
	2) gdk_window_foreign_new() (used only by --enable-raise-console) no
	longer exists. Make this code conditional on (GTK_MAJOR_VERSION == 2).

2015-12-31  Ethan A Merritt  <merritt@u.washington.edu>

	* term/post.trm (PS_dashtype): Prevent overflow of the custom
	dash pattern array, leading to possible corruption of the output
	postscipt file.

	* src/set.c src/show.c src/term.c:
	New command "set mono linetype cycle N" acts analogously to
	"set linetype cycle N".  If a monochrome linetype N is requested
	where N is larger than any defined monochrome linetype, then
	substitute a corresponding linetype in the range [1:cycle].

2015-12-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/term.c src/set.c (init_monochrome):
	Move this routine from set.c to term.c

	* term/lua.trm: Treat "set term tikz monochrome" as
	"set term tikz; set monochrome".

	* term/lua/gnuplot-tikz.lua:  Add \SetUnicodeOption{mathletters}
	to document produced by "set term tikz standalone".  This handles
	utf-8 encoded greek letters in gnuplot labels and titles.

2015-12-29  Ethan A Merritt  <merritt@u.washington.edu>

	* term/wxt.trm (wxt_options): If a terminal setting option is not
	recognized, issue a warning rather than exiting early from terminal
	initialization. Incomplete initialization can cause segfaults later.

	* src/show.c: Show current state of "set monochrome" option.

	* src/unset.c (unset_monochrome): Clear monochrome flag in current term.

	* src/misc.c (parse_dashtype lp_parse) docs/psdoc/ps_symbols.gpi:
	Allow "dashtype 0", which is treated as LT_AXIS.
	Modify ps_symbols demo script to select dashed lines using version 5
	syntax ("dashtype N") rather than version 4 syntax ("linetype N").
	Bug #1724

2015-12-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp (qt_waitforinput):  This routine is called
	to receive both external (e.g. mouse) events and input from stdin.
	In cases where we only care about events we must not perturb the state
	of stdin.  One such case was missed, leading to a character being
	dropped from the stdin stream depending on event timing.
	Bug #1559

2015-12-24  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* src/qtterminal/QtGnuplotScene.cpp: On Mac OS X, the Qt::KeypadModifier
	bit of event->modifiers() is *always* set when an arrow key is pressed.

2015-12-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot2d.c (parse_plot_title) src/plot3d.c
	src/gadgets.c src/gadgets.h docs/gnuplot.doc:
	Consolidate 2D and 3D code for "[s]plot ... title <options>" into a
	single routine parse_plot_title.

2015-12-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/axis.c (get_position_default)
	src/setshow.h src/show.c (show_position) src/set.c (parse_label_options)
	src/save.h src/save.c (save_position)
	src/jitter.c src/plot2d.c src/plot3d.c:

	Distinguish internally between 1D positions (single coordinate),
	2D positions (only x,y) and 3D positions (x,y,z).
	This removes the ambiguity from commands like
	    plot foo with labels point offset 1,1,  func(x)
	Is func(x) a z offset (probably not) or is it a 2nd plot?
	Previously the get_position() code ate it as a z offset, but now the
	parsing is unambigously a 2D offset followed by a separate plot element.

2015-12-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_variables__sub):  Do not write ARGn variables to
	save file.

2015-12-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (copy_or_invent_formatstring): Too many fixed precision
	decimal places, all zero, could be generated by a plot sequence like
	    set log y; plot [1:100] exp(-x)
	limit the number of decimal places to 10.
	related to bugs #1496 $1518

2015-12-10  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/qtterminal/qt_conversion.cpp (qt_imageToQImage): Do not call
	C++ isnan() without a namespace specifier.

	EAM:  Reverting this change.  We may need a fix, but this isn't it.
	qtterminal/qt_conversion.cpp:
	In function 'QImage qt_imageToQImage(int, int, coordval*, t_imagecolor)':
	qtterminal/qt_conversion.cpp:129:14:
	error: expected unqualified-id before '(' token if (std::isnan(*image))

2015-11-29 Allin Cottrell  <cottrell@wfu.edu>

	* term/metapost.trm: Set terminal flag TERM_IS_LATEX unless the
	"notex" option is active.  This causes axis tic labels to use the
	same default format "$%h$" as other TeX terminal types.

2015-11-12  Douglas Mason  <douglasmason1@users.sf.net>
	    Lukas Jirkovsky  <stativ@users.sf.net>
	    Ethan A Merritt  <merritt@u.washington.edu>

	* src/pm3d.c (apply_lighting_model) src/pm3d.h src/save.c src/set.c
	src/show.c src/stdfn.h src/tables.c src/tables.h docs/gnuplot.doc:

	Add a simple lighting model to pm3d rendering.
	Syntax:
	    set pm3d nolighting    # default state
	    set pm3d lighting {primary <fraction>} {specular <fraction>}

	The command `set pm3d lighting` selects a simple lighting model in which
	a single fixed light contributes 50% of the overall illumination.
	The strength of this light relative to the ambient illumination can be
	adjusted by `set pm3d lighting primary <fraction>`.  Specular highlights
	are calculated using a Phong model with fixed exponent.  The fractional
	contribution of specular highlighting can be adjusted.  Model parameters
	controlling the illumination angle and Phong exponent are not exported
	to the user in this version, but easily could be if requested.

	Original patch by Douglas Mason. See Feature Request #323 (Mar 2012).
	Revised for gnuplot version 4.6 by Lukas Jirkovsky.  Revised by EAM for
	version 5.1 and modified to coexist with pm3d settings for depthorder,
	interpolation, and projection to the bottom or top of the view box.

	* demo/pm3d_lighting.dem:  New demo

2015-11-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/graphics.c src/save.c src/set.c src/show.c
	src/unset.c:  The documentation says that "set tics `front` or `back`
	controls whether the tics are placed behind or in front of the plot
	elements".  This was sort of true but it did this by moving the entire
	grid along with the tics, so you could not entirely place the tics
	and tic labels in front of the grid lines.
	Decouple these two operations so that `set tics {front|back}` does only
	what it is documented to do.
	Bug #1704

	* src/axis.c (gen_tics):  "set {*}tics rangelimit" applies to minor
	tics as well as major tics.
	Bug #1705

2015-11-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp: Improved vertical alignment of Qt text
	fragments (analogous to Jun's cairo patch).

2015-11-06  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* src/wxterminal/gp_cairo.c: Fix longstanding bug in vertical alignment
	of text fragments in cairo terminals (including wxt).  Text containing
	superscripts was placed too low; text with subscripts too high.
	This is corrected by a query to pango_layout_get_baseline().
	Bugs #1319 #1586, probably others

2015-11-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c (f_word f_words):  The implementation of word(string,N)
	returned the total number of words for any N<0.  This was used internally
	to implement words(string) and word(string,-1) but meant that any N<0
	returned an unexpected value to the user.  Limit the special case to
	a single magic value and let all other N<0 return "" as expected.

2015-11-02  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.967

	* docs/gnuplot.doc: typos

2015-11-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.h src/plot2d.c: Add a new field to (struct curve_points).
	plot->base_linetype holds the original linetype index for this 2D plot,
	prior to applying variable color, linetypes defined in terms of other
	linetypes, etc. This allows assigning successive colors or other
	properties to elements of a 2D plot (e.g. histogram components, boxplot
	factors).  An analogous field splot->hidden3d_top_linetype is already
	maintained in (struct surface_points) for use by 3D plots.

	* src/graphics.c src/plot2d.c: In boxplots with multiple component
	factors, interpret "lc variable" as requesting a new color for each
	factor.

2015-10-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util3d.c src/util3d.h (edge3d_intersect two_edge3d_intersect):
	Change parameters to (coordinate *) rather than (array, index) so that
	the same routines can handle clipping 3D vectors that are not stored as
	successive entries in an array.

	* src/graph3d.c src/plot3d.c:  Support "set clip {one|two}" for 3D
	vector plots.

	* src/datafile.c (df_set_key_title):  Use of columnheader(N) could
	sometimes leave an extraneous character '@' in the plot title.
	This was introduced in 5.0.1 as a side effect to the fix for Bug #1596.

2015-10-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.c (mcs_interp): Handle log-scaled y axis when using
	monotonic cubic splines ('smooth mcs').

	* src/plot2d.c (boxplot_range_fiddling) src/graphics.c (plot_boxplot):
	Fix autoscaling of x axis if there are multiple boxplots with factors.
	Bug #1696

	* src/graphics.c (plot_points plot_boxplot): Declare and initialize
	p_height and p_width locally (no code was updating the global copy).
	This fixes nonfunctional "set clip points" command in version 5.

	* src/boundary.c (do_key_layout) src/graph3d.c (boundary3d):
	Remove reference to p_height, p_width, which were not being initialized.

	* src/show.c (show_clip) docs/gnuplot.doc: Clarify effect of "set clip".

2015-10-27  Ethan A Merritt  <merritt@u.washington.edu>

	* Modify demos to increase coverage of gnuplot features.
	line_arrows:	illustrate 'set arrow from ... rto ...'
	rgba_lines:	illustrate 'set arrow from ... length ... angle ...'
	smooth: 	illustrate both smooth cumulative and smooth cnorm
	dashtypes:	illustrate numerical dashtype definition
	monotonic_spline: smooth mcs
	break_continue:	exercise "exit" command from inside "call <foo>"
	volatile:	exercise 'skip', 'volatile', 'refresh'
	boxplot:	illustrate 'nooutliers'

	* demo/all.dem: Call additional demos to increase code coverage.
	rgba_lines fitmulti break_continue monotonic_spline volatile

2015-10-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c src/axis.c src/util.c src/util.h src/mouse.c
	src/dynarray.c src/util3d.c src/hidden3d.c:  Get rid of graph_error().
	The routine graph_error() was originally intended as a special case of
	int_error() to be called "while graphics active".  We have long since
	gone to calling int_error() everywhere.  Replace the remaining instances
	of graph_error() and remove it.  Comment out one call site in mouse.c
	that can no longer be reached since the error is trapped elsewhere.

2015-10-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (save_autoscaled_ranges restore_autoscaled_ranges)
	src/axis.h src/plot2d.c:  Auto-scaled axis ranges are extended as data
	is read in, but this is counterproductive for some processing modes
	(e.g. the y values contributing to 'smooth cnorm'). The new save/restore
	routines allow these plot modes to undo the effect of range extension.

2015-10-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/time.c (gstrptime): Fixes a bug in processing time input using
	format "%s".  Because time input can cross whitespace between fields,
	the string being parsed for one field may continue on into the next
	field.  The "%s" code looked for the first decimal point in the string,
	but would read beyond the current field to find it, causing an erroneous
	fractional second to be added to the input time value.

	* term/post.trm:  Fix scope of dictionary in Prolog

	* src/term_api.h term/post.trm src/graphics.c (plot_border)
	term/PostScript/prologue.ps term/PostScript/prologues.h:

	This change addresses a backward-compatibility issue with the postscript
	terminal in version 5.  The long ago original postscript terminal used a
	double-width line for the plot border. This was what you got when you
	specified "lt -1" in a gnuplot command.  All terminals agree that lt -1
	is black and solid, but postscript is anomalous in thinking that it has
	double width.  Furthermore postscript is anomalous in applying the
	current line width to draw dots (pointtype 0).  This meant that dots
	drawn with lt -1 were twice as big as dots drawn with other linetypes.
	We could just get rid of the double-width anomaly, but then new plots
	would have a thinner border than old plots produced with the same
	script.  This patch instead adds a layer flag TERM_LAYER_BEGIN_BORDER
	so that the postscript terminal can temporarily use a new line type LTB
	rather than LTb.  All other terminals will ignore it.
	Bug #1689 and others

2015-10-16  Abhijin Adiga  <abhijin@users.sf.net>

	* term/lua/gnuplot-tikz.lua:  Truncate term->h_char using math.floor().
	This prevents text placement errors on OSX 10.10.2 with lua5.3.
	Bug #1682

2015-10-16  Ethan A Merritt  <merritt@u.washington.edu>

	* term/lua/gnuplot-tikz.lua:  lua5.2 deprecates loadstring() in favor of
	load(). One of my test systems gives runtime errors without this change.
	Bug #1682

2015-10-13  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/makefile.awc (COREOBJS): Add jitter.c module.

	* src/jitter.c (jitter): Repair initializer --- completely empty
	is not allowed.

2015-10-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (parse_label_options): Only the full word "boxed" is
	acceptable as a label option.  Allowing the shorthand "box" causes
	confusion in other commands with a "box" option.  Bug #1681

	* src/interpol.c (cp_implode): Fix bug in "smooth cnorm" that has been
	there since the option was first introduced.

2015-10-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.h src/plot2d.c docs/gnuplot.doc:  Until now,
	"plot foo using N smooth freq" and "plot foo using N smooth kdensity"
	were interpreted as if the using clause was "using 0:N".  This is
	almost certainly not what the user expected.  Change it so that the
	interpretation is "using N:(1.0)", i.e. unit weight for each data point.
	This was always the recommended use in the docs; now it is the default
	interpretation as well.

2015-10-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (set_obj):  "set obj N polygon ..." failed to consume all
	possible options and keywords.
	Bug #1680

	* src/plot2d.c (get_data):  "plot $foo using N smooth kdensity" is now
	interpreted as "using N:(1)".  Before it was interpreted as "using 0:N"
	which makes little sense.

2015-10-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/graphics.c src/save.c src/set.c src/term_api.h
	src/unset.c demo/varcolor.dem:
	Clean up implementation of "set errorbars <line properties>".
	Apply errorbars line properties also to candlesticks and boxplots.

	Add explicit handling for two line property settings that to the best
	of my knowledge were not used intentionally by other code paths.

	* src/term.c (term_apply_lp_properties): Treat LT_DEFAULT as "do not
	change current setting" rather than pass it to term->linetype(), which
	could produce unpredictable behaviour (not all terminals act the same).

	* src/gadgets.c (apply_pm3dcolor): Treat TC_VARIABLE as "do not change
	current setting".  Previously it would have resulted in setting the
	color to black, but that was unintentional.

2015-10-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_readascii): The test intended to check whether the
	user requested more than 7 columns of formatted input has always been
	incorrect for 'splot'.  It tested against MAXDATACOLS rather than the
	actual number of requested columns.  The test worked but was redundant
	for 'plot' since requesting more than 7 columns will trigger another
	error message "too many columns for requested style".  Remove the test.
	Bug #1675

	* src/axis.c src/axis.h src/boundary.c src/gadgets.c src/gadgets.h
	src/graph3d.c src/graphics.c src/hidden3d.c src/misc.c src/save.c
	src/set.c src/term_api.h src/term.c:
	#define and use DEFAULT_P_CHAR for all initializers.
	Change lp_style_type.p_char from an unsigned long to char [8].
	This suffices to hold the UTF-8 encoding of all unicode code points.
	Bug #1676

2015-09-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c (do_key_sample):  Use the same arrowhead style in the
	key sample as used by the plot itself.

2015-09-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_boxplot):  Fix overrun if no valid points are
	found for some boxplot category (a.k.a. "level").  Fix clipping of
	outliers in zoomed boxplot.

2015-09-15  Mojca Miklavec  <mojca.miklavec.lists@gmail.com>

	* term/lua.trm:  lua 5.3 deprecates luaL_checkint()
	Bug #1672

2015-09-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/jitter.c src/jitter.h src/makefile.all
	src/Makefile.am src/save.c src/save.h src/set.c src/show.c
	src/tables.c src/tables.h src/unset.c:  New plot capability.

	Syntax:
	    set jitter {overlap <yposition>} {spread <factor>} {wrap <limit>}
	               {swarm|square}
	When the x coordinates of a data set are restricted to discrete values
	then many points may lie exactly on top of each other.  Jittering
	introduces an offset to the coordinates of these superimposed points
	that spreads them into a cluster.  This type of plot is called a
	"bee swarm" plot in R and other packages.

	* demo/all.dem demo/html/index.canvas demo/html/index.save
	demo/html/index.svg demo/html/Makefile demo/html/Makefile.canvas
	demo/html/Makefile.svg demo/jitter.dem docs/gnuplot.doc
	docs/plotstyles.gnu:  Documentation and demos for jitter settings and
	bee swarm plots.

2015-09-12  Ethan A Merritt  <merritt@u.washington.edu>

	* docs/gnuplot.doc:  Reorganize the section containing plot style
	examples so that styles not generated by "with <foo>" are listed
	separately at the end.  E.g. polar plots are generated by the same
	"plot ... with <foo>" commands as non-polar plots.

2015-09-11 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/help.c term/lua.trm:  #ifdef _WIN32
	'\r' is accepted as a terminator after a prompt.

2015-09-04  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c: For 2-column data plots with filledcurves, treat
	y=<value> as if it were provided in the 3rd data column.
	Bug #1568

	* src/graphics.c (plot_boxes): Prevent array overrun if there are
	undefined points are at the end of a data set, as in the first plot
	of smooth.dem.

2015-08-31  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>

	* src/wxterminal/wxt_gui.cpp:  Reset "yield" interlock on ctrl-C.
	Prevents endless futile loop with single-threaded wxt terminal.

2015-08-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp:  Remove FPRINTF statements referring
	to a stopwatch timer that no longer exists.

2015-08-28  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp (wxt_waitforinput):
	The single-threaded code path used by OSX and Windows (and optionally
	linux) was not honoring "pause mouse ..." commands, including "pause
	mouse close".

	* src/wxterminal/wxt_gui.cpp (wxt_exec_event):
	The single-threaded code path could lose an input character that arrived
	during a "pause mouse" interval.  Use ungetc to push a character back
	onto the input queue in this case.  (Not applied for Windows but maybe
	it should be?)

2015-08-25  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (plot_option_index):  Sanity check that index >= 0.

	* src/datafile.c (df_determine_matrix_info):  "skip" option applies to
	records at the start of ascii matrix data as it does for normal ascii
	files.

	* src/datafile.c (initialize_plot_style):
	Some binary file options need to know what style of plot is involved.
	This lookup was being done as part of adjust_binary_use_spec(), but
	not all plots need to call that routine for anything else.
	Move the plot style lookup into a separate routine.

	* src/datafile.c (df_add_binary_records):
	Remove dead code (error checks that can never be reached).
	Make some internal bookkeeping variables df_* static.

	* src/datafile.c: whitespace cleanup

2015-08-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_readascii):  The code supporting an input format
	assumed that the data being interpreted came from a file rather than
	using whatever string was returned by df_gets().
	E.g. this failed
		plot $datablock using 1:2 "format-string"
	Bug #1666

2015-08-24  Dima Kogan  <dima@secretsauce.net>

	* src/datafile.c (df_open):
	Syntax  "<&N"  plots data read from an arbitrary file descriptor, but
	that descriptor may be a pipe (non-seekable) rather than a true file
	(seekable). If the fd is not seekable, mark it a "volatile" so that
	gnuplot doesn't try to reread it on "replot".

2015-08-21  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* docs/doc2tex.c (process_line): Improve passing of hyperlinks to
	pdftex.  Allow both multi-line and single line format, for both
	external and internal hrefs.

2015-08-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (map_position_r):  There is no way to indicate
	"no offset" as opposed to "offset 0", which was causing problems
	if "offset 0" was applied as axis coordinates on a log-scaled axis.
	Now in 2D "offset 0" is interpreted as no offset even for log-scaled
	axes.  3D offsets are still a sore point.
	Bug #1662

	* src/datafile.c src/eval.c src/gp_types.h src/graphics.c sec/plot3d.c
	src/save.c term/svg.trm term/tgif.trm:
	Remove dead code.

2015-08-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c src/parse.h src/plot2d.c src/plot3d.c src/set.c
	src/unset.c demo/iterate.dem docs/gnuplot.doc:
	New special case of iteration in a plot command:
		plot for [i=<start> : *] datafile ...
	This will iterate over all available data without generating an
	error message when the data is exhausted and without generating
	empty plots.  It can be used to iterate over an unknown number of
	columns (e.g. for histograms), an unknown number of data blocks
	(e.g. plot for [i=0:*] datafile index i)  or an unknown number of
	datafiles where the file name is generated from the iteration
	variable.

2015-08-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotEvent.cpp src/qtterminal/qt_term.cpp:
	Make the error messages from a broken connection to gnuplot_qt less
	alarming.  No change in functionality.  See Bug #1554

	* src/qtterminal/qt_term.cpp:  Use fprintf(stderr, ...) instead of
	qDebug() << ... for the inboard driver.  This allows allows Windows
	to catch error messages by the redefinition of fprintf in wtext.h.
	See Bug #1554

2015-08-14  Ethan A Merritt  <merritt@u.washington.edu>

	* term/dumb.trm src/stdfn.h:  Handle UTF-8 encoding so long as each
	printed glyph occupies only one character cell.  The code is specific
	to UTF-8; i.e. it does not handle other multi-byte encodings.
	Bug #1477

2015-08-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata):  The sampling coordinates
	generated by pseudofiles '+' and '++' were passed as an ascii string,
	which truncated precision to 6 digits (default for format %g).  Now pass
	in parallel the original (double) value so that no precision is lost.
	Bug #1650

2015-08-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/command.h src/misc.c src/tables.c
	* docs/gnuplot.doc demo/break_continue.dem:
	New commands `break` and `continue` to short-circuit or terminate
	iteration of a `do` or `while` bracketed clause.

2015-08-07  "Jun T." <takimoto-j@kba.biglobe.ne.jp>

	* term/aquaterm.trm: Failure to save+restore original color was causing
	successive fill areas to become more and more transparent.
	Alsi, make background color pure white.

2015-08-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/parse.c (string_or_express): Prevent an empty string variable or
	expression from being interpreted as the magic names '' or "".
	E.g.
	    file1 = 'real-file'
	    file2 = "abc"[3:0]  # any expression that evaluates to ''
	    plot file1,file2    # plots file1 twice, no error message
	Bug #1660

2015-08-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/graphics.c src/graphics.h src/save.c src/save.h
	src/set.c src/setshow.h src/show.c src/unset.c src/tables.c
	docs/gnuplot.doc demo/varcolor.dem:

	Support a separate set of line properties for errorbars.
	New command "set errorbars" is an expansion of "set bars" to include
	line characteristics.  Save errorbars style (previously not saved).
	E.g.   set errorbars lc "black" lw 0.75

	* src/util.c (streq): Avoid buffer underrun on empty string.

2015-08-02 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/qtterminal/qt_term.cpp: Fix #ifdef block syntax, modify
	string concatenation to make it acceptable in VS2010.

2015-08-02  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/Makefile.am (GNUPLOT_QT) [BUILD_QT]: New variable to
	communicate optionally transformed name of gnuplot_qt into main to
	main executable.
	(AM_CPPFLAGS) [BUILD_QT]: Pass GNUPLOT_QT to the preprocessor.
	(clean-demo) [BUILD_QT]: Fix copy-paste-edit oversight.

	* src/qtterminal/qt_term.cpp (GNUPLOT_QT): If not defined from
	outside, provide fall-back definition equal to previously
	hardcoded value.
	(execGnuplotQt): Untangle the conditionals a bit. Use new macro
	GNUPLOT_QT for the name of the outboard driver executable (fixes
	SF bug #1652)

	* term/pslatex.trm [!EAM_BOXED_TEXT]: Remove empty fallback
	definition for new entry function.  Remove extraneous optional
	terminal API entry.

2015-08-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (history_command): protect against try_to_get_string
	failure in history commands.

	* src/parse.c (next_iteration): protect against user corrupting
	iteration variable.  E.g. either of these used to segfault
		plot for [n=1:2] x lw n='foo'
		do for [n=1:2] { n="foo" }

	* src/plot2d.c src/plot3d.c src/set.c:  Do not allow function plots
	to specifc an image style (with image/rgbimage/rgbalpha).

	* src/command.c (pause_command):  protect try_to_get_string failure in
	'pause' command.  linux/windows/os2 code fixes are distinct.

	* src/command.c (plot_command splot_command):  Fuzz-testing found
	cases where 'refresh' triggered program failure if there was not an
	active refreshable plot.

	* src/plot3d.c (eval_3dplots): 2015-05-07 code to accommodate images in
	hidden3d plots was being invoked even if hidden3d was not active.

	* src/set.c (set_key): protect against try_to_get_string failure.

	* src/axis.c (get_position_type): Revert recoding of get_position_type
	(2015-02-15). Fixes failure to keep axis setting if already known.
	Bug #1658

	* src/command.c (new_clause {if|else|while|do}_command):
	Better bookkeeping for the depth of nesting in bracketed clauses.

	* src/plot2d.c (eval_plots) src/plot3d.c (eval_3dplots):
	Example of bug:     plot for [i=1:3] T=sprintf("%d",i),i title T
	previous code evaluated the definition three times and only then
	drew [one] plot.   After this fix the code executes define+plot
	three separate times.

	* src/graphics.c (place_parallel_axes): Ignore plots containing no data
	and hence no initialization information for parallel axis structures.
	Example of bug:     plot 'foo' using 1:2:3:4:5 with parallel, 0

	* src/command.c (toggle_command):  Handle plots with no title.

2015-07-31  Ethan A Merritt  <merritt@u.washington.edu>

	Sync restored repository on SourceForge to in-progress commit tree
	from 2015-07-15.  So far as I can see the only files affected are
	demo/html version updates.

2015-07-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_determine_matrix_info):  The new (12 May 2015)
	mechanism for tracking matrix and image dimensions transposed the
	row and column counts in the case of
	    plot $asciidata matrix with image
	Bug #1654

	* demo/imageNaN.dem:  Revise the demo to use non-square matrices
	so that it acts as a unit test for errors like the above.

	* demo/html/index.*:  Update version and date

2015-07-15  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/eval.c (update_gpval_variables):  Windows variant of linux/posix
	uname() information.  Store in variables
	    GPVAL_MACHINE         e.g. i686, x86_64
	    GPVAL_SYSNAME         e.g. linux, Windows
	    GPVAL_BITS            number of bits in a pointer

	* src/eval.c: Re-order code to support Windows non-C89 compilers
	(e.g. Visual Studio 2010)  (thanks to Akira Kakuto).

2015-07-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_open):  Bookkeeping for matrix dimensions in plot
	structure must not be applied inside a stats command.

	* src/graphics.c (process_image):  Sanity check that input image data
	does not overflow the space allocated for it based on dimensions
	calculated when the input file was first opened.

	* src/plot3d.c (eval_3dplots):  Skip empty input file cleanly, as we
	already do for 2D plots.

	* src/datafile.c (df_open):  Filename of the form "+file.dat" must not
	be mistaken for special file '+'.

2015-07-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp term/cairo.trm term/wxt.trm:
	Change fixed-length fontname storage to dynamic (cairo + wxt terminals)
	to prevent crashes found by fuzzing.

	* term/hpgl.trm (set_font):  Prevent same crash in hpgl/pcl5 terminal.

	* src/datablock.c:  The storage in a zero-length datablock was not
	initialized.

2015-07-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (bind_command) src/mouse.c (bind_fmt):
	Very old bug (pre v4.0) in parsing the bind command, such that
		bind X" some longish command"
	would corrupt memory.  The output format was bad also.

	Remove ancient files from active repository: lineproc.mac header.mac
	According to Changelog.4 this was done in 2013, but apparently not.

2015-07-11  Christoph Bersch <usenet@bersch.net>

	* term/epslatex.trm:  enable dashtype processing

2015-07-11  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* demo/imageNaN.dem: Fix broken command in demo.

2015-07-11  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c (load_tic_series): Incorrect nesting of brackets caused
	"set xtics 0" to be accepted rather than rejected.  This could lead
	to various bad outcomes (as found by fuzz-testing).

	* src/stats.c: More fuzz-testing.
	Possible double free if string_or_express returns via int_error().

	* src/set.c: More fuzz-testing.  Fix various places where failure to
	parse a string could lead to a double-free

	* src/axis.c (load_range):  More fuzz-testing.  "set [xyz]range"
	per se does not care if the range limits are extremely large,
	e.g.  xrange [ -inf.0 : inf.0 ]
	but other places in the code do not handle this cleanly.
	Limit the range to +/- VERYLARGE

	* src/set.c (set_terminal) src/unset.c (unset_terminal)
	src/eval.c (del_udv_by_name):  More fuzz-testing.
	If GNUTERM is defined but empty, or if a "set term <garbage>" command
	fails during parsing, then the current terminal could be left as NULL.
	Now (I hope) we guarantee that at worst it is "unknown".

	* src/pm3d.c (pm3d_plot): More fuzz-testing.
	If no interpretable pm3d scan lines are found in a file the program
	could die on a divide-by-zero error before noticing the real problem.

	* src/set.c (set_style) src/show.c: "set style func parallelaxes"
	is not supported.  "set style data parallelaxes" was not saved.

2015-07-08  Ethan A Merritt  <merritt@u.washington.edu>

	* term/estimate.trm:  Initialization of enhanced text string buffer.
	Bug #1648

	* src/set.c src/fit.c src/term.c src/parse.c term/cgm.trm term/gd.trm
	term/x11.trm:  Fuzz-testing found a recurring pattern of fragile code:
	if (isstringvalue(c_token))
	     foo = try_to_get_string();	/* cannot fail */
	Unfortunately it _can_ fail if an expression begins with a quoted string
	but is coerced into returning a numerical value. All of these sites
	require a specific check for (foo != NULL).
	Bug #1649

	* src/eval.c (pop_or_convert_from_string): Some of the cases of bad
	syntax can also be caught inside try_to_get_string() itself. It doesn't
	hurt to add the check at this level also (belt+suspenders approach).
	Bug #1649

2015-07-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.c (gp_cairo_set_dashtype):  If the dashtype
	is changed then the current path must be stroked and reopened.

2015-07-03  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac src/plot2d.h:  Move the definition of SMOOTH_BINS_OPTION
	into plot2d.h, since configure.ac is not seen by the build system on
	MSWin.

	* demo/html/webify.pl:  Default to pngcairo terminal rather than png.

2015-07-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c:  An incorrect test for variable color was used for
	splots with impulses or points.  Replace it with a shared correct test
	in check3d_for_variable_color.  Note: Binary plots can still set an
	incorrect flag plot->pm3d_color_from_column but this flag is no longer
	sufficient to cause the observed problem.
	Bug #1644

2015-06-28  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* configure.ac: Check for existence of latex2html.
	* docs/Makefile.am (htmldocs/gnuplot.html): Do not try to build if
	latex2html was not found.
	(alldoc): Target 'ms' no longer exists.  Test actual outputs made
	from gnuplot.ms instead.

2015-06-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotItems.dpp (drawPoint):
	The "dots" style was inadvertantly made a no-op by change on 2015-02-15.

	* configure.ac demo/bins.dem docs/gnuplot.doc src/gp_types.h
	src/plot2d.c src/interpol.c src/interpol.h demo/random.dem:

	New data filter "bins" sorts the original data into equal width bins
	on x and then plots a single value per bin. The default number of bins
	is controlled by `set samples`, but this can be changed by giving an
	explicit number bins=N in the plot command.  The new feature is marked
	EXPERIMENTAL in the documentation because we may decide to change the
	syntax to "smooth bins" or "filter bins" or something else.

2015-06-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c (do_event) src/command.c (replotrequest):
	An attempt to zoom or scroll the output from a "test" command could
	produce useless error messages on the console.  Now it will revert to
	the previous plot command, if any.
	Bug #1627

2015-06-20  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/util.c (gprintf): 'L' had broken if-else since 2010; 'B' was
	missing handling for power zero; 'B' had problem with excess
	precision.

2015-06-15  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/term.c (test_term):  Use of unsigned terminal coordinates could
	cause overflow and jam up display of very small plots in x11 terminal.
	Bug #1626

2015-06-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_boxes):  Autocalculation of box widths was bad
	whenever a NaN data value was encountered.  Now such data points are
	ignored, as they were in version 4.
	Bug #1623

2015-06-14  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/term.c (test_term):  Dashtype sample labels displayed by `test`
	were off by one.

2015-06-05  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/fit.c (fit_command): If there's exactly one more range in a
	'fit' command than there are independent variables, that last
	range has to be applied to the dependent variable
	(a.k.a. "function").

2015-06-04  <pudh4418@users.sf.net>

	* configure.ac:  Qt5 as build for Arch linux apparently requires
	compilation with -fPIC rather than -fPIE.
	Bug #1616

2015-06-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/util3d.c (draw3d_line_unconditional polyline3d_next):
	Do not reset line properties for each component line segment in a
	contour line.  This improves the dash-pattern rendering for contours.
	Bug #1612

	* src/parse.c (add_udv):  Warn if too-long variable name is truncated.
	Bug #1526

2015-06-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/show.c:  Clarify the current "set clip" settings in "show clip".

	* src/term_api.h src/graph3d.c:  Send TERM_LAYER_3DPLOT to the terminal
	at the start of an splot.

	* src/qtterminal/QtGnuplotScene.{cpp|h} src/qtterminal/qt_term.cpp:
	If the current plot is 3D, do not update the status dispplay of x/y
	coordinates in response to a mouse move event.
	Bug #1605

2015-06-01  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/mouse.c (event_buttonrelease): Improved bookkeeping for which
	icon to display during mouse interaction.
	Bug #1617

	* src/gplt_x11.c (reset_cursor):  Do not reset the cursor of the
	currently active plot to default just before setting it to the correct
	cursor icon.  Prevents flicker due to transient change of icons.
	Bug #1618

2015-05-31  Jun-ichi Takimoto  <jtakimoto@users.sf.net>

	* src/qtterminal/qt_term.cpp:  Mouse coordinates must be passed to the
	clipboard as a QString.
	Bug #1602 (and earlier bugs)

	* src/qtterminal/QtGnuplotScene.cpp (mouseReleaseEvent): With the above
	fix in place, it is not necessary to lock out events during the
	doubleclick interval.

2015-05-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotEvent.cpp src/qtterminal/QtGnuplotScene.cpp:
	Always respond to mouse button release event, even if the graph widget
	is busy or the mouse has left the window area. This prevents the event
	from being lost, causing the rotate-on-mouse-motion mode to get stuck.
	Bug #1602

	* docs/doc2ms.c docs/windows/doc2html.c: Avoid finicky C90 compiler
	warnings.

2015-05-30  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* docs/Makefile.am (noinst_PROGRAMS): Add doc2wxhtml.
	(MOSTLYCLEANFILES, CLEANFILES): Split up into two lists, updated.
	(GNUPLOT_EXE): New variable, points to freshly built gnuplot
	executable.
	($(GNUPLOT_EXE)): Build executable, if not already present.
	(grotxt, grodvi, grops): Turn into proper phony targets: depend on
	the file actually built, do nothing themselves.
	(troff, gnuplot.nroff, gnuplot.txt, gnuplot-groff.dvi)
	(gnuplot-groff.ps): Must depend on titlepag.ms in srcdir, not
	builddir.  Use automatic make variables to simplify. Changed build
	of gnuplot.ms allows to remove complications for out-of-tree
	builds.
	(gnuplot.ms): Call doc2ms with new argument to ease out-of-tree
	builds.
	(gnuplot.tex, pdffigures, figures, nofigures, pdffigures.tex):
	Rules removed. Having different rules produce files of the same
	name, but with different content depending on the order of make
	targets built, cannot possibly work.
	(figures.tex, nofigures.tex): Keep two different versions of
	gnuplot.tex in different-named files.
	(pdf_figures, wxhelp_figures): New targets to handle generation of
	figures for use.
	(gnuplot.tex): Now just a link to (or copy of) nofigures.tex.
	(gnuplot.pdf, nofigures.pdf): Create pdffigures.tex on-the-fly,
	because its content cannot be assumed correct any other way.
	(dvi): Re-enabled.
	(gnuplot.dvi, gnuplot.pdf, nofigures.pdf, gpcard.dvi): Must depend
	on titlepag.tex and toc_entry.sty in srcdir, not builddir.
	(gnuplot.htb): Add necessary dependencies, some of them in srcdir.
	(doc2wxhtml_SOURCES, doc2wxhtml_CPPFLAGS): Use automake to build
	wxhtml, instead of spelling out compile rules ourselfs.

	* configure.ac (AM_INIT_AUTOMAKE): Up version requirement a bit,
	enable option subdir-objects.

	* docs/doc2ms.c (main, init): Add optional argument giving the
	location of titlepag.ms to be put into the file.  This way the
	file can be processed by roff tools as-is, without having to patch
	it on-the-fly.

2015-05-30  Ethan A Merritt  <merritt@u.washington.edu>

	* term/js/gnuplot_svg.js:  The test (typeof tspan_element == 'tspan')
	is now failing in multiple browsers.  Comment it out for now.
	Bug #1340

2015-05-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c src/command.h src/tables.c docs/gnuplot.doc:
	New command `printerr` works exactly as `print` except that output is
	always to stderr even if normal print output has been redirected using
	`set print`.

2015-05-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h:  Update routines that were missed in the
	axis pointer revision.  Remove GET_NUM_OR_TIME (no callers remain).
	Reorganize GET_NUMBER_OR_TIME, get_num_or_time to handle parallel axes.

2015-05-14  Ethan A Merritt  <merritt@u.washington.edu>

	* term/tek.trm (SIXEL_fillbox): Handle FS_DEFAULT

	* term/tek.trm (SIXEL_make_palette): A second call to make_palette()
	was failed to reset the state, leading to loss of all palette info.
	Now it overwrites any previous palette.
	Bugfix (e.g. heatmaps demo)

2015-05-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/QtGnuplotScene.* src/wxterminal/wxt_gui.*
	term/svg.trm term/js/gnuplot_svg.js docs/gnuplot.doc:
	EXPERIMENTAL support for a variant of hypertext that allows you to pop
	up an image on mouse-over.  The initial implementation looks for a
	hypertext string of the form "image{{xsize},{ysize}}:filename".

2015-05-13  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/command.c (pause_command): The windows "pause" command is
	sensitive to the locale encoding. Keep a translation table to convert
	between gnuplot's idea of the encoding and WIN32 encoding states so that
	strings output by "pause" are not corrupted.
	Bug #1580, Feature Request #415

2015-05-12  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/gadgets.h:  Move definition of struct t_image
	from term_api.h (no terminals use it) to gadgets.h (2D and 3D plots).

	* src/datafile.c src/graphics.c (process_image):  Remove old code that
	tried to empirically determine grid size of an image based on 3D coords.
	Replace it with new bookkeeping in plot->image_properties.{ncols,nrows}
	that is initialized when the image data is read in.
	Bug #1607

2015-05-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/contour.c src/graphics.c src/internal.c src/interpol.c
	src/plot3d.c src/save.c src/set.c src/show.c src/tabulate.c:
	Whitespace/codestyle cleanup "if (FOO)" rather than "if( FOO )"

	* src/bitmap.c src/eval.c src/gadgets.c src/getcolor.c src/hidden3d.c
	src/plot3d.c src/save.c src/set.c src/show.c src/stats.c src/unset.c:
	Whitespace/codestyle "for (...) {" rather than "for( ... ){"

2015-05-07  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/graph3d.c src/graph3d.h src/graphics.c src/graphics.h
	src/plot2d.c src/hidden3d.c:
	Replace plot_image_or_update_axes(*plot, TBOOLEAN), which handled
	2 options, with new routine process_image(*plot, t_procimg_action).

	* src/plot3d.c (eval_3dplots):  Accommodate images in hidden3d
	plots in a way analogous to the current handling of pm3d surfaces.
	A phantom surface is constructed consisting of a single rectangle
	that overlays the image, and that phantom is included as surface
	in the hidden3d sort/divide/occlude processing.

2015-05-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/hidden3d.c (build_networks):  In hidden3d mode do not draw
	the surface if the keyword 'nosurface' is present (set the linetype
	internally to LT_NODRAW).  Normally this keyword would mean "draw only
	the data lines, not the isosampled grid lines", but that makes little
	sense for a hidden3d surface.  This provides a way to draw only the
	contours of a hidden3d contour plot.
	See Bug #1603

2015-05-03  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* term/caca.trm: Insert missing include of <sys/select.h>.

	* src/wxterminal/wxt_gui.cpp: Insert missing include of
	<sys/select.h>.
	(wxt_waitforinput): Add note about missing check for HAVE_SELECT.

2015-05-02  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/Makefile.am (getcolor_x11.o): Use Automake macros to
	control whether tool calls are echoed or not.

	* docs/Makefile.am (LUA_HELP, allterm.h, troff, gnuplot.nroff)
	(grotxt, grodvi, grops, gnuplot.ms, htmldocs/gnuplot.html)
	(pdffigures.tex, figures, nofigures, gnuplot.pdf, gnuplot.tex)
	(gnuplot.dvi, gpcard.dvi, gnuplot.ps, gpcard.ps, gnuplot.hlp)
	(gnuplot.gih, allgih, gnuplot.htb, wxhelp/wgnuplot.html)
	(wxhelp/doc2html.o, wxhelp/doc2html$): Use Automake macros to
	control whether tool calls are echoed or not.
	(gnuplot.texi gnuplot-eldoc.el): Move compilation of ELisp out of
	here.  There was already a separate rule for it.
	(${ELCS}, gnuplot.info, install-info, gnuplot.ipf, gnuplot.rtf)
	(gnuplot.rnh, check-local, clean-local, install-vms): Use Automake
	macros to control whether tool calls are echoed or not.

	* docs/gnuplot.doc: Blank-only line fixed.

2015-04-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/hidden3d.c:  If a hidden3d plot included a "with image" component,
	the hidden3d processing was tracking individual pixels as points.  This
	slowed everything down without accomplishing anything useful.  Now we
	ignore image plots altogether in the hidden3d code.

	* demo/hidden2.dem:  Add a demo/test for hidden3d processing of image
	plots.  It doesn't actually work at this point, but is useful as a test
	case for new code.

	* src/axis.c (axis_init) src/axis.h src/plot2d.c:  Funnel existing
	macros AXIS_INIT2D and AXIS_INIT3D into a single routine axis_init().
	Whatever reason there was originally to distinguish the 2D and 3D cases
	is no longer applicable in version 5.

2015-04-29  Ethan A Merritt  <merritt@u.washington.edu>

	* Makefile.maint docs/pdffigures.tex docs/Makefile.am:
	Try to reduce churn during "make check" "make pdf" etc by removing
	dvi as an auto-generated target and defaulting to documentation with
	figures.

2015-04-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c (do_3dplot):  Turning on "hidden3d" caused an off by
	one error in assigning color to contours levels.
	Bug #1603

	* src/command.c (do_line):  If an input line starts with a shell escape
	(e.g. '!' for linux) bypass first stage processing (df_tokenise) of the
	remainder of the line.  NB: This means that text following a comment
	character is now passed to the shell rather than being stripped.
	Bug #1517

2015-04-24  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/misc.c (parse_fillstyle):  Additional sanity checks when parsing
	fillstyle options.
	Bug #1597

2015-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c:  Fit code really cares about MAX_NUM_VAR, not MAXDATACOLS.

2015-04-22  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (f_stringcolumn f_columnhead df_set_key_title):
	columnhead(FOO) could return strange results for FOO > 999 or
	undefined or otherwise invalid.  Now we extend the range of valid
	column number to 9999 and return 0 for invalid or out of range FOO.
	Bug #1596

2015-04-21  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac src/axis.c src/axis.h src/plot2d.c src/set.c src/unset.c:
	Switch to dynamic allocation of parallel axis structures.  The count of
	currently allocated structures is kept in global num_parallel_axes.
	All storage is released by "reset".
	At this stage there still remains a limit on how many parallel axes you
	can use in practice because each one consumes a slot in the `using`
	specifier (limited by MAXDATACOLS).

2015-04-20  Karl Ratzsch  <ratzsch@uni-freiburg.de>

	* src/term.c (test_term):  Show terminal's native dashtype support in
	the `test` command output.

2015-04-20  Jun Takimoto <takimoto-j@kba.biglobe.ne.jp>.

	* src/mouse.c (apply_zoom):  axis->formatstring and axis->ticfmt are
	now dynamically allocated and must be saved and restored when zooming.

2015-04-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h:  axis_defaults[PARALLEL_AXES] no longer needed.

	* src/set.c src/show.c src/unset.c: Clean up a few references to
	PARALLEL_AXES that should instead test for a more restrictive set of
	axes.

	* src/axis.c src/axis.h:  Simplify implementation of axis_name().

2015-04-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h: Second stage of moving parallel axis support
	into dynamically allocated storage.  Move the parallel axis structures
	into a separate array and shrink the main axis_array[] accordingly.

	* src/save.c src/set.c src/unset.c:  Split various loops over the full
	set of axes into two separate loops
	    for (axis=0; axis<AXIS_ARRAY_SIZE; axis++) ... axis_array[axis]
	    for (axis=0; axis<num_parallel_axes; axis++) ... parallel_axis[axis]

	* src/unset.c (unset_range reset_command):  Simplify code sections that
	only have to handle the regular axes (not called for parallel axes).
	Add temporary code to handle "reset" of parallel axes; this can go away
	again when "reset" is changed to deallocate the parallel axes altogether.

2015-04-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/color.c (set_color):  Some terminals (pdfcairo, post) produced
	invalid output if given NaN as a gray value in term->set_color().
	Others variously ignored it, replaced it with black, or gray=0.
	Now we trap NaN in the core code and substitute a request for background
	color.  Note:  I'd rather substitute with a fully transparent color,
	but not all terminals handle transparency.
	Bug #1595

	* src/axis.c src/axis.h:  Initial stage of moving parallel axis support
	into dynamically allocated storage.  Here we introduce a new global
	    AXIS *parallel_axis = &axis_array[PARALLEL_AXES]
	For now it points to the existing storage. Later it will become dynamic.

	* src/graphics.c (plot_parallel place_parallel_axes)
	src/set.c (set_paxis) src/show.c (show_paxis):
	Index or point to parallel axis structures relative to parallel_axis[]
	rather than relative to axis_array[].

	* src/plot2d.c (get_data) src/save.c (save_set_all)
	src/unset.c (unset_command):
	Index or point to parallel axis structures relative to parallel_axis[]
	rather than relative to axis_array[].

	* src/unset.c (free_axis_struct):  New routine to free fields in an
	axis structure that is about to be reinitialized or deleted.

2015-04-15  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/show.c (show_paxis): Simplify call to save_prange();
	(show_range, show_link): Call save_prange() instead of deprecated
	save_range().

	* src/save.c (save_range): No longer called. Removed.
	(save_set_all): Replace calls to save_range() by equivalent ones
	to save_prange().

	* src/stdfn.h (FPRINTF, DEBUG_WHERE): Make inactive definitions
	more similar to active ones, for the benefit of people who don't
	like to use {} around their if() bodies.

	* src/save.h: Remove prototype for save_range.

2015-04-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_parallel place_parallel_axes): Revise to use
	axis pointers rather than AXIS_INDEX.

	* src/unset.c: Avoid using AXIS_INDEX where practical.
	Limit initialization of grid/labels/etc to the axes that need it.

	* demo/fit.dem:  Exercise "set fit covariancevariables" in the demo.

	* src/save.c: Avoid using AXIS_INDEX where practical.

2015-04-10  Daniel J Sebald <daniel.sebald@ieee.org>

	* term/tkcanvas.trm:  Fix problems handling an empty font family name
	in a requested font string, as in   set term tkcanvas font ",15"
	Bug #1591

2015-04-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/show.c: Revise internal routines to use axis pointers rather
	than AXIS_INDEX.

2015-04-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c (setvarcovar):  Allocated size of string for FIT_COV_*_*
	variables was too small, corrupting the allocation heap.

	* src/fit.c (regress_finalize):  Show results in the log file even if
	the "quiet" option suppresses screen output.

2015-04-07  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (termp_apply_lp_properties):  Fix incorrect assumption
	that dashtype 1 is always solid and already set by default.
	Bug #1588

	* term/emf.trm (EMF_linetype):  Two linetypes (LT_SOLID LT_AXIS) have
	an intrinsic dash pattern.
	Bug #1588

	* src/term.c (test_term):  Use same sequence of setting line properties
	linewidth/linetype/dashtype in the "test" command as in the core code.

	* demo/imageNaN.dem:  Illustrate NaN generated by negative values
	on a log-scale palette mapping.

	* src/set.c src/term.c:  Adjust the new "set mono" option so that
	"set term xxx mono" is not persistent. I.e., it doesn't leave "set mono"
	in effect after the next terminal change.  This makes it more like the
	version 4 mono terminal option.  "set mono" itself is still persistent.

2015-04-04  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/term_api.h (DEFAULT_MONO_LINETYPES): Empty initializer is
	not allowed.

2015-04-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h (ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE):
	If the value being stored to a log-scaled axis is negative, the stored
	value should be NaN rather than the un-logged original value.

	* src/plot2d.c (get_data): But even that doesn't help if UNDEF_ACTION
	re-stores the orginal value, so don't do that.  Together these changes
	fix the problem that negative values mapped onto a log-scaled cbaxis
	produced a valid (but wrong) color rather than being treated as NaN.

2015-04-02  Karl Ratzsch  <ratzsch@uni-freiburg.de>

	* docs/gnuplot.doc:  Document the C library routines used to parse
	numerical constants in commands and expressions. Integer constants are
	read using strtoll(); floating point constants are read using atof().

2015-04-02  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* compile: Add script required by automake.

	* demo/plugin/Makefile.am (demo_plugin_so_SOURCES): Add
	gnuplot_plugin.h.
	(EXTRA_DIST): Add plugin.dem.

	* demo/Makefile.am.in (Makefile.am): Subdir 'plugin' has a
	Makefile.am, so it should not be in EXTRA_DIST.

2015-03-29  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c src/gadgets.h src/set.c src/setshow.h src/tables.c
	src/tables.h src/term_api.h src/term.c src/unset.c term/x11.trm
	src/show.c docs/gnuplot.doc:
	New commands
		{un}set monochrome {linetype N <line-properties>}
		set color     (same as "unset mono")
	Maintain a set of monochrome linetypes (all black with varying dot-
	dash pattern and/or width) in parallel with the default set of
	color linetypes.  Switch between the two sets using "set mono" or
	"set color".  Terminal types that used to provide a separate "mono"
	keyword now trigger "set mono" as appropriate.  For example,
	"set term pdf mono" is equivalent to "set term pdf; set mono".
	Six default monochrome linetypes are pre-defined. These do not exactly
	duplicate the idiosynchratic mono linetypes of various pre-version 5
	terminals (be cairo cgm emf fig pdf post ...).
	Some further adjustment for individual terminals may be needed.

2015-03-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c src/save.h src.show.c:  Axis pointer conversion of
	save_range, save_tics, save_num_or_time_input.

2015-03-24  Erik Olofsen <olofsen@users.sf.net>

	* term/tek.trm: RGB + palette support for sixel terminal.
	The vt100/vt340 sixel emulator is limited to 16 distinct colors per
	plot but other emulators may permit more.

2015-03-24  Ethan A Merritt  <merritt@u.washington.edu>

	* term/fig.trm term/epson.trm term/tek.trm:  Remove unused variables.

2015-03-24  <dcb314@users.sourceforge.net>

	* src/mouse.c src/plot2d.c src/wxterminal/gp_cairo.c:
	Incorrect argument type to abs() or fabs().

	* src/stats.c (analyze_sgl_column): Incorrect truncation of double to
	int while calculating absolute deviation.
	Bug #1584

2015-03-24  Tatsuro MATSUOKA  <tmacchant3@yahoo.co.jp>

	* src/command.c (pause_command): Work around a bug seen for
	mingw + SJIS encoding.

2015-03-23  Ethan A Merritt  <merritt@u.washington.edu>

	* term/fig.trm:  Preload user-defined linetype colors and gnuplot's
	set of named colors so that they are available in fig plots.

2015-03-22  Ethan A Merritt  <merritt@u.washington.edu>

	* term/cairo.trm:  The cairolatex terminal should not set the flag
	TERM_ENHANCED_TEXT since latex markup is not the same as gnuplot's
	enhanced text mode.  This does not hurt plotting per se, but it
	causes the "test" command to emit a non-latex string.

	* src/unset.c: Revise internal routines unset_tics() unset_minitics()
	and unset_range() to use axis pointers rather than AXIS_INDEX.

2015-03-21  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* demo/plugin/.cvsignore: Added.

	* config/cygwin/.cvsignore: Added.

	* config/watcom/.cvsignore: Ignore two more files.

	* docs/Makefile.am (clean-local): $(LUA_HELP) file has to be
	cleaned, too.

2015-03-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c (do_key_sample) src/graph3d.c src/graphics.c
	src/graphics.h (check_for_variable_color):  The key sample for plots
	with filled objects (boxes, circles, ellipses, etc) and "lc variable"
	was drawn in some non-obvious color not necessarily present in the plot.
	Now we guarantee that the key sample is drawn using the color of the
	first point in the plot.

2015-03-17  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c: Revise many internal routines in set.c to use axis pointers
	rather than AXIS_INDEX.

2015-03-14  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/plot2d.c:  Revise macros AXIS_INIT2D and (the big one)
	ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE to use axis pointers rather than
	AXIS_INDEX.  This is mostly invisible to the higher-level code.

	* src/axis.h src/axis.c src/set.c:  Revise load_range() to take axis
	pointers. Export get_num_or_time().

	* src/axis.h src/axis.c src/plot2d.c src/set.c src/datafile.c:
	Revise add_tic_user() to take axis pointer rather than AXIS_INDEX.

2015-03-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/datafile.c src/plot2d.c:
	Revise axis_unlog_interval() to use pointers rather than AXIS_INDEX.

	* src/axis.c src/axis.h src/graphics.c:
	Revise old routine axis_revert_range(AXIS_INDEX) to be a wrapper for a
	new routine axis_invert_if_requested(struct axis *).

	* src/axis.c:  Change many call sites to use the new macros and new
	routine variants taking an axis pointer rather than an AXIS_INDEX.
	This set of changes is purely internal to code in axis.c.

	* src/axis.c src/axis.h src/boundary.c src/graphics.c src/mouse.c
	src/plot3d.c:  Revise make_tics(), copy_or_invent_formatstring(), and
	setup_tics() to use axis pointers rather than AXIS_INDEX.

	* src/unset.c: Fix memory leak (linked axis function) on reset.

2015-03-12  Ethan A Merritt  <merritt@u.washington.edu>

	Begin bottom-up revision of axis handling routines to use pointers
	rather than array indices.

	* src/axis.h: Modify the template for axis tic-generation callbacks from
	  callback(AXIS_INDEX, ...) to callback(struct axis *, ...)
	* src/axis.c (widest_tic_callback): Modify widest_tic_callback to match
	  the new template, although it needs no axis information
	* src/graphics.c (xtick2d_callback ytick2d_callback)
	  src/graph3d.c (xtick_callback ytick_callback ztick_callback):
	  Modify 2D and 3D axis callbacks.
	* src/color.c (cbaxis_callback): Modify color axis callback.
	* src/axis.c (gen_tics): Modify the call sites for all of these.

	Next level up: Modify gen_tics() and all the places that call it.
	old: gen_tics(AXIS_INDEX axis, callback)
	new: gen_tics(struct axis *this, callback)

	* src/axis.h src/axis.c (gen_tics):
	* src/boundary.c src/color.c src/graph3d.c src/graphics.c: call sites

2015-03-11  Ethan A Merritt  <merritt@u.washington.edu>

	Gradually move all axis-related information into the axis structure
	itself rather than leaving it spread out among multiple arrays indexed
	in parallel.  The rationale is to allow routines that process this
	information to operate from a pointer to (struct axis) rather than from
	an array index.  This will allow dynamically allocated axis definitions.

	* src/axis.c src/axis.h src/unset.c:  Part 1 - Keep a copy of the axis
	index (e.g. SECOND_Y_AXIS) in the axis structure.  This may eventually
	go away again, but for now it allows calling a routine that wants the
	axis index from a routine that works from an axis pointer.

	* src/axis.c src/axis.h:  Part 2 - Replace the separate arrays
	timelevel[] and ticstep[] by moving their respective contents into new
	fields axis->timelevel and axis->ticstep.

	* src/axis.c src src/axis.h src/unset.c:  Part 3 - Replace the static
	array ticfmt[AXIS_ARRAY_SIZE][MAX_ID_LEN+1] with a dynamically
	maintained field axis->ticfmt.

	* src/axis.c src/axis.h:  Part 4 - Reduce length of axisname_tbl[] to
	contain only the axes that use it (i.e. no individual parallel axis
	entries).

	* src/axis.h:  New versions of axis data macros that use axis pointers.
	New macro axis_{un}do_log(struct axis *,value) analogous to
		  AXIS_{UN}DO_LOG(AXIS_INDEX,   vlaue)
	New macro axis_map(struct axis *, variable) analogous to
		  AXIS_MAP(AXIS_INDEX, variable)
	New macro tic_scale(ticlevel, struct axis *) analogous to
		  TIC_SCALE(ticlevel, AXIS_INDEX)

2015-03-08  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c: The code tracking matrix column/row headers tried
	to extract the relevant string from the wrong internal array.
	Bug #1575

2015-03-06 Allin Cottrell  <cottrell@wfu.edu>

	* src/wxterminal/gp_cairo.c:  Prevent free() of a string constant.

2015-03-05  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_api.h src/term.c src/graphics.c term/estimate.trm:
	New routine estimate_plaintext(char *enhancedtext) returns a string
	stripped of all enhanced text markup.  Use this to provide plain
	text titles in output files even though the plot title itself contains
	markup characters.
	Bug #1573

	* demo/hypertext.dem: Simplify output file (attach hypertext to only
	one set of points).

2015-03-02  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tables.c src/graphics.c (plot_filledcurves) docs/gnuplot.doc:
	The "y1=foo" and "y2=foo" options to the filledcurves style are
	confusing, as both operate on the current plot's y axis regardless
	of whether it is y1 or y2.  Rename the option as "y=foo" and remove
	mention of the older y1= and y2=.  All three are accepted on input.
	Bug #1568

2015-02-26  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c src/fit.h src/set.c src/save.c src/show.c:  "set fit nolog"

	* term/tek.trm: Remove SIXEL_set_color() terminal entry.  This function
	does not perform the operation expected by the core code (change the
	current color for lines/texts/points/etc). Instead it redefines one of
	16 linetypes.  In gnuplot version 5 this causes most objects to be
	drawn in black.  Removing the entry allows the sixel terminal to work
	more or less like a fixed color 16-pen plotter.
	Bug #1556

2015-02-24  Mojca Miklavec  <mojca.miklavec.lists@gmail.com>

	* configure.ac m4/apple.m4 term/aquaterm.trm:
	Correct "Aquaterm" to "AquaTerm" (framework name is case sensitive).

2015-02-23  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c:  Special case code for axis tickmarks in polar plots was
	incorrectly being applied to all axes, not just the polar axis.
	Bug #1569

2015-02-18  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* term/gd.trm (PNG_vector): Prevent accummulated round-off error in
	dotted line emulation by using (double) variables to track incremental
	coordinates.
	Bug #1549

2015-02-18  Ethan A Merritt  <merritt@u.washington.edu>

	* src/term.c (term_apply_lp_properties do_point load_linetype):
	Restore old (version 4) behavior of terminals such as hp pen plotter
	and pbm that do not support user-selected colors.
	Bug #1556

2015-02-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/axis.c src/set.c:  Do away with 4 utility routines
	{set|get}_writeback_{min|max} that did nothing but provide a
	round-about way to access the next field in a structure that is
	already active. E.g. axis->min = get_writeback_min(axis) becomes
	axis->min = axis->writeback_min.

	* src/boundary.c src/color.c:  Remove dead code (commented-out extra
	parameter to gen_tics()).

2015-02-15  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/axis.h (AXIS_INDEX): Change value of NO_AXIS to -2.  Make
	AXIS_ARRAY_SIZE an enum entry, again.
	(NUMBER_OF_MAIN_VISIBLE_AXES): New name, to be used instead of
	LAST_REAL_AXIS.
	(LAST_REAL_AXIS): Removed.
	(AXIS_IS_SECOND, AXIS_IS_FIRST): New macros to formalize checking
	if an axis is among the second or first axes, respectively.
	(AXIS_MAP_FROM_FIRST_TO_SECOND, AXIS_MAP_FROM_SECOND_TO_FIRST):
	New macros to centrally define how to switch from a first axis to
	its corresponding secondary axis, and vice versa.
	(axis): Change type of linked_to_primary from bool to an actual
	pointer to the linked axis struct.
	(ACTUAL_STORE_WITH_LOG_AND_UPDATE_RANGE): Missing parentheses
	around macro argument use.  Use linked_to_primary as a pointer.

	* src/axis.c (setup_tics): Cloning takes only one argument now.
	(axis_output_tics): Rely less on axis array layout.
	(some_grid_selected): Use new axis range macro.
	(get_position_type): Use correct type for axis index argument.
	(get_position_default): Use correct type for localaxis index
	variable.  Catch attempted use of z2 axis.
	(clone_linked_axes): Use only one argument.  The other is implied
	anyway.  Do some sanity checks first up.

	* src/command.c (link_command): Initialize local variables.  Axis
	link information is a pointer now. Concentrate knowledge about
	links between axes more into axis methods.

	* src/eval.c (eval_link_function): Use correct type for axis index
	argument.

	* src/gplt_x11.c (plot_struct): Use new axis range name.
	(byteswap): Define variable more locally.
	(exec_cmd): New local pointer to make code easier to understand.
	Use new axis range name.

	* src/graphics.c (adjust_offsets): Concentrate knowledge about
	links between axes more into axis methods.

	* src/plot2d.c (eval_plots): Concentrate knowledge about links
	between axes more into axis methods.

	* src/save.c (save_set_all): Use new axis range name.
	(save_range): linked_to_primary is a pointer now.

	* src/show.c (show_zeroaxis): Use new macro about distinction
	between first and second axes.

	* src/unset.c (unset_logscale): Use new axis range name.
	(reset_command): linked_to_primary is a pointer now.

	* term/x11.trm (X11_text): Loop over AXIS_INDEX should use that
	type for the index variable.  Use new axis range name.

	* docs/doc2tex.c (section, puttex): Correct use for <ctype.h> functions on
	plain char requires a cast to unsigned char.

	* docs/doc2ms.c (section): Correct use for <ctype.h> functions on
	plain char requires a cast to unsigned char.

	* src/set.c (set_dummy): Correct use for <ctype.h> functions on
	plain char requires a cast to unsigned char.
	(set_degreesign): Avoid -Wunused.
	(set_logscale): Use modified axis range name.
	(set_range): Concentrate knowledge about links between axes more
	into axis methods.

2015-02-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/gadgets.c (apply_pm3dcolor): Variable color specifier "palette cb"
	failed to handle log-scaling of the color axis.
	Bug #1560

	* src/mouse.c (load_mouse_variables): MOUSE_BUTTON was not set correctly.

2015-02-11  Erik Olofsen <olofsen@users.sf.net>

	* configure.vms:  update compile-time variables to include HAVE_VFPRINTF
	and MAX_PARALLEL_AXES

2015-02-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c (do_key_sample_point) src/graphics.c (do_plot)
	src/graph3d.c (do_3dplot): Until now "with labels" plots could have
	a point associated with each label but the point style was not
	indicated in the key.  Now it is.

	* src/qtterminal/QtGnuplotIterms.cpp (drawPoint):
	Don't draw an extra dot at the nominal origin of each point symbol.

2015-02-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/interpol.c (cp_implode):  The monotonic cubic spline code
	does not expect or handle multiple curves in a single data set.
	Thus cp_implode should not set the total number of averaged points
	to more than the total corresponding to the first curve.
	Bug #1548

2015-02-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  Allow "noautoscale" keyword to appear anywhere in
	the plot command, not just immediately after the using specifier.

	* src/interpol.c:  Rework "smooth kdensity" so that
	1) it now handles logscale on y
	2) it treats xrange as other plot styles do; in particular it no longer
	limits the x range to that of the points making up the kernel.

2015-02-02  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/term-ja.diff docs/gnuplot-ja.doc:
	Sync Japanese documentation to doc version 1.935

2015-02-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_betweencurves):  This routine now handles both
	the 3-column variant of filledcurved ("between") and the y1=<yval> or
	y2=<yval> variants. In order that various lower level routines do not
	get confused, set the same options flag FILLEDCURVES_BETWEEN for all
	of these.  (Bug fix)

2015-01-27  Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c src/show.c docs/gnuplot.doc:  Report maximum number of
	parallel axes in "show version long".  Enforce this limit when plotting.
	Document the limitation.

	* src/util.c (gprintf):  The "%h" format want a proper multiplication
	sign rather than 'x' when possible.  We already do this for UTF8 and
	CP1252, now add support for iso_8859_* encodings.

	* src/save.c:  Use "set xyplane relative" rather than the deprecated
	"set ticslevel".

2015-01-24  Ethan A Merritt  <merritt@u.washington.edu>

	* src/command.c (test_palette_subcommand):  Apply numeric locale to the
	$PALETTE datablock created by the "test palette" command.

	* term/pslatex.trm:  Separation of linetype/dashtype in version 5 means
	that term->set_color should not be turned into term->linetype.
	Bug #1545

	* src/term.c (term_test): Fix failure to save/restore arrow style.
	Use LT_SOLID for box around central text.
	Bug #1546

2015-01-20  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c:  Restore several lines of code that were inadvertantly
	lost in the revision to filledcurve processing (2015-01-16).

	* src/graphics.c src/help.c src/hidden3d.c src/interpol.c src/color.c
	src/graph3d.c:  Back in 2001 some comparator functions passed to qsort
	were made non-static to work around a bug in HPUX. The reason for that
	is long gone, so make them static as they ought to be.

2015-01-19  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/set.c src/save.c: set/save/apply text justification
	to key title.

	* src/command.c src/datablock.c src/eval.c src/eval.h src/fit.c
	src/gp_types.h src/internal.c src/misc.c src/mouse.c src/parse.c
	src/plot2d.c src/plot3d.c src/plot.c src/save.c src/set.c src/show.c
	src/standard.c src/stats.c src/term.c src/util.c term/lua.trm:
	Move the "undefined" status flag from udvt_entry->udv_undef into
	the value itself (udvt_entry->udv_value.type == NOTDEFINED).
	This prevents coding mistakes which would leave a data type in the
	value even though the variable itself is marked undefined.
	Also it allows tracking or setting the undefined status in routines
	that are passed a pointer to a value rather than a udvt_entry.

2015-01-16  Ethan A Merritt  <merritt@u.washington.edu>

	* src/tabulate.c:  Tabular output of time/date values should check the
	new flag output flag (tictype) rather than the input flag (datatype),
	and fall back to a generic time format if the axis doesn't have one.

	* src/time.c (gstrptime): If the time format explicitly includes day,
	month, or year then always do sanity checking on the interpreted date.
	Return NULL if the sanity check fails.  Previously the sanity check
	was only done if that field of the format was evaluated (i.e. it was
	not done if input garbage caused parsing to terminate early), and
	zeros were returned in the time structure with no indication of failure.
	This "failure silently returns zero" behaviour is still kept for
	hour, minute, and second input fields.

	* demo/timedat.dat: Add a line of headers to exercise the new sanity
	checks in gstrptime.

	* src/graphics.c src/plot2d.c:  Fix breakage in plot style
	filledcurves {above|below} y1=<yval>

2015-01-15  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (plot_filledcurves):  Reevaluate variable fill color
	for every polygon in the input stream to "with filledcurves".
	Bug/Feature Request #411

	* src/gadgets.c (apply_pm3dcolor) src/term.c (load_linetype):
	Remove special-cased test for monochrome terminals that can lead cause
	a failure to update the linecolor in version 5 (e.g. background->black).
	Bug fix

2015-01-13  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_read_matrix) demo/matrix_index.dem:
	Handle named indices (extra line in data file containing name of
	subsequent data matrix) for nonuniform ascii matrix data.
	Bug #1538

	* src/stats.c:  The special code path to handle ascii matrix data was
	not correct.  Fortunately the general case code works so long as the
	data is recognized as matrix data.  This removes the broken code path.

2015-01-10  Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_tics):  The order in which tics options were saved
	could produce illegal syntax in the save file.
	Bug fix

	* term/cairo.trm (cairotrm_put_text):  For some reason the bold/italic
	flags can become stuck after printing text.  This patch fixes it by
	restoring the original terminal font after printing any enhanced text
	string, but I do not understand why this would be necessary for the
	cairo terminals when other terminals do not require it.
	Test case:  set key title "{/:Bold Hello}"; plot sin(x) title "World"
	Bug fix

2015-01-10  Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm:  Ensure that the brush used for drawing dotted lines
	is reinitialized for each new line.
	Bug #1516

2015-01-10  Karl Ratzsch  <ratzsch@uni-freiburg.de>

	* docs/gnuplot.doc:  Clarify sampling used by '+' special file.

2015-01-10  Christoph Bersch <usenet@bersch.net>

	* src/multiplot.c demo/heatmaps.dem demo/layout.dem docs/gnuplot.doc:
	Fix inconsistencies in the margin and spacing options for
	"set multiplot layout".  Allow using character or screen units.
	Make the character/screen keyword sticky; i.e. it applies to all four
	values in the command `set multiplot margins screen 0.1,0.9,0.9,0.1`
	Issue appropriate errors or warnings if margins and spacing aren't set
	together.  Update and expand the documentation.

2015-01-09  Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_determine_matrix_info):  Apply numeric locale
	when reading ascii matrix data.
	Bug #1536

2015-01-07  Ethan A Merritt  <merritt@u.washington.edu>

	* configure.ac: Qt5 check via pkg-config --variable=host_bins seems
	fragile; revise to work on two different test machines.

	* src/graphics.c src/graphics.h src/plot2d.c:  Improved handling of
	boxplot data with multiple "factors" (i.e. category labels). The data
	is now sorted only once, rather than once per factor.

2015-01-07  Achim Gratz  <Stromeko@nexgo.de>

	* configure.ac: Qt5 check via pkg-config should use --variable=host_bins
	rather than --variable=exec_prefix

2015-01-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/boundary.c src/gadgets.h src/graph3d.c src/save.c src/set.c
	src/show.c src/unset.c:  Track font and enhanced flag for the key title
	separately from those for the key entries.
	Bug #1525

	* docs/gnuplot.doc src/set.c src/show.c:
	In 5.0.0 the set margin command interpreted 4 values in the order
	  set margin <left>, <right>, <top>, <bottom>
	but this order in non-intuitive and conflicts with the order in
	other commands (e.g. set multiplot layout).  CHANGE this to
	  set margin <left>, <right>, <bottom>, <top>
	Note that the code now sanity checks that (top > bottom), so this change
	will not be noticed for margins given in screen coordinates.

2015-01-06  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c src/graphics.h src/plot2d.c:  Simplify the boxplot
	data handling. Collapse the separate filter_boxplot_factor() and
	filter_boxplot() into a single routine with a single supporting
	routine compare_ypoints().  Points are now sorted using the "factor"
	as a primary key, rather than using a separate pass to overwrite
	all y values to VERYLARGE if the factor does not match.
	Inspired by a patch from Jouke Witteveen  <j.witteveen@gmail.com>
	Bug #1532

2015-01-04  Jouke Witteveen  <j.witteveen@gmail.com>

	* src/plot2d.c (check_or_add_boxplot_factor) src/gadgets.h:
	When the requested "factor" column of boxplot data is missing or
	empty, the y value was being stored instead.  Now we store
	DEFAULT_BOXPLOT_FACTOR (-1) instead, since this can never be
	mistaken for a label array index.
	EAM: Store this factor index in z rather than ylow.  This prepares
	for a later patch to get rid of repeated swapping of y and ylow
	values rather than simply looking at the stored index directly.
	Bug #1532

2015-01-03  Jouke Witteveen  <j.witteveen@gmail.com>

	* src/plot2d.c (check_or_add_boxplot_factor):  Distinguish between
	boxplot category labels where one is a leading substring of the other.
	Bug #1532

2015-01-01  Ethan A Merritt  <merritt@u.washington.edu>

	* src/set.c src/boundary.c src/graph3d.c:  Add a sanity check to
	ensure that the top margin is above the bottom margin.  This corrects
	for possible user confusion or error in specifying on one line
	set margins <left>, <right>, <bottom>, <top>   # (wrong order)

2014-12-30  Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp (qt_atexit): Sanity check.

2014-12-28  Bastian Maerkisch  <bmaerkisch@web.de>

	* docs/titlepag.ms:  Update to version 5.

	* docs/gnuplot.doc:  groff tables for stats command. Several groff
	syntax fixes and minor layout tweaks.

	* config/mingw/Makefile:  New targets grops and gropdf.

	* config/config.os2 config/makefile.os2:  Update to version 5.

	* src/term_api.h src/os2/gclient.c:  Eliminate compiler warnings.

	* src/wxterminal/wxt_gui.cpp:
	Use cairo_show_page() rather than cairo_surface_show_page()

2014-12-26  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/qtterminal/qt_term.cpp:  Remove dead code. Avoid implicit
	casts to unsigned int.

2014-12-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgraph) src/win/wgdiplus (drawgraph_gdiplus):
	Failure to re-initialize the font name and size for enhanced text.
	Bug #1529

2014-12-24  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* src/win/wgdiplus.cpp (SetFont_gdiplus):  Font names may be given in
	current encoding. Patch #712

2014-12-23  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/win/wgnuplot.mnu: Parameter input for atan2() was wrong. SF
	patch #1530 by Shigeharu Takeno.

	* src/win/wgnuplot-ja.mnu: Dito.

2014-12-21  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/wxterminal/wxt_gui.cpp:  Track the most recent directory used
	by the export-to-file widget.

2014-12-19 Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp (wxtPanel::wxt_cairo_create_bitmap):
	Another fix for the wxt terminal linked against wxWidgets 3.0.
	wxWidgets + wxgtk version 2.8 were fine with the sequence
	    delete cairo_bitmap;
	    cairo_bitmap = new wxBitmap(*image);
	but version 3.0 hits a use-after-free that can be attributed to a
	UI-triggered event invoking OnPaint(), which tries to access the old
	bitmap before the new one has been assigned.  Omitting the delete
	"cures" this, but then there is a memory leak.  Empirical tests seem
	to show that it suffices to defer the delete operation until after
	the assignment operation.  A proper interlock might be better yet.

2014-12-18 Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_parse_string_field): If an input data file uses
	Mac OS-9 format with \r as a line terminator, the entire file is
	mis-recognized as one very long line.  If there are nevertheless
	recognizable field separators, the code to split out string fields into
	separate saved storage goes crazy, consuming huge amounts of memory.
	Detect and warn if an input string field exceeds MAX_LINE_LEN.
	Bug #1445 (also see Bug #1355)

	* src/command.c (do_line):
	Report error if a "load" file fails to close an open bracketed clause.
	Bug #1522

2014-12-18  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* term/win.trm (WIN_set_font): Revert incorrect change from
	strncpy() to safe_strncpy().

2014-12-16  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* configure.ac: Added copy of former configure.in, updated to
	preferences of autoconf-2.69, automake-1.14.

	* configure.in: Dropped

	* mkinstalldirs, missing, install-sh, depcomp: Update from recent
	autoconf/automake.

	* src/syscfg.h (RETSIGTYPE): Note that former fall-back definition is now
	hardwired.

2014-12-16  Bastian Maerkisch  <bmaerkisch@web.de>

	* win/gnuplot.iss: Change working directory of shortcuts to
	current users's document folder. Works on Vista and upwards.
	Bug #1415

2014-12-15  Bastian Maerkisch  <bmaerkisch@web.de>

	* demo/kdensity.dem:  End demo with pause / reset

	* config/mingw/Makefile:  Convert eol style of text files to CRLF
	during install.
	Bug #1520

2014-12-15 Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c (do_event) src/gplt_x11.c src/wxterminal/wxt_gui.cpp
	src/qtterminal/QtGnuplotWidget.cpp:
	Distinguish auto-generated replot events (e.g. replot-on-resize) from
	user-generated replot events ('e' hotkey or toolbar replot widget).
	Use GE_replot for the former, GE_keypress('e') for the latter.
	Reject auto-generated replot requests while multiplot is active.
	(wxt was already doing this; now we extend it to qt and x11 also).
	Bug #1521

	* src/wxterminal/wxt_gui.cpp:  Do not change working directory in
	file export widget.

2014-12-14  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/command.c src/command.h src/mouse.c src/mousecmn.h src/plot.c
	src/qtterminal/qt_term.cpp src/win/wgraph.c src/win/wpause.c
	src/wxterminal/wxt_gui.cpp src/wxterminal/wxt_term.h:
	Revise "pause mouse" handling on Windows to handle windows, wxt, qt
	and caca terminals.  Test if the current terminal window is actually
	open before waiting for mouse input. (Not yet implemented for qt.)
	The windows terminal no longer expects the core code to reset the
	paused_for_mouse flag (like the qt, wxt and x11 terminals).  The
	code no longer opens an invisible window to handle "pause mouse" and
	code to close this window when "pause mouse" mode ends can thus be
	removed.  Interrupting pause mouse via Ctrl-C should now be possible.
	Bug #1502

	* term/caca.trm (waitforinput):  Support "pause mouse" if the graph is
	shown in a window. Bugfix.

	* docs/windows/doc2html.c:  Rename variable "basename" to "name" to
	avoid a name conflict on some platforms.

2014-12-13 Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.cpp (wxtPanel::wxt_cairo_refresh):
	The wxt terminal has been failing when linked against wxgtk3.0.
	The overt symptom is a library assert statement sometimes followed by a
	segfault:
	  ./src/gtk/dcclient.cpp(2043): assert "m_window" failed in DoGetSize():
	  GetSize() doesn't work without window [in thread 7fb21f386700]
	  Call stack:
	  [00] wxOnAssert()
	  [01] wxClientDCImpl::DoGetSize(int*, int*) const
	  [02] wxBufferedDC::UnMask()
	Both the assert and the segfault are due to the plot window not yet
	having been rendered on the screen. The documented wxwidgets function
	panel->IsShownOnScreen() fails to reliably detect this condition, so we
	must use our own window id bookkeeping to skip any refresh commands
	before the window appears.

	Gnuplot Bug #1401
	Debian Bug http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=750045
	wxWidgets Bug  http://trac.wxwidgets.org/ticket/16034

2014-12-11 Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/gp_cairo.c (gp_cairo_move):  Do not let zero-length
	move interrupt the current polyline context (dash pattern, end caps,
	polygon closure).
	Bug #1523

	* src/datafile.c (df_generate_pseudodata):  Prevent infinite loop if
	sampling range is zero.

	* src/plot2d.c (eval_plots):  Save/restore original dummy variable name
	for 'x', so that a sampling range using a named variable does not
	clobber it.

2014-12-11  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c (drawgaph) src/win/wgdiplus.c (drawgraph_gdiplus):
	Ignore intermediate move commands in a polyline sequence. Fixes
	custom dashpatterns for splots and improves drawing performance. Note
	that custom dashpatterns are only available for the GDI+ variant.
	Bug #1523

2014-12-08 Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (parse_range) src/datafile.c (df_generate_pseudodata):
	Allow an optional sampling interval as part of the sampling range spec
	for pseudofile '+' in a plot command:
	    plot sample [a=0:360:10] '+' using (3+sin(a)):(cos(a)) with points

2014-12-08  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/term.c (do_point):  Always use solid lines to draw point symbols.

	* src/win/wgraph.c term/win.trm:  Make sure that the window size
	variables are initialized if wgnuplot.ini does not exist yet.
	Fixes a regression introduced on 2014-10-16.

2014-12-07 Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (df_generate_pseudodata): The sampling variable in a
	sampled plot is not necessarily x, so "set log x" should not affect it.
	E.g.    set log x; set angle degrees;
	        plot sample [a=1:360] '+' using (3+sin(a)):(cos(a)) with points
	Bug #1495

2014-12-05 Ethan A Merritt  <merritt@u.washington.edu>

	* term/PostScript/prologue.ps:  Re-order dash types to more closely
	match the cairo and qt terminals.

2014-12-03 Ethan A Merritt  <merritt@u.washington.edu>

	* src/internal.c: Indentation cleanup for type-check macro BAD_DEFAULT

	* src/gp_types.h: New state flag INVALID_NAME for internal variables.
	src/eval.c (pop_or_convert_from_string eval_link_function):
	Consolidate initial tests for invalid internal variable type.
	Test for the correct use of linked axis mapping function variables
	(f(x) for x axis, f(y) for y axis, etc).
	Bug #1519

2014-12-01 Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c (clone_linked_axes): Sanity check for linked axis via and
	inverse functions used fabs() with wrong grouping of parentheses.
	Bug #1519

2014-11-25 Ethan A Merritt  <merritt@u.washington.edu>

	* src/qtterminal/qt_term.cpp: Increase the number of pre-defined dash
	patterns for the qt terminal to 5, matching the order used by the cairo
	terminals.

2014-11-23 Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/set.c: The full names of the parallel axes are too long
	to fit in character arrays built to hold the simpler name "x2/cb/etc".
	But the 'set' commands using these arrays do not apply to parallel axes,
	so we avoid problems by never loading these arrays for parallel axes.

2014-11-21 Ethan A Merritt  <merritt@u.washington.edu>

	* term/gd.trm:  Replace the dotted-line code in PNG_vector with an
	adaptation of the dash pattern code used by canvas.trm.

	* src/term.c (term_apply_lp_properties):  Special linetype LT_AXIS is
	intended to produce a dotted line if possible, even on terminals that
	do not support the general dash pattern mechanism introduced in v5.
	This means that when rendering lines with linetype LT_AXIS the
	dashtype code should not be called at all. This bug affected at least
	the gd and qt terminals.
	Bug #1516

	* src/axis.c (axis_name) src/save.c: paxis tics and range settings
	were not being saved.

	* src/show.c: formatting typos (missing \t at beginning of line)

	* src/graphics.c (map_position_r): If only the x coorinate delta is
	requested, don't bother to calculate delta y, particularly because
	delta y=0 will fail if y is log scale.
	Bug #1512

2014-11-21  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/config/mingw/Makefile:  Build gnuplot-tikz.help.

	* src/config/config.mgw:  Sync with config.h created by autoconf tools.

2014-11-18 Ethan A Merritt  <merritt@u.washington.edu>

	* src/wxterminal/wxt_gui.*: The toolbar widgets for replot/zoom/grid
	require intervention by the core code in order to act.  This is not
	possible when in -persist mode after the parent process has exited,
	so disable the toolbar widgets.

2014-11-16  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* term/Makefile.am.in (Makefile.am): Drop creation of conditional
	definition of build_lua.
	(all, $(srcdir)/lua/gnuplot-tikz.help): Drop rules for lua help
	file fragment generation.

	* docs/Makefile.am (LUA_HELP) [BUILD_LUA]: Define to name of lua
	help file fragment.
	($(LUA_HELP)) [BUILD_LUA]: Build lua help file fragment.
	(allterm.h): Depend on $(LUA_HELP).

	* term/lua.trm: Make inclusion of help file fragment depend on
	HAVE_LUA.  Needed for doc builds that unconditionally include all
	terminals' help. Remove "lua/" from include file name.

2014-11-15  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* term/Makefile.am.in ($(srcdir)/lua/gnuplot-tikz.help): Test for
	file existence is -f, not -x.

2014-11-15 Ethan A Merritt  <merritt@u.washington.edu>

	* term/Makefile.am.in: rebuild term/lua/gnuplot-tikz.help
	only if --with-lua, otherwise skip this in building the docs

2014-11-12 Ethan A Merritt  <merritt@u.washington.edu>

	* term/lua/gnuplot-tiz.help (remove from repository)
	* term/Makefile.am.in: rebuild term/lua/gnuplot-tikz.help

2014-11-07 Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* term/luz/gnuplot-tikz.lua:  Use \errmessage rather than \PackageError
	because not all TeX variants provide the latter.

2014-11-06 Ethan A Merritt  <merritt@u.washington.edu>

	* src/time.c (gstrftime xstrftime) docs/gnuplotdoc demo/timedat.dem:
	Introduce a new time format modifier 't', used to distinguish dates
	from times.  This allows formatting time data as hours/minutes/seconds
	relative to time=0 rather than as a calendar date.  Compare these
	representations of the stored value -3672.50 seconds:
	    default date format    # "12/31/69 \n 22:58"
	    format "%tH:%tM:%tS"   # "-01:01:12"
	    format "%.2tH hours"   # "-1.02 hours"
	    format "%tM:%.2tS"     # "-61:12.50"

2014-11-04  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/wxterminal/wxt_gui.cpp: Restore Copy-to-Clipboard option in wxt
	toolbar.

2014-11-04 Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c (f_dollar f_column):  When a data field containing NaN
	is encountered, df_readline returns DF_UNDEFINED to the caller.
	This is sufficient to handle plotting that point per se, but if the
	value is also used in evaluation of an arithmetic expression with a side
	effect then this undefined status flag is not available. For consistency
	we now pass NaN to the expression evaluation code as well.  E.g.
		plot FOO using 1:(side_effect=f($2))
	could leave some random (probably left-over) value in side_effect.
	Now if $2 is NaN and for example f(x) = (x+foo) then side_effect becomes
	NaN also.  Before this side_effect would have received some other,
	incorrect, numerical value.

	* src/save.c (save_dashtype):  dashtype -1 is an internal flag; do not
	save it to an external file.

2014-11-02  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* config/config.oww: If we're going to use strnlen_s for strnlen,
	must define according C99 library extension macro.

	* src/set.c (set_dashtype): Command input following the 'default'
	option would cause a crash by double-deleting from linked list.
	(parse_histogramstyle): Option "title" is not protected against
	multiple use.  This might cause double-free of font field.

	* src/bf_test.c (main): Move file-open error handling further up,
	to avoid (harmless) memory leak.  Use standard failure return
	instead of magic constant.  Allocations were relying on
	sizeof(float)==sizeof(float *).

	* src/getcolor.c (GROW_GRADIENT): Query realloc()ed pointer for its
	own type's size; safer than making assumptions about it.
	(approximate_palette): Dito; and in this case the type was
	actually wrong.

2014-11-01 Ethan A Merritt  <merritt@u.washington.edu>

	* term/cairo.trm (cairotrm_put_text) src/wxterminal/wxt_gui.cpp
	(wxt_put_text):  Start each top level enhanced text recursion  using
	the full font name given in "set term font 'foo'", rather than the
	most recent font stored in the plot (which is only the font family
	name, not bold/italic/other).  This maintains bold or italic in the
	original font name, but I am not entirely convinced that it cannot
	overwrite an intentional change in font family.
	Bug #1505

2014-10-31 Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  Issue a warning if someone tries to specify a
	sampling range for a data plot.
	Bug #1510

2014-10-31  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/wxterminal/wxt_gui.cpp (wxtFrame::OnSize):  Only replot on
	resize if the wxt settings were properly initialized by wxt_init().
	On Windows, this would otherwise cause many graph windows to be
	opened when the first plot command is issued and gnuplot finally
	hangs or crashes.
	Bugfix.

2014-10-30  Daniel J Sebald <daniel.sebald@ieee.org>

	* src/wxterminal/wxt_gui.{cpp|h}: Replace the clipboard widget on the
	wxt terminal toolbar with a widget to save current plot to a file.
	EAM: Output to PNG via standard wxWidgets component
	     Output to SVG or PDF by replaying cairo history for current plot.

2014-10-29  Christoph Bersch <usenet@bersch.net>

	* term/lua/gnuplot-tikz.lua term/luz.trm:  Boxed text support.

2014-10-29  Shigeharu Takeno  <shige@iee.niit.ac.jp>

	* docs/gnuplot.doc docs/term-ja.diff docs/gnuplot-ja.doc:
	Fix typos. Sync Japanese documentation to 1.921

2014-10-26 Ethan A Merritt  <merritt@u.washington.edu>

	* term/wxt.trm src/wxterminal/wxt_term.h src/wxterminal/wxt_gui.*:
	Add a checkbox to the tool widget controlling whether or not the
	plot is redrawn via "replot" as the terminal window is resized.

2014-10-19  Christoph Bersch <usenet@bersch.net>

	* term/lua/gnuplot-tikz.lua:  Missing initializations.
	Bug #1503

2014-10-16  Christoph Bersch <usenet@bersch.net>

	* src/stats.c:  The stats code was confusing the x and y dimensions of
	matrix data.  E.g. it would report a 5X7 matrix as being 7X5, and
	mis-calculate the indices of the min/max values.
	Bug #1501

	* term/lua/gnuplot-tikz.lua:  Fix incorrect font test.
	Bug (Feature Request) #409

2014-10-16  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/win/wgraph.c term/win.trm:  The `size` option
	now refers to the canvas size instead of the window size in order to be
	consistent with the qt and wxt terminals.  The window size can still be
	set with the new `wsize` option. Settings are now included in output of
	`show term`.
	Bug #1400

2014-10-11  Christoph Bersch <usenet@bersch.net>

	* term/lua/gnuplot-tikz.lua:  LT_AXIS and LT_SOLID imply specific
	dash types.
	Bug #1491

2014-10-11  Hans-Bernhard Broeker  <broeker@physik.rwth-aachen.de>

	* src/axis.c (copy_or_invent_formatstring): Lower end of axis may
	need more precision in invented format than the distance between
	max and min. Bug #1496

2014-10-08 Ethan A Merritt  <merritt@u.washington.edu>

	* src/save.c (save_all): Write out the filename last used for plotting.
	This makes a saved plot command referencing '' slightly more useful.

2014-10-07 Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c (lf_push lf_pop):  If lf_push/lf_pop are invoked from
	do_string_and_free to handle bracketed if{} or do{} expressions, they
	should not touch the call arguments ARG1, ARG2, ...  Save/restore of the
	call arguments is only needed if lf_push/lf_pop are invoked by "call".
	Bug #1494

2014-10-05 Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.h src/set.c (set_format):

	Timefmt revision part 6
	- Add tictype keywords to "set format {axis} {time|geographic|numeric}"
	- Reset to numeric on "unset format"

2014-10-04 Ethan A Merritt  <merritt@u.washington.edu>

	* src/axis.c src/axis.h src/datafile.c src/fit.c src/mouse.c src/parse.c
	src/save.c src/set.c src/setshow.h src/show.c src/unset.c
	docs/gnuplot.doc demo/gantt.dem:

	Timefmt revision part 1 of 4
	- Remove axis->timefmt and replace it with a single global timefmt.
	  This is what the documentation has always said, but it breaks the
	  undocumented command:   set timefmt y "fmt-different-from-xaxis-fmt"
	- Add a new flag axis->tictype to control interpretation of tic format.
	  axis->datatype will continue to control input format interpretation.
	- If only a single parameter is passed to timecolumn() try to emulate
	  the version 4 behavior (use global timefmt)

	* src/save.c src/save.h src/setshow.h src/show.c:

	Timefmt revision part 2 of 4
	- Replace macro SAVE_NUM_OR_TIME with routine save_num_or_time_input().
	  This routine uses _input_ data format, mostly for reporting axis range.

	* src/save.c src/save.h src/show.c:

	Timefmt revision part 3 of 4
	- Show and save xyz positions using time-format coordinates when needed.
	  Note that like axis ranges, these are meant to be read in again later
	  so they are written using the input format not the output format.

	* src/axis.c (get_tics copy_or_invent_formatstring) src/set.c
	src/unset.c src/show.c src/save.c docs/gnuplot.doc demo/world.dem:

	Timefmt revision part 4 of 4
	- New command set {xyz}tics {time|geographic|numeric} sets axis->tictype
	- Output formats chosen based on axis->tictype rather than axis->datatype
	- Report axis->tictype setting with axis->format in "show" and "save"

2014-10-03  Christoph Bersch <usenet@bersch.net>

	* term/lua/gnuplot-tikz.lua:  linetype -1 must reset dashtype to solid.
	Bug #1491

2014-10-01 Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c (arrow_parse): Remove order dependence of "fixed" keyword.

	* src/hidden3d.c (draw_edge): When an arrow is split into segments by
	hidden surface processing, only keep the arrowhead on the original tip.

	* src/plot2d.c (get_data): Timedata for HISTOGRAMS requires a special
	case.

	* src/boundary.c src/color.c src/gadgets.c src/gadgets.h src/graph3d.c
	src/graphics.c src/hidden3d.c src/misc.c src/mouse.c src/multiplot.c
	src/term.c:  Remove wasted parameter passed to apply_pm3dcolor(),
	reset_textcolor(), and get_offsets().

	* docs/gnuplot.doc:  Replace outdated section on `set xdata time`.

2014-09-26 Ethan A Merritt  <merritt@u.washington.edu>

	* term/js/gnuplot_mouse.js:  Typo in logical test for hypertext.

	* src/axis.h src/save.c src/set.c src/show.c src/unset.c src/graphics.c
	src/graph3d.c:   set [*]tics {{no}enhanced}

2014-09-24  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgraph.c term/win.trm:  The windows terminal allowed users
	to change linetypes via an ini file or with the help of a dialog.  This
	has been superseeded by the more general `set linetype` mechanism.
	The old code is still available but only active with WIN_CUSTOM_PENS
	defined during compilation.

	* src/win/wgraph.c src/win/wgidplus.c:  Accept zero point size.
	Eliminates drawing of unwanted point symbols for labelled contours.
	Bugfix

2014-09-24 Ethan A Merritt  <merritt@u.washington.edu>

	* term/aed.trm term/v384.trm
	config/makefile.dj2 config/makefile.emx config/makefile.vms
	configure.vms docs/doc2texi.el docs/Makefile.am src/makefile.all
	src/makefile.awc src/term.h:

	Remove obsolete terminals:
	aed:  pre-1980 display device ($15,000) with 500x500 pixels, 256 colors
	v384: Vectrix VX 384 mid 1980s graphics display terminal ($5000) with
	      672x480 pixels, 512 colors

	* src/interpol.c:  Force the number of intervals used for interpolating
	monotonic cubic splines ("smooth mcsplines") to be at least twice the
	number of data points.

2014-09-22  Christoph Bersch <usenet@bersch.net>

	* src/misc.c (parse_fillstyle): Remove order dependence of keyword
	"transparent".

	* term/lua.trm term/lua/gnuplot-tikz.lua:
	Support RGBA linecolors and LT_NODRAW.  Add a linewidth terminal option.

2014-09-20  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/fit.c src/fit.h src/save.c src/set.c src/show.c src/unset.c
	docs/gnuplot.doc demo/fit.dem:  Remove xerrors option (which requires 3
	columns) since it is not like the xerrorbars plot style (which requires 4).
	Rename `noerrors` option to `unitweights`.  Let the fit command default
	to `unitweights`, i.e. do not interpret the last column of the using
	spec as z-errors.  Add a command `set fit v4|v5` to switch between
	old-style command line syntax and the new one. Default to `v5`, but
	`reset` does not change the current setting.

	Note that this change is backward-incompatible with v5-rc1 and v5-rc2.
	However it restores compatibility with v4, subject to the restriction
	that all independent variables must appear in the "fit" command itself
	(see below).

	* src/fit.c: Ethan A Merritt - use the tally of dummy variable names
	to detect version 4 syntax in which the last column of a using spec
	contains zerror but no "*error" keyword is provided.

2014-09-18 Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c src/parse.c src/parse.h (int fit_dummy_var[]):
	Track the occurrence of dummy variable names in a fit command. This lets
	us count the independent variables so long as they are not obscured.
	   fit f(x,y) 'data' using 1:2:3:4      # flags use of 'x' and 'y'
	   fit x*y    'data' using 1:2:3:4      # flags use of 'x' and 'y'
	   g(x) = x*y;
	   fit g(x)   'data' using 1:2:3:4      # flags 'x', doesn't notice 'y'
	In each case fit_dummy_var[0] is 1.  In the 3rd case fit_dummy_var[1]
	is 0 but should be 1.  Fixing this would be quite hard.

2014-09-18  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/win/wgnuplib.h src/wgraph.c term/win.trm:  windows terminal
	supports the toggle command.

2014-09-18 Ethan A Merritt  <merritt@u.washington.edu>

	* src/datafile.c:  Revised error message for datafile open failure.

2014-09-14 Ethan A Merritt  <merritt@u.washington.edu>

	* src/tables.c src/command.c src/command.h docs/gnuplot.doc:
	New command `toggle {<plotno> | "plottitle" | all} has the same effect
	as left-clicking on the key entry for a plot shown by an interactive
	terminal (qt, wxt, x11).

2014-09-12  Bastian Maerkisch  <bmaerkisch@web.de>

	* src/mouse.c (xDateTimeFormat):  Use ggmtime() instead of gmtime() to
	avoid platform specific restrictions.
	Bug #1470

2014-09-09  Pieter-Tjerk de Boer <p.t.deboer@utwente.nl>

	* docs/gnuplot.doc:  Update help on fit to new command syntax.

	* src/fit.c:  Fix init of num_errors.

2014-09-09  Akira Kakuto <kakuto@fuk.kindai.ac.jp>

	* src/win/wpause.c (PauseBox):  Do not wait for further events after
	pause dialog box was closed. Bugfix.

2014-09-08  Christoph Bersch <usenet@bersch.net>

	* demo/stringvar.dem docs/gnuplot.doc src/internal.c (f_word f_words):
	Modify the word() and words() functions to recognize quoted strings
	inside the top level string as single entities.

2014-09-08  Christoph Junghans <ottxor@users.sourceforge.net>

	* configure.in:  New option --without-libcerf

2014-09-08 Ethan A Merritt  <merritt@u.washington.edu>

	* src/misc.c (lp_parse parse_colorspec):  Allow a quoted colorname to
	immediately follow the keywords lc|linecolor|fc|fillcolor; i.e. in this
	case the additional rgbcolor keyword is optional.

2014-09-07 Ethan A Merritt  <merritt@u.washington.edu>

	* src/plot2d.c:  "set linetype 1 pt 'A'; plot x with lp" requires that
	the plot->labels field be initialized before plotting.

	* src/save.c:  handle PT_CHARACTER when saving linetype

2014-09-05 Ethan A Merritt  <merritt@u.washington.edu>

	* src/term_src/api.h src/gadgets.c src/hidden3d.c src/misc.c
	src/plot2d.c src/plot3d.c src/save.c src/set.c src/ show.c src/term.c:

	The field lp_style_type.pointflag was variously used as a Boolean,
	an integer, or a magic number indicating an uninitialized state.
	Clean this up by replacing it with a bitfield lp_style_type.flags
	with defined bits LP_SHOW_POINTS LP_NOT_INITIALIZED LP_EXPLICIT_COLOR.
	This has the side effect of allowing a trivial fix for a regression
	in 4.6.5 that caused "set hidden3d; splot ... lc <foo>" to ignore the
	requested color.  See Bugs #1284 #1475

2014-09-05  Karl Ratzsch  <ratzsch@uni-freiburg.de>

	* docs/plotstyles.gnu:  Dummy up a version of the missing/NaN figure
	for use with Windows documentation.

2014-09-04 Ethan A Merritt  <merritt@u.washington.edu>

	* src/mouse.c src/term_api.h src/gplt_x11.c
	src/qtterminal/QtGnuplotScene.cpp src/qtterminal/qt_term.*
	src/wxterminal/wxt_gui.cpp src/wxterminal/wxt_term.h
	term/caca.trm term/README term/win.trm term/x11.trm:

	Add a 2nd parameter to the API term->modify_plots(operations, plotno).
	All terminals for which this entry point is not NULL are updated
	accordingly.  This patchset does not by itself add any new
	functionality or change user-visible behavior.  It prepares for later
	adding command-line equivalents to mouse operations like "toggle".

2014-09-04 Ethan A Merritt  <merritt@u.washington.edu>

	* src/graphics.c (place_arrows) src/graph3d.c (place_arrows3d):
	Revert arrowhead patch of 2014-08-18.  Document that if you want a
	dashed arrow shaft it is best to use "nofilled" for the arrow head.
	Bugs #1460 #1476

2014-09-03  Ethan A Merritt  <merritt@u.washington.edu>

	* src/graph3d.c src/hidden3d.c:  "splot ... with dots" was not drawing
	the dots.
	Bug #1474

2014-08-31  Ethan A Merritt  <merritt@u.washington.edu>

	* src/stats.c docs/gnuplot.doc:  Calculate and report sample standard
	deviation (STATS_ssd) as well as the population standard deviation
	(STATS_stddev).  Provide formulae for the reported quantities in the
	LaTeX documentation, and document the difference between
	_ssd and _stddev in all documentation formats.

	* src/stats.c:  In version 5 when there is no using spec df_readline()
	always returns at most the number of columns present on the first line.
	Bug #1472

2014-08-30  Petr Mikulik  <mikulik@physics.muni.cz>

	* config/config.os2: Use _strtoll.

2014-08-29  Petr Mikulik  <mikulik@physics.muni.cz>

	* src/gplt_x11.c (exec_cmd process_configure_notify_event):
	Add missing #ifdefs: USE_X11_MULTIBYTE and PIPE_IPC.

2014-08-21  Ethan A Merritt  <merritt@u.washington.edu>

	* src/fit.c:  Handle columnheaders in input to "fit".
	Bug #1467

	* src/misc.c (lp_parse):  Flag "set object N lt <lt>" as an error,
	since currently this must be done be "set object N fs bo <lt>".
	Probably we should figure out how to make this command work, but
	better to issue an error than accept it and then ignore it.
	Bug #1460

	* src/bf_test.c:  Use HAVE_STDLIB_H and HAVE_MALLOC_H to include proper
	header file for calloc().  "Jun T." <takimoto-j@kba.biglobe.ne.jp>.

2014-08-21  Ethan A Merritt  <merritt@u.washington.edu>

	* Branchpoint for 5.0 (cvs tag -b branch-5-0-stable)

	The main (development) branch is now marked 5.1 and will eventually
	be used as the basis for a future release named gnuplot version 5.2.

>>> Earlier entries are in ChangeLog.5
